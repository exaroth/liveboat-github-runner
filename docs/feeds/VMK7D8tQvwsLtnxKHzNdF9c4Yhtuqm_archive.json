{"id":"VMK7D8tQvwsLtnxKHzNdF9c4Yhtuqm","title":"Hacker News: Best","displayTitle":"HN","url":"https://hnrss.org/best","feedLink":"https://news.ycombinator.com/best","isQuery":false,"isEmpty":false,"isHidden":false,"itemCount":30,"items":[{"title":"Hard numbers in the Wayland vs. X11 input latency discussion","url":"https://mort.coffee/home/wayland-input-latency/","date":1737910672,"author":"todsacerdoti","guid":188,"unread":true,"content":"<p>Yesterday, I read this blog post:\n<a href=\"https://gist.github.com/generic-internet-user/e8eec46ce159571032115f6fb064523c\">Wayland Cursor Lag: Just give me a break already...</a>,\nwhere a Linux user discusses their frustration with input latency under Wayland.\nThey detailed their own subjective experience of the problem,\nbut failed to produce hard evidence.</p><p>Even though I'm a very happy user of wayland overall,\nI share the blog post's author's subjective impression that there's more\ncursor lag under Wayland than under X11.\nIn my opinion, their experiment was limited by their phone camera's 90 FPS,\nwhich really doesn't feel like it's enough to get conclusive numbers\nwhen we're talking about differences which are probably on the order of\nsingle screen refresh cycles.</p><p>So I thought: hey, I have a phone with a 240 FPS camera mode,\nI bet that's enough to get some conclusive results!</p><p>I simply pointed my phone's camera at the screen and desk using my left hand,\nmade sure to get the mouse cursor, the mouse and my right hand in frame,\nand recorded myself repeatedly flicking the mouse with my finger.\nI recorded myself flicking it 16 times under Wayland,\nlogged out of the GNOME Wayland session and into a GNOME X11 session,\nthen did the same there.</p><p>I then converted the two resulting video files into a series of JPEGs\nusing ffmpeg (<code>ffmpeg -i &lt;input file&gt; %04d.jpg</code>),\nand counted from the first frame where I could see the mouse move\nuntil the first frame where I could clearly see that the cursor had moved.</p><p>I elected to include the start and end frame;\nso if I saw the mouse move in frame 1045,\nthen I saw the cursor move in frame 1047,\nI would count that as 3 frames.</p><p>Here's an example which depicts a latency of 3 frames (requires JavaScript):</p><div><div><blockquote><p>Here's a frame from before the mouse has begun moving.</p></blockquote></div><div><blockquote><p>The mouse still hasn't moved.</p></blockquote></div><div><blockquote><p>Here, the mouse has just about started moving,\nso I consider this \"frame 1\".\nThe cursor hasn't moved yet.</p></blockquote></div><div><blockquote><p>The mouse moves a bit further, but the cursor still hasn't moved.\nThis is \"frame 2\".</p></blockquote></div><div><blockquote><p>This is the frame where the cursor starts moving.\nThis is \"frame 3\", so I would note down this sequence\nas taking 3 frames.</p></blockquote></div></div><ul><li>Distro: Fedora Workstation 41</li><li>GPU: AMD Radeon RX 7900XT</li><li>Monitor: Gigabyte M32U (4k IPS @ 144.99, no DPI scaling)</li><li>Mouse: Logitech G502 Lightspeed</li><li>Camera: iPhone 15 Pro, slo-mo 240 FPS</li></ul><p>The main limitations of this experiment are:</p><ul><li>240 FPS still isn't  much. With my 144Hz screen, I have less than\ntwo camera frames per screen refresh. This introduces some random variance.</li><li>Pixels don't switch instantly, so there are ambiguous frames where the cursor\nis  starting to become visible in its new location.\nI decided to count the cursor as \"having moved\" when there is a clearly visible\ncursor in a new location on the screen, even if the pixels haven't fully lit up.</li><li>For some reason, the video recording from my phone contains some duplicate frames.\nI don't know why this happens. I decided to interpret these duplicate frames\nas a representation of a frame's worth of time passing, so I counted them as normal.</li></ul><p>All these factors introduce some uncertainty in the results.\nHowever, they  affect Wayland and X11 equally, so with enough data,\nit should all even out.</p><p> Another caveat I should clearly point out is that there are\nmany other Wayland compositors out there than GNOME's, and I have not tested them.\nFor that matter, there are other GPU drivers out there than AMD's.\nOther compositors and other GPU drivers may show different results.</p><p>Here's the data I captured:</p><p>Wayland, on average, has roughly 6.5ms more cursor latency than X11 on my system.\nI don't have the statistics expertise necessary to properly analyze\nwhether this difference is statistically significant or not,\nbut to my untrained eye, it looks like there's a clear and consistent difference.</p><p>Interestingly, the difference is very close to 1 full screen refresh.\nI don't know whether or not that's a coincidence.</p><p>Here are the numbers in chart form:</p><p>In my mind, these results are conclusive proof that there  a difference\nin input latency between X11 and Wayland, at least with my hardware,\nand that the difference is large enough that it's plausible for some people to notice.</p><p>Further testing on more varied hardware and refresh rates is necessary\nto get a clear picture of how wide-spread the problem is and how large it is.\nIt's likely that the magnitude of the difference varies based on factors\nsuch as which compositor is used and what the refresh rate of the screen is.</p><p>I probably won't undertake that further testing,\nbecause this is all very time intensive work.\nMy goal was only to see if I could conclusively measure  difference.</p><p> I want to add a note here about what this testing does  show.\nIt does not show that there's higher input latency \nin Wayland compared to X11 in a way which affects, for example, games.\nIt is possible that this added latency is entirely cursor-specific\nand that Wayland and X11 exhibit the exact same input latency\nin graphical applications and games.\nIt is my understanding that the cursor is handled very differently from\nnormal graphical applications.\nFurther testing would be necessary to show whether Wayland has more input latency\n than X11.</p>","contentLength":5083,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://news.ycombinator.com/item?id=42831509"},{"title":"The Microsoft 365 Copilot launch was a disaster","url":"https://www.zdnet.com/home-and-office/work-life/the-microsoft-365-copilot-launch-was-a-total-disaster/","date":1737909231,"author":"belter","guid":223,"unread":true,"content":"<p>You'd think that Microsoft's marketing team would have learned something after last year's shambolic rollout of the <a href=\"https://www.zdnet.com/article/microsoft-delays-its-troubled-ai-powered-recall-feature-yet-again/\">Recall feature</a>. Maybe, before trying another rollout, they might talk to a few customers, do some focus groups, even ask a few members of the press and analyst community for their advice.</p><p>Shortly after the New Year, someone in Redmond pushed a button that <a href=\"https://www.zdnet.com/article/its-official-all-your-office-apps-are-getting-ai-and-a-price-increase/\">raised the price</a> of its popular (84 million paid subscribers worldwide!) Microsoft 365 product. You know, the one that used to be called Microsoft Office? Yeah, well, now the app is called Microsoft 365 Copilot, and you're going to be paying at least 30% more for that subscription starting with your next bill.</p><figure><figcaption><div><div><p>Microsoft 365 gets a new logo, a new name, and a higher price.</p></div></div></figcaption></figure><p>As far as I can tell, the response from customers has been overwhelmingly negative. I monitor Microsoft-focused online forums obsessively, and I read hundreds of complaints without seeing a single compliment. Seriously, the reaction to this rollout was an Excel #DIV/0 error.</p><p>What went wrong? Where do I begin?</p><h2>They botched the price increase</h2><p>Let me bend over backward to Microsoft here. They launched Office 365 (which later became Microsoft 365) more than a dozen years ago, and in that time they have not raised the price once. In case you haven't noticed, we are living through some inflationary times right now.</p><p>So, there was plenty of room for Microsoft to roll out a gentle price increase. \"Hey y'all, we know this isn't welcome news but we need to bump up the Microsoft 365 subscription price by two bucks a month. It's still a great deal!\"</p><p>Netflix does that every year or two and no one shows up at Netflix HQ with pitchforks and torches.</p><h2>No one wants to pay for AI</h2><p>There's a ton of potential in AI, and it has some solid use cases today, for tasks like <a href=\"https://www.zdnet.com/article/how-to-use-chatgpt-to-write-code-what-it-does-well-and-what-it-doesnt/\">writing code</a> and finding patterns in large databases.</p><p>But in the places where Microsoft 365 Family and Personal subscribers are likely to see AI, the edges are still very, very rough. If you ask Copilot in Word to write something for you, the results will be about what you'd expect from an enthusiastic summer intern. You might fare better if you ask Copilot to turn a folder full of photos into a PowerPoint presentation. But is that task really such a challenge?</p><p>To top that off, there are similarly rough edges in the way the Copilot features are implemented. For example, I have both work and family subscriptions to Microsoft 365. This combination normally works very well; I can sign in with one account, attach resources like OneDrive from both accounts, and work with almost no friction.</p><p>But good luck doing the same with Copilot features. In that configuration, I consistently get error messages telling me, \"As a Microsoft 365 Personal or Family subscriber, you'll be able to use Copilot when you're signed with your Microsoft work or school account (<a href=\"https://www.zdnet.com/article/microsoft-launches-entra-a-new-identity-and-access-family-of-products/\">Entra ID</a>) and Microsoft personal account. However, that ability is not yet available.\"</p><figure><figcaption><div><div><p>If you pay for a personal and work subscription to Microsoft 365, you'll pay the higher price but won't get the new features.</p></div></div></figcaption></figure><p>Let me see if I understand this: I'm paying Microsoft for not one but two subscriptions, and they raised the price of one of those subscriptions while not allowing me to use its signature feature. That seems like a lousy way to reward your best customers.</p><h2>The announcement was bungled, too</h2><p>I pay annually for my Microsoft 365 Family subscription. The price went up more than a week ago, but I haven't received an email telling me about it. As the account manager, I should see that notice before I see the new price in my dashboard.</p><p>Instead, I learned about the new price thanks to a pop-up message on my Android phone.</p><figure><figcaption><div><div><p>This po-up on my phone is the only notice I've received about a price change.&nbsp;</p></div></div></figcaption></figure><p>That notice tells me I have a monthly plan. No, I have an annual plan that will renew in a month or two. It says I can cancel billing in my Play Store settings. No, I can't. I bought this subscription using the web browser on my Windows PC, and when I tap the Subscriptions button in the Android app it opens a web browser and takes me to my Microsoft account page, where I have to tap the Manage button to find the cancel option.</p><p>Oh, and I've lost count of the number of people who were baffled and angry that Microsoft had forcibly installed the Copilot app on their devices. It was just a rebranding of the old Microsoft 365 app with the new name and logo, but in my case it was days later before I received yet another pop-up message telling me about the change.</p><h2>Well, surely you can just turn it off. Right?</h2><p>The smartest thing Microsoft could have done was to make this initial release of Copilot an opt-in feature for a few months. They could have said, \"We're excited to let everyone try this! Just click OK here!\"</p><p>Instead, they turned the feature on for everyone and gave Word users a well-hidden checkbox that reads Enable Copilot. The feature is on by default, so you have to clear the checkbox to make it go away.</p><p>As for the other Office apps? \"Uh, we'll get around to giving you a button to turn it off next month. Maybe.\"</p><p>Seriously, the&nbsp;<a href=\"https://support.microsoft.com/en-us/office/how-to-turn-off-copilot-in-microsoft-365-family-and-personal-subscriptions-bc7e530b-152d-4123-8e78-edc06f8b85f1\" target=\"_blank\" rel=\"noopener nofollow\">support page that explains where you can find that box in Word</a>&nbsp;says, \"We're working on adding the Enable Copilot checkbox to Excel, OneNote, and PowerPoint on Windows devices and to Excel and PowerPoint on Mac devices. That is tentatively scheduled to happen in February 2025.\" Until the Enable Copilot button is available, you can't disable Copilot.</p><p>Meanwhile, maybe think twice about using the option to disable all of the connected features in your Office apps. As&nbsp;<a href=\"https://laurenhough.substack.com/p/there-are-some-swear-words-in-this\" target=\"_blank\" rel=\"noopener nofollow\">one writer pointed out</a>&nbsp;(with multiple swear words and some threats aimed in the general direction of One Microsoft Way), doing so can have unintended consequences, like making it appear as though all your files in OneDrive have suddenly disappeared.</p><h2>How long will the Classic option last?</h2><p>If you try to cancel Microsoft 365 to avoid the price increase (or just to say no to the AI features), Microsoft's subscription  management page offers the option to downgrade to a Classic plan, which turns out to be exactly what you signed up for not that long ago, minus the price increase.</p><p>That's purely a retention play, of course. New subscribers can't sign up for this plan, and I expect that it will be discontinued in a year or two.&nbsp;</p><h2>Why is Microsoft doing this?</h2><p>I have yet to see a single person praising the implementation of Copilot in Microsoft 365 or telling Satya Nadella they've gotten their money's worth out of this unexpected upgrade.</p><p>So, why do it at all? I can think of 3 billion reasons. I could plug the numbers into Excel and tell you about it, but let's have Copilot explain instead.</p><figure><figcaption><div><div><p>Microsoft Copilot understands how the subscription business model works.</p></div></div></figcaption></figure><p>Microsoft is halfway through its 2026 fiscal year. It's almost like someone was given instructions at the end of the calendar year to bump up that revenue line for the Office Consumer division.</p><p>Here's the funny thing: The price increase is so big that there will still be a huge positive impact even if 10% of Microsoft 365 Personal and Family customers cancel rather than pay the extra monthly fee. Copilot walked me through the math and concluded, \"So, even with 10% of your customers canceling their subscriptions, you would still generate an additional $1.714 billion annually due to the price hike. How do you feel about this adjustment?\"</p><p>I feel like I understand why all those complaints are going to go unheard.</p>","contentLength":7459,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://news.ycombinator.com/item?id=42831281"},{"title":"It's not a crime if we do it with an app","url":"https://pluralistic.net/2025/01/25/potatotrac/#carbo-loading","date":1737905093,"author":"keepit","guid":222,"unread":true,"content":"<p>The core regulatory proposition of the tech industry is \"it's not a crime if we do it with an app.\" It's not an unlicensed taxi if we do it with an app. It's not an illegal hotel room if we do it with an app. It's not an unregistered security if we do it with an app. It's not wage theft if we do it with an app.</p><p>Inflation is one of the most politically salient factors of this decade, and so much of inflation can be attributed to a crime, done with an app, with impunity for the criminals. The entire food supply has been sewn up by cartels of 2-5 giant companies, and they colluded to raise prices, and bragged about it, and got away with it, because neoclassical economists insist that it's impossible for this kind of price fixing to occur in an \"efficient market.\"</p><p>Some of these cartels are well-known, like the Coke/Pepsi duopoly. Pepsi's bosses boasted to their shareholders about \"Pepsi pricing power,\" and how they were able to raise prices over the inflationary increases caused by covid and the Russian invasion of Ukraine:</p><p>You might know that pretty much every packaged good in your grocery store is made by one of two companies, Unilever and Procter and Gamble. Both CEOs boasted to their investors about their above-inflation price increases:</p><p>But other cartels are harder to spot. It may seem like your grocer's eggs department is filled with many different companies' products. In reality, a single company, Cal-Maine Foods, owns practically every brand of eggs in the case: Farmhouse Eggs, Sunups, Sunny Meadow, Egg-Land’s Best and Land O’ Lakes. They made record profits after the pandemic and through bird flu, a fact that CFO Max Bowman attributed to \"significantly higher selling prices\" and \"our ability to adapt to inflationary market pressures\":</p><p>But Cal-Maine is comparatively transparent. The other food cartels – especially those that serve the restaurant sector – are harder to spot. In , Katya Schwenk describes how four companies – Lamb Weston, JR Simplot, McCain Foods and Cavendish Farms – have captured the frozen potato market and all that comes with it (fries, tater tots, etc):</p><p>These companies have been hiking prices for years, but  started to turn the screws during the post-covid inflationary period. One of Schwenk's sources is Josh Saltzman, owner of the DC sports bar Ivy and Coney. Ten years ago, Saltzman charged $3 for fries; now it's $6 – and Saltzman's margins have declined. Saltzman has a limited number of suppliers, and they all get their potatoes from Big Potato, and they bundle those potato orders with their other supplies, making it effectively impossible for Saltzman to buy his potatoes from anyone else.</p><p>Big Potato controls  of the frozen potato market, and any sector that large and concentrated is going to be pretty cozy. The execs at these companies all meet at industry associations, lobbying bodies, and as they job-hop between companies in the cartel. But they don't have to rely on personal connections to rig the price of potatoes: they do it through a third-party data-broker called Potatotrac. Each cartel member sends all their commercially sensitive data – supply costs, pricing, sales figures – to Potatotrac, and then Potatotrac uses that data to give \"advice\" to the cartel members about \"optimal pricing.\"</p><p>This is just price-fixing, with an app. The fact that they don't sit around a table and openly discuss pricing doesn't keep this from being price-fixing. What's more, they . A director at McCain said that \"higher ups\" forbade anyone in the company from competing on price. A Lamb Weston exec described the arrangement as everyone \"behaving themselves,\" chortling that they'd \"never seen margins this high in the history of the potato industry.\" Lamb Weston's CEO attributed a 111% increase in net income to \"pricing actions.\"</p><p>Lamb Weston's execs understand that they're driving small restaurants out of business, and that the real beneficiaries are big chains that can pass the price increases onto their customers, like \"Chili’s and the Texas Roadhouses and Cheesecake Factory\":</p><p>This is by no means unique to the potato industry. A data-broker called Agri Stats works with America's largest meat-packers to rig the price of meat – packers send Agri Stats the same kind of data that Big Potato sends to Potatotrac, and Agri Stats sends back the same \"recommendations\" that allow them to raise meat prices across the board, in lockstep:</p><p>Lots of food categories are as inbred as meat and potatoes: \"four firms controlled nearly 80 percent of the almond milk market, for instance. Three companies controlled 83 percent of the canned tuna market, and four companies controlled more than 86 percent of the microwave popcorn market.\"</p><p>The \"price fixing is legal if we do it with an app\" gambit is not just about food, either. Apps like Realpage let big corporate landlords – who've bought up a sizable fraction of all the available homes in America – collude to raise rents:</p><p>And private equity companies have rolled up all the  companies, hiking the price of trucks, creating backlogs and bottlenecks for parts and service, and starving the nation's municipalities (including Los Angeles) of fire-fighting equipment:</p><p>This kind of price-fixing was central to the enforcement actions of the Biden administration's trustbusters at the FTC, and their investigations and actions inspired state AGs and private parties to bring their own antitrust suits. The question is, will Trump's enforcers continue this agenda? And will Trump's judges – steeped in Heritage Foundation economics that insists that monopolies are \"efficient\" – find in their favor if they do?</p><p>Inflation has lots of causes, it's true. But when an industry is consolidated enough to take advantage of a data brokerage or just engage in tacit collusion,  source of inflation – war, disease, weather – allows whole sectors to raise prices together, and keep them high, long after the shock has passed.</p><ul><li>Picks and Shovels: a sequel to \"Red Team Blues,\" about the heroic era of the PC, Tor Books, February 2025</li><li><p>Unauthorized Bread: a middle-grades graphic novel adapted from my novella about refugees, toasters and DRM, FirstSecond, 2025</p></li></ul><ul><li>Enshittification: a nonfiction book about platform decay for Farrar, Straus, Giroux. Status: second pass edit underway (readaloud)</li><li><p>A Little Brother short story about DIY insulin PLANNING</p></li><li><p>Picks and Shovels, a Martin Hench noir thriller about the heroic era of the PC. FORTHCOMING TOR BOOKS FEB 2025</p></li></ul><p>This work – excluding any serialized fiction – is licensed under a Creative Commons Attribution 4.0 license. That means you can use it any way you like, including commercially, provided that you attribute it to me, Cory Doctorow, and include a link to pluralistic.net.</p><p>Quotations and images are not included in this license; they are included either under a limitation or exception to copyright, or on the basis of a separate license. Please exercise caution.</p><p>Blog (no ads, tracking, or data-collection):</p><p>Newsletter (no ads, tracking, or data-collection):</p><p>Mastodon (no ads, tracking, or data-collection):</p><p>Medium (no ads, paywalled):</p><p>Twitter (mass-scale, unrestricted, third-party surveillance and advertising):</p><p>Tumblr (mass-scale, unrestricted, third-party surveillance and advertising):</p><p>\"<em>When life gives you SARS, you make sarsaparilla</em>\" -Joey \"Accordion Guy\" DeVilla</p>","contentLength":7342,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://news.ycombinator.com/item?id=42830646"},{"title":"Steam Brick: No screen, no controller, just a power button and a USB port","url":"https://crastinator-pro.github.io/steam-brick/","date":1737843313,"author":"sbarre","guid":221,"unread":true,"content":"","contentLength":0,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://news.ycombinator.com/item?id=42825441"},{"title":"Every HTML Element","url":"https://iamwillwang.com/dollar/every-html-element/","date":1737831746,"author":"wxw","guid":220,"unread":true,"content":"<p>\nThere are over a hundred HTML elements. This page uses all of them.\n        You're looking at &lt;p&gt;&lt;/p&gt; right now.\n</p><hgroup><h2>Or smaller with &lt;h2&gt;&lt;/h2&gt;</h2><h6>\nAnd... nope that's it for headings. These are all in an &lt;hgroup&gt;&lt;/hgroup&gt; by the way.\n</h6></hgroup><pre>      Some text is &lt;pre&gt;&lt;/pre&gt;-formatted. Just a different look.\n    </pre><ul>\nWe can make a list with &lt;ul&gt;&lt;/ul&gt; </ul><ol>\nOr a numbered list with &lt;ol&gt;&lt;/ol&gt; </ol><dl>\nOr even a description list with &lt;dl&gt;&lt;/dl&gt;.\n<dd> and description definitions, &lt;dd&gt;&lt;/dd&gt;. </dd></dl><blockquote> &lt;blockquote&gt;&lt;/blockquote&gt; indents text. How credible!\n</blockquote><q>&lt;q&gt;&lt;/q&gt; is block's little brother.</q><figure>\nHere's a &lt;figure&gt;&lt;/figure&gt;... It usually contains some other media\n        (like an image).\n<img src=\"https://iamwillwang.com/_astro/figure.o8SCE8C_.png\" alt=\"figure\" width=\"363.3333333333333\" height=\"32.666666666666664\"><figcaption>\nand this &lt;figcaption&gt;&lt;/figcaption&gt; can then describe said media.\n</figcaption></figure>\nAnd we can take a break with &lt;hr /&gt;. \nWe \nget a lot  with text  with elements like\n&lt;strong&gt;&lt;/strong&gt;, &lt;em&gt;&lt;/em&gt;, and &lt;mark&gt;&lt;/mark&gt;.\n<p><s>&lt;s&gt;&lt;/s&gt; is for marking text as accurate</s>... err never mind\n</p><p> &lt;bdo&gt;&lt;/bdo&gt; </p><p>\nAh, now there's some breathing room, thanks to &lt;br /&gt;.\n</p><p><cite>You can &lt;cite&gt;&lt;/cite&gt; this website as Every HTML Element.</cite><code>And this whole thing is &lt;code&gt;&lt;/code&gt;,</code>\nliving on the .\n</p><time datetime=\"2025-01-23\">&lt;time&gt;&lt;/time&gt; too. It's 10:35 PM right now.</time> might all be in your head. Well, actually it's\n      in &lt;kbd&gt;.\n<p> is defined. And  is a &lt;var&gt;&lt;/var&gt;iable.\n</p><p>\nHow bout some hidden gems?\n</p><samp>Here's a taste of a &lt;samp&gt;&lt;/samp&gt;</samp><p>\nHere's an opportunity for a break &lt;wbr/&gt;.\n\nThe browser will decide when to take it.\n</p>\nAll this text... where does it live? Well we're inside the &lt;main&gt;&lt;/main&gt; &lt;body&gt;&lt;/body&gt;\nof an &lt;html&gt;&lt;/html&gt; document. There's a &lt;head&gt;&lt;/head&gt; here with us\n      too. The\n&lt;head&gt;&lt;/head&gt; thinks about things like &lt;link&gt;s to other things, &lt;meta&gt;data, our &lt;style&gt;&lt;/style&gt;, and our &lt;title&gt;&lt;/title&gt;.\n<section><article><p>\nBy this point, I think it's clear that HTML elements run the gamut\n            from content to container to logic to edge case. Some elements we\n            can see, others not so much. Some elements are meant to combine with\n            others. Some elements are only meant for your browser to read. Some\n            elements had good intentions but never picked up mainstream use.\n</p></article>\nThat concludes this section.\n</section><img src=\"https://iamwillwang.com/_astro/map.ZvQu5ZE9.png\" alt=\"figure\" usemap=\"#map\" width=\"600\"><div><p>\nSometimes it's more fun to listen than read. This is the sound of the\n          website being made.\n</p><p>In other words, media! Media everywhere.</p></div><table><tbody><tr><td>The root element of the page</td><td>Without this, you're not doing HTML.</td></tr><tr><td>Now that would've been fun.</td></tr><tr></tr></tbody><tfoot><tr><td colspan=\"4\">Disclaimer: No web standards were harmed in the making of this\n              table.</td></tr></tfoot></table>\nYou can interact with HTML beyond a form too!\n<p>\nThat concludes our journey! I lied a bit at the beginning. There are\n        more elements than this: experimental ones, deprecated ones, web\n        components, hydrogen, oxygen, and so on. Regardless, I hope this text\n        got you a little hyper because, mark my words, you're speaking a new\n        language now.\n</p>","contentLength":2752,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://news.ycombinator.com/item?id=42823722"},{"title":"OpenRA – Classic strategy games rebuilt for the modern era","url":"https://www.openra.net/","date":1737831307,"author":"tosh","guid":219,"unread":true,"content":"<div><div><ul><li>Saboteurs can now cloak while moving</li><li>added delete area button to the map editor</li><li>improved Battlefield News dropdown</li><li>improved formatting of unit descriptions and encyclopedias</li><li>fixed Dune 2000 not detecting installed music and videos</li><li>fixed harvesters not always acting correctly with queued orders</li><li>fixed a bug where the game window could glitch out on Windows 10</li><li>and fixed a few other minor bugs</li></ul><p>Stay tuned for more updates and be sure to take part in the playtest. Don’t forget to share your feedback with us on <a href=\"https://forum.openra.net/\">our forum</a>, <a href=\"https://discord.openra.net\">community Discord server</a>, or <a href=\"https://github.com/OpenRA/OpenRA/issues\">GitHub</a>. Good luck on the battlefield, Commanders, and happy holidays!</p></div></div><p>Welcome back, Commanders!</p><p>After a whole year of development, the OpenRA team proudly presents <a href=\"https://www.openra.net/download\">Playtest 20241116</a>. This latest installment elevates your OpenRA experience with enhanced visuals, new tools and improved performance across the board.</p><p>Introducing the newly revamped Map Editor, designed with a modern interface and a cohesive design. We took notice of how players use the editor and reimagined it to better align with your creative needs.</p><p>New Map Editor features include:</p><ul></ul><p>We added an encyclopedia to the Tiberian Dawn mod! This feature was inspired by the community’s desire for an in-game resource to consolidate knowledge about units, structures, and technologies. While fan-made wikis have been invaluable, many have become outdated or inconsistent as the game evolves.</p><p>This latest release has significantly improved support for HD art assets. You should notice faster load times and overall performance improvements for the “Tiberian Dawn HD” project. It is packaged as a separate release and can be <a href=\"https://github.com/OpenRA/TiberianDawnHD/releases/tag/playtest-20241116\">downloaded here</a>. This preview is multiplayer-compatible with the main 20241116 playtest. The C&amp;C Remastered Collection must be installed through Steam or the EA App, and if using macOS or Linux, the project README provides <a href=\"https://github.com/OpenRA/TiberianDawnHD#asset-installation\">detailed installation instructions</a>.</p><p>Other notable changes include:</p><ul><li>game assets can now be installed from the Steam release of The Ultimate Collection</li><li>switched to high-quality Dune 2000 assets and included lots of extra visual polish</li><li>added two Red Alert missions and improved the quality of many others</li><li>Red Alert and Dune 2000 balance changes</li><li>skirmish options no longer reset between matches</li><li>behind the scenes we made significant progress towards supporting additional languages in future releases.</li></ul><p>As always, the <a href=\"https://github.com/OpenRA/OpenRA/wiki/Changelog/151b0777e7bdda9e672212acedfc0773f8312dc7\">full changelog</a> is available on GitHub if you would like to find out more.</p>","contentLength":2429,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://news.ycombinator.com/item?id=42823667"},{"title":"DeepSeek-R1: Incentivizing Reasoning Capability in LLMs via RL","url":"https://arxiv.org/abs/2501.12948","date":1737830389,"author":"gradus_ad","guid":218,"unread":true,"content":"<!DOCTYPE html>","contentLength":0,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://news.ycombinator.com/item?id=42823568"},{"title":"CIA now favors lab leak theory to explain Covid's origins","url":"https://www.nytimes.com/2025/01/25/us/politics/cia-covid-lab-leak.html","date":1737828975,"author":"doctaj","guid":217,"unread":true,"content":"<div aria-live=\"polite\"><div>You have a preview view of this article while we are checking your access. When we have confirmed access, the full article content will load.</div></div><section name=\"articleBody\"><div data-testid=\"companionColumn-0\"><div><p>The C.I.A. has said for years that it did not have enough information to conclude whether the Covid pandemic emerged naturally from a wet market in Wuhan, China, or from an accidental leak at a research lab there.</p><p>But the agency issued a new assessment this week, with analysts saying they now favor the lab theory.</p><p>There is no new intelligence behind the agency’s shift, officials said. Rather it is based on the same evidence it has been chewing over for months.</p><p>The analysis, however, is based in part on a closer look at the conditions in the high security labs in Wuhan province before the pandemic outbreak, according to people familiar with the agency’s work.</p></div></div><div data-testid=\"companionColumn-1\"><div><p>A spokeswoman for the agency said the other theory remains plausible and that the agency will continue to evaluate any available credible new intelligence reporting.</p><p>Some American officials say the debate matters little: The Chinese government failed to either regulate its markets or oversee its labs. But others argue it is an important intelligence and scientific question.</p><div><div><div><div tabindex=\"-1\"><p>Thank you for your patience while we verify access. If you are in Reader mode please exit and&nbsp;<a href=\"https://myaccount.nytimes.com/auth/login?response_type=cookie&amp;client_id=vi&amp;redirect_uri=https%3A%2F%2Fwww.nytimes.com%2F2025%2F01%2F25%2Fus%2Fpolitics%2Fcia-covid-lab-leak.html&amp;asset=opttrunc\">log into</a>&nbsp;your Times account, or&nbsp;<a href=\"https://www.nytimes.com/subscription?campaignId=89WYR&amp;redirect_uri=https%3A%2F%2Fwww.nytimes.com%2F2025%2F01%2F25%2Fus%2Fpolitics%2Fcia-covid-lab-leak.html\">subscribe</a>&nbsp;for all of The Times.</p></div><div><div data-testid=\"optimistic-truncator-message\"><p>Thank you for your patience while we verify access.</p></div></div></div></div></div></div></div></section>","contentLength":1395,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://news.ycombinator.com/item?id=42823385"},{"title":"Show HN: Cs16.css – CSS library based on Counter Strike 1.6 UI","url":"https://cs16.samke.me/","date":1737733027,"author":"samke-","guid":175,"unread":true,"content":"<div>\n                Lorem ipsum dolor sit amet consectetur adipisicing elit.\n                Distinctio ad suscipit aut asperiores laudantium error amet\n                sapiente et tempora numquam voluptates, velit sint quos\n                exercitationem unde obcaecati deleniti maiores officia natus\n                ipsa rem fuga commodi esse. Sunt repellendus ipsa illo a\n                accusantium consequuntur nihil dicta necessitatibus porro,\n                saepe, sed repudiandae!\n              </div>","contentLength":501,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://news.ycombinator.com/item?id=42814110"},{"title":"A QR code that sends you to a different destination – lenticular and adversarial","url":"https://mstdn.social/@isziaui/113874436953157913","date":1737676534,"author":"zdw","guid":216,"unread":true,"content":"","contentLength":0,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://news.ycombinator.com/item?id=42809268"},{"title":"Llama.vim – Local LLM-assisted text completion","url":"https://github.com/ggml-org/llama.vim","date":1737655602,"author":"kgwgk","guid":215,"unread":true,"content":"","contentLength":0,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://news.ycombinator.com/item?id=42806328"},{"title":"Operator research preview","url":"https://openai.com/index/introducing-operator/","date":1737655420,"author":"meetpateltech","guid":214,"unread":true,"content":"","contentLength":0,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://news.ycombinator.com/item?id=42806301"},{"title":"Thank HN: My bootstrapped startup got acquired today","url":"https://news.ycombinator.com/item?id=42806247","date":1737655085,"author":"paraschopra","guid":213,"unread":true,"content":"Hello HN,<p>Today, I sold the company to a private equity firm for $200mn.</p><p>I was a 22 year old fresh graduate when I launched VWO on HN and got initial users. Feedback from people like @patio11 helped me get to PMF. And now, 15 years later, \"site:ycombinator.com\" is what I appended when I wanted to search for advice on what to keep in mind while selling my company.</p><p>Thank you HN for sharing inspiration and wisdom all along. I honestly don't think I would have been an entrepreneur had it not been for hacker news.</p><p>Every single day, HN is the first website I open! I'm feeling very grateful towards the community. Thanks @dang, and thank you Paul Graham for your essays and for creating this beautiful corner of the internet!</p>","contentLength":721,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://news.ycombinator.com/item?id=42806247"},{"title":"Hacking Subaru: Tracking and controlling cars via the admin panel","url":"https://samcurry.net/hacking-subaru","date":1737634939,"author":"ramimac","guid":212,"unread":true,"content":"<p>On November 20, 2024, Shubham Shah and I discovered a security vulnerability in Subaru’s STARLINK connected vehicle service that gave us unrestricted targeted access to all vehicles and customer accounts in the United States, Canada, and Japan.</p><p>Using the access provided by the vulnerability, an attacker who only knew the victim’s last name and ZIP code, email address, phone number, or license plate could have done the following:</p><ul><li>Remotely start, stop, lock, unlock, and retrieve the current location of any vehicle.</li><li>Retrieve any vehicle’s complete location history from the past year, accurate to within 5 meters and updated each time the engine starts.</li><li>Query and retrieve the personally identifiable information (PII) of any customer, including emergency contacts, authorized users, physical address, billing information (e.g., last 4 digits of credit card, excluding full card number), and vehicle PIN.</li><li>Access miscellaneous user data including support call history, previous owners, odometer reading, sales history, and more.</li></ul><p>After reporting the vulnerability, the affected system was patched within 24 hours and never exploited maliciously.</p><p><em>Taking over a Subaru using only the license plate in about 10 seconds, retrieving over a years worth of location history from the vehicle</em></p><p><em>Map displaying 1,600 leaked coordinates from a 2023 Subaru Impreza, similar data was retrievable for any internet-connected Subaru</em></p><p>A little over a year ago, I bought my mom a 2023 Subaru Impreza with the promise that she would let me borrow it to try and hack it. I’d spent the last few years hunting for vulnerabilities in other automakers, but didn’t yet have the chance to look at Subaru.</p><p>While visiting home for thanksgiving this year, I took my opportunity and asked for the account login to see if I could get anywhere.</p><h3>Auditing the MySubaru Mobile App</h3><p>The first thing I wanted to test was the MySubaru app. This app allowed users to send vehicle commands, so I proxied the app using Burp Suite and intercepted the telematic command HTTP requests, hoping to find a vulnerability to unlock cars without authorization.</p><p>The below request was sent when unlocking a car via the app:</p><pre><code>\n\n{\n  ,\n  ,\n  ,\n  \n}\n</code></pre><p>After failing to bypass the authorization for in-app vehicle commands, I looked around the app a bit more but couldn’t find anything interesting to test. Everything seemed properly secured. There weren’t a lot of endpoints. The authorization worked really well.</p><p>Maybe testing the MySubaru app was the wrong approach.</p><p>From my past experience with car companies, I knew there could be publicly accessible employee-facing applications with broader permissions than the customer-facing apps. With that in mind, I decided to shift focus and started hunting for other Subaru-related websites to test.</p><h3>Finding the Subaru Admin Panel</h3><p>I sent my friend Shubs a message over Discord to see if he’d be interested in helping me find any potential Subaru employee applications. He said sure -- and then immediately sent me this message:</p><pre><code></code></pre><p>He noticed that ‘my.subaru.com’ (a domain that the MySubaru app was using) was a CNAME for ‘mys.prod.subarucs.com’ (a domain that I hadn’t seen before).</p><pre><code></code></pre><p>We ran a scan to find other subdomains and checked the output:</p><pre><code></code></pre><p>Well, that definitely looked like employee functionality. From a quick Google, it appeared that STARLINK was the name of Subaru’s in-vehicle infotainment system which provided all of the remote functionality for the vehicle. This appeared to be an admin panel related to it.</p><h3>Arbitrary Account Takeover on Subaru STARLINK Admin Portal</h3><p>At first glance, it didn’t seem like there would be much here. It was just a login panel, and we didn’t have any credentials. I checked the source of the website hoping to see a bit more, and the following bit caught my eye:</p><pre><code></code></pre><p>There were some interesting JavaScript files under the “/assets/_js/” folder that were loaded into the login page, so I went ahead and brute forced the directory in hopes of finding other JavaScript files.</p><p>After a few minutes of running <a href=\"https://github.com/ffuf/ffuf\">FFuF</a>, we got a hit for a “login.js” file which the following very interesting code snippet:</p><pre><code>$().(, () {\n\te.();\n\t($().()) {\n\t\t();\n\t\t$.({\n            : ,\n\t\t\t: ,\n            : ,\n            : .({\n                : email,\n                : $().(),\n                : $().()\n            }),\n\t\t\t: \n\t\t}).( () {\n</code></pre><p>It appeared that there was a “resetPassword.json” endpoint that would reset employee’s accounts without a confirmation token!</p><p>If this worked how it was written in the JavaScript, then an attacker could simply enter any valid employee email and take over their account. I sent the following POST request to confirm that the functionality was even accessible:</p><pre><code>\n\n{\n  ,\n  ,\n  \n}\n</code></pre><pre><code></code></pre><p>It seemed to be working, we just needed to find an employee’s email address to test it on. Since this was a fairly large application, there were probably a bunch of different users, we just needed to find some way to enumerate them. I dug through the rest of the JS looking for an endpoint that might let us enumerate emails until I saw the following:</p><pre><code></code></pre><pre><code>\n\n{\n  \n}\n</code></pre><p>The above endpoint would return the user’s security questions if their email was valid. We could use this to enumerate user accounts until we found someone that was active on this platform.</p><h3>Enumerating Employee Emails</h3><p>Using LinkedIn, we did a quick search for “Subaru STARLINK” and found a few employees who appeared to be software engineers. After getting their names, we Googled and found that Subaru emails are in the following format:</p><pre><code>[][]</code></pre><p>We tossed the few emails that we’d pieced together into the “getSecurityQuestion.json” endpoint and hit send. On the fourth attempt, we got a response back!</p><pre><code>What city were you born in?</code></pre><p>The  (redacted) email was valid! We went back to the reset password endpoint and hit send.</p><pre><code>\n\n{\n  ,\n  ,\n  \n}\n</code></pre><pre><code></code></pre><p>It worked! We tried logging in.</p><p>We had successfully taken over an employee’s account, but there was now a 2FA prompt to actually use the website. It was custom, so we tried to see if there was anything to do to bypass it.</p><p>We tried the simplest thing that we could think of: removing the client-side overlay from the UI.</p><pre><code>$().();\n</code></pre><p>After removing the client-side overlay, we clicked around and the whole app seemed to function normally. All of the buttons worked, and were returning server-side data.</p><h3>Tracking My Mom for the Last Year</h3><p>The left navbar had a ton of different functionality, but the juiciest sounding one was “Last Known Location”. I went ahead and typed in my mom’s last name and ZIP code. Her car popped up in the search results. I clicked it and saw everywhere my mom had traveled the last year:</p><table><tbody><tr></tr><tr></tr><tr></tr><tr></tr><tr></tr><tr></tr></tbody></table><p>The “Last Known Location” endpoint was more than the last location, it gave me the exact coordinates of everywhere that she had started her engine or used a telematics command over the . I didn’t realize this data was being collected, but it seemed that we had agreed to the STARLINK enrollment when we purchased it.</p><p>To better understand the data, I exported a year’s worth of location history from my mom’s 2023 Impreza and imported it into the Google Maps iframe below. The below map is a slightly modified export (some sensitive bits removed) of all of the locations she had visited.</p><h3>Visualizing a Year of Subaru Location History</h3><p><em>Map displaying 1,600 leaked coordinates from a 2023 Subaru Impreza, similar data was retrievable for any internet-connected Subaru</em></p><p>There were a ton of other endpoints. One of them was a vehicle search which let you query a customer’s last name and zip code, phone number, email address, or VIN number (retrievable via license plate) and grant/modify access to their vehicle.</p><p>After searching and finding my own vehicle in the dashboard, I confirmed that the STARLINK admin dashboard should have access to pretty much any Subaru in the United States, Canada, and Japan. We wanted to confirm that there was nothing we were missing, so we reached out to a friend and asked if we could hack her car to demonstrate that there was no pre-requisite or feature which would’ve actually prevented a full vehicle takeover.</p><p>She sent us her license plate, we pulled up her vehicle in the admin panel, then finally we added ourselves to her car.</p><p>We waited a few minutes, then we saw that our account had been created successfully.</p><p>Now that we had access, I asked if they could peek outside and see if anything was happening with their car. I sent the “unlock” command. They then sent us this video.</p><p>Afterwards, she confirmed that she did not receive any notification, text message, or email after we added ourselves as an authorized user and unlocked her car.</p><ul><li>11/20/24 11:54 PM CST: Initial report sent to SecOps email</li><li>11/21/24 7:40 AM CST: Initial response from Subaru team</li><li>11/21/24 4:00 PM CST: Vulnerability fixed, unable to reproduce</li><li>01/23/25 6:00 AM CST: Blog post released</li></ul><p>When writing this, I had a really hard time trying to do another blog post on car hacking. Most readers of this blog already work in security, so I really don’t think the actual password reset or 2FA bypass techniques are new to anyone. The part that I felt was worth sharing was the impact of the bug itself, and how the connected car systems actually work.</p><p>The auto industry is unique in that an 18-year-old employee from Texas can query the billing information of a vehicle in California, and it won’t really set off any alarm bells. It’s part of their normal day-to-day job. The employees all have access to a ton of personal information, and the whole thing relies on trust.</p><p>It seems really hard to really secure these systems when such broad access is built into the system by default.</p><p>Happy (late) holidays, thanks for reading! Huge thanks to the following people for helping write and review this post:</p>","contentLength":9750,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://news.ycombinator.com/item?id=42803279"},{"title":"Show HN: I built an active community of trans people online","url":"https://t4t.social/","date":1737608855,"author":"t4t","guid":171,"unread":true,"content":"<li><a href=\"https://t4t.social/@alice\"></a><a href=\"https://t4t.social/p/53597\"></a><p>Drank too much water, tummy hurts, not tired at all, going to feel like death in the morning, send hole pics</p></li><li><a href=\"https://t4t.social/@Wulfboy\"></a><a href=\"https://t4t.social/p/53594\"></a><p>A vape that every time I take a hit my snout gets longer, my teeth get sharper, my ears perk higher and my tail grows down to my knees and wags like a fan blade</p></li><li><a href=\"https://t4t.social/@saladtongs\"></a><a href=\"https://t4t.social/p/53591\"></a><p>it’s a shame cause it has such potential, but it’s genuinely just a cesspit now. It always has been cause human beings are the ones using it, but the bad people aren’t scared or hiding on that site anymore. Full mask off, they preach their bigotry and ignorance from the rooftops.</p></li><li><a href=\"https://t4t.social/@reeseofpieces\"></a><a href=\"https://t4t.social/p/53589\"></a><p>its so nice to introduce people to my dollification kink, esp if they end up really liking it.. its also really fun to meet people who’re already knowledgeable on it and rlly enjoy it.. god i love playyng with pretty dollies so much</p></li>","contentLength":788,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://news.ycombinator.com/item?id=42800893"},{"title":"Tailwind CSS v4.0","url":"https://tailwindcss.com/blog/tailwindcss-v4","date":1737592382,"author":"georg-stone","guid":211,"unread":true,"content":"<img alt=\"Tailwind CSS v4.0\" loading=\"lazy\" width=\"1200\" height=\"630\" decoding=\"async\" data-nimg=\"1\" srcset=\"/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fcard.22502194.jpg&amp;w=1200&amp;q=75 1x, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fcard.22502194.jpg&amp;w=3840&amp;q=75 2x\" src=\"https://tailwindcss.com/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fcard.22502194.jpg&amp;w=3840&amp;q=75\"><p>Holy shit it's actually done — we just tagged Tailwind CSS v4.0.</p><p>Tailwind CSS v4.0 is an all-new version of the framework optimized for performance and flexibility, with a reimagined configuration and customization experience, and taking full advantage of the latest advancements the web platform has to offer.</p><p>Tailwind CSS v4.0 is a ground-up rewrite of the framework, taking everything we've learned about the architecture over the years and optimizing it to be as fast as possible.</p><p>When benchmarking it on our own projects, we've found full rebuilds to be over 3.5x faster, and incremental builds to be over 8x faster.</p><p>Here are the median build times we saw when we benchmarked Tailwind CSS v4.0 against <a href=\"https://tailwindui.com/templates/catalyst\">Catalyst</a>:</p><table><tbody><tr></tr><tr><td>Incremental rebuild with new CSS</td></tr><tr><td>Incremental rebuild with no new CSS</td></tr></tbody></table><p>The most impressive improvement is on incremental builds that don't actually need to compile any new CSS — these builds are over 100x faster and complete in . And the longer you work on a project, the more of these builds you run into because you're just using classes you've already used before, like , , or .</p><p>The platform has evolved a lot since we released Tailwind CSS v3.0, and v4.0 takes full advantage of many of these improvements.</p><div><div><div><div><pre tabindex=\"0\"><code></code></pre></div></div></div></div><p>We're leveraging modern CSS features like:</p><ul><li> — giving us more control than ever over how different style rules interact with each other.</li><li><strong>Registered custom properties</strong> — making it possible to do things like animate gradients, and significantly improving performance on large pages.</li><li> — which lets us adjust the opacity of any color value, including CSS variables and .</li><li> — simplifying RTL support and reducing the size of your generated CSS.</li></ul><p>Many of these features have even simplified Tailwind internally, reducing the surface area for bugs and making the framework easier for us to maintain.</p><p>We've streamlined the setup process a ton in v4.0, reducing the number of steps and removing a lot of boilerplate.</p><div data-stack=\"true\"><div><div><div><div><div><pre tabindex=\"0\"><code></code></pre></div></div></div></div><div><div><div><div>2. Add the PostCSS plugin</div><div><pre tabindex=\"0\"><code></code></pre></div></div></div></div><div><div><div><div>3. Import Tailwind in your CSS</div></div></div></div></div></div><p>With the improvements we've made to this process for v4.0, Tailwind feels more light-weight than ever:</p><ul><li> — no more  directives, just add  and start building.</li><li> — you can start using the framework without configuring anything, not even the paths to your template files.</li><li><strong>No external plugins required</strong> — we bundle  rules for you out of the box, and use <a href=\"https://lightningcss.dev/\">Lightning CSS</a> under the hood for vendor prefixing and modern syntax transforms.</li></ul><p>Sure you only go through this once per project, but it adds up when you're starting and abandoning a different side-project every weekend.</p><p>If you're a Vite user, you can now integrate Tailwind using <a href=\"https://tailwindcss.com/docs/installation/using-vite\"></a> instead of PostCSS:</p><div><div><div><div><pre tabindex=\"0\"><code></code></pre></div></div></div></div><p>Tailwind CSS v4.0 is incredibly fast when used as a PostCSS plugin, but you'll get even better performance using the Vite plugin.</p><h2><a href=\"https://tailwindcss.com/blog/tailwindcss-v4#automatic-content-detection\">Automatic content detection</a></h2><p>You know how you always had to configure that annoying  array in Tailwind CSS v3? In v4.0, we came up with a bunch of heuristics for detecting all of that stuff automatically so you don’t have to configure it at all.</p><p>For example, we automatically ignore anything in your  file to avoid scanning dependencies or generated files that aren’t under version control:</p><div><div><div><div><pre tabindex=\"0\"><code></code></pre></div></div></div></div><p>We also automatically ignore all binary extensions like images, videos, .zip files, and more.</p><p>And if you ever need to explicitly add a source that's excluded by default, you can always add it with the  directive, right in your CSS file:</p><div><div><div><div><pre tabindex=\"0\"><code></code></pre></div></div></div></div><p>The  directive uses the same heuristics under the hood, so it will exclude binary file types for example as well, without you having to specify all of the extensions to scan explicitly.</p><p>Before v4.0, if you wanted to inline other CSS files using  you'd have to configure another plugin like  to handle it for you.</p><p>Now we handle this out of the box, so you don't need any other tools:</p><div><div><div><div><pre tabindex=\"0\"><code></code></pre></div></div></div></div><p>Our import system is purpose-built for Tailwind CSS, so we've also been able to make it even faster by tightly integrating it with our engine.</p><p>One of the biggest changes in Tailwind CSS v4.0 is the shift from configuring your project in JavaScript to configuring it in CSS.</p><p>Instead of a  file, you can configure all of your customizations directly in the CSS file where you import Tailwind, giving you one less file to worry about in your project:</p><div><div><div><div><pre tabindex=\"0\"><code></code></pre></div></div></div></div><p>The new CSS-first configuration lets you do just about everything you could do in your  file, including configuring your design tokens, defining custom utilities and variants, and more.</p><p>To learn more about how it all works, read the new <a href=\"https://tailwindcss.com/docs/theme\">theme variables</a> documentation.</p><p>Tailwind CSS v4.0 takes all of your design tokens and makes them available as CSS variables by default, so you can reference any value you need at run-time using just CSS.</p><p>Using the example  from earlier, all of these values will be added to your CSS to as regular custom properties:</p><div><div><div><div><pre tabindex=\"0\"><code></code></pre></div></div></div></div><p>This makes it easy to reuse these values as inline styles or pass them to libraries like <a href=\"https://motion.dev/docs/react-animation#css-variables\">Motion</a> to animate them.</p><p>We've simplified the way many utilities and variants work in v4.0 by effectively allowing them to accept certain types of arbitrary values,  the need for any configuration or dropping down to the arbitrary value syntax.</p><p>For example, in Tailwind CSS v4.0 you can create grids of any size out of the box:</p><div><div><div><div><pre tabindex=\"0\"><code></code></pre></div></div></div></div><p>You can also target custom boolean data attributes without needing to define them:</p><div><div><div><div><pre tabindex=\"0\"><code></code></pre></div></div></div></div><p>Even spacing utilities like , , , , and more are now dynamically derived from a single spacing scale variable and accept any value out of the box:</p><div><div><div><div><pre tabindex=\"0\"><code></code></pre></div></div></div></div><p>The upgrade tool we released alongside v4.0 will even simplify most of these utilities for you automatically if it notices you using an arbitrary value that's no longer needed.</p><p>We've upgraded the entire default color palette from  to , taking advantage of the wider gamut to make the colors more vivid in places where we were previously limited by the sRGB color space.</p><p>We've tried to keep the balance between all the colors the same as it was in v3, so even though we've refreshed things across the board, it shouldn't feel like a breaking change when upgrading your existing projects.</p><p>We've brought container query support into core for v4.0, so you don't need the <code>@tailwindcss/container-queries</code> plugin anymore:</p><div><div><div><div><pre tabindex=\"0\"><code></code></pre></div></div></div></div><p>We've also added support for max-width container queries using the new  variant:</p><div><div><div><div><pre tabindex=\"0\"><code></code></pre></div></div></div></div><p>Like our regular breakpoint variants, you can also stack  and  variants to define container query ranges:</p><div><div><div><div><pre tabindex=\"0\"><code></code></pre></div></div></div></div><p>We've finally added APIs for doing 3D transforms, like , , , , and tons more.</p><p>We've added a ton of new gradient features in v4.0, so you can pull off even fancier effects without having to write any custom CSS.</p><p>Linear gradients now support angles as values, so you can use utilities like  to create a gradient on a 45 degree angle:</p><div><div><figure><div><div><div><div><pre tabindex=\"0\"><code></code></pre></div></div></div></div></figure></div></div><p>You may notice we've renamed  to  too — you'll see why shortly!</p><p>We've added the ability to control the color interpolation mode for gradients using a modifier, so a class like  interpolates using sRGB, and  interpolates using OKLCH:</p><div><div><figure><div><div><div><div><pre tabindex=\"0\"><code></code></pre></div></div></div></div></figure></div></div><p>Using polar color spaces like OKLCH or HSL can lead to much more vivid gradients when the  and  colors are far apart on the color wheel. We're using OKLAB by default in v4.0 but you can always interpolate using a different color space by adding one of these modifiers.</p><p>We've added new  and  utilities for creating conic and radial gradients:</p><div><div><figure><div><div><div><div><pre tabindex=\"0\"><code></code></pre></div></div></div></div></figure></div></div><p>These new utilities work alongside the existing , , and  utilities to let you create conic and radial gradients the same way you create linear gradients, and include modifiers for setting the color interpolation method and arbitrary value support for controlling details like the gradient position.</p><p>The new  variant adds support for the new CSS <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/@starting-style\"></a> feature, making it possible to transition element properties when an element is first displayed:</p><div><div><figure><div><div><div><div><pre tabindex=\"0\"><code></code></pre></div></div></div></div></figure></div></div><p>With , you can finally animate elements as they appear on the page without the need for any JavaScript at all. <a href=\"https://caniuse.com/mdn-css_at-rules_starting-style\">Browser support</a> probably isn't quite there yet for most teams, but we're getting close!</p><p>We've added a new  variant which finally adds support for the CSS  pseudo-class:</p><div data-stack=\"true\"><div><div><div><div><div><pre tabindex=\"0\"><code></code></pre></div></div></div></div><div><div><div><div><pre tabindex=\"0\"><code></code></pre></div></div></div></div></div></div><p>It does double duty and also lets you negate media queries and  queries:</p><div data-stack=\"true\"><div><div><div><div><div><pre tabindex=\"0\"><code></code></pre></div></div></div></div><div><div><div><div><pre tabindex=\"0\"><code></code></pre></div></div></div></div></div></div><p>We've added a ton of other new utilities and variants to v4.0 too, including:</p><ul><li> — for auto-resizing textareas without writing a single line of JavaScript.</li><li> — so you can finally get rid of those ugly light scrollbars in dark mode.</li><li> — for carefully tweaking variable fonts that support different widths.</li><li> — for styling non-interactive elements marked with the  attribute.</li><li> — for doing really clever things you'll eventually regret.</li><li> — which is a lot like , but without the need for the  class.</li><li> — using the existing  variant to also target open popovers.</li></ul><p>Check out the relevant documentation for all of these features to learn more.</p><p><strong>And that's it — that's Tailwind CSS v4.0.</strong> It's been years of work to get to this point, but we're all extremely proud of this release and we can't wait to see what you build with it.</p><p>Check it out, play with it, maybe even break it, and definitely let us know what you think.</p><p>Just no bug reports until tomorrow please — let us at least enjoy one celebratory team dinner and maybe relax in the hot tub at this hotel for a bit believing that somehow we really did ship flawless software.</p>","contentLength":9106,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://news.ycombinator.com/item?id=42799136"},{"title":"Show HN: I made an open-source laptop from scratch","url":"https://www.byran.ee/posts/creation/","date":1737578512,"author":"Hello9999901","guid":169,"unread":true,"content":"<blockquote><p>I do not think there is any thrill that can go through the human heart like that felt by the inventor as he sees some creation of the brain unfolding to success\n– <a href=\"https://en.wikipedia.org/wiki/Nikola_Tesla\" target=\"_blank\">Nikola Tesla</a></p></blockquote><p><strong>It’s got a 4K AMOLED display, a Cherry MX mechanical keyboard, plays Minecraft at 4K, runs +7B LLMs, surfs the web, and has ~7h battery life. All open-source.</strong></p><p><em>How I Made A Laptop From Scratch (YouTube.com). Demo at 22:14.</em></p><p><strong>The writeup below pretty much abridges the video above.</strong></p><p>Imagine a skill-chart of qualities of technology: screen, audio, performance, build, tactility, touch-interaction, efficiency, size, and so many more. At the balancing point of all these qualities is the laptop. To that end, let’s build a laptop that hits as many qualities of a modern commercial thin &amp; light laptop—while trying to do as much from scratch as possible.</p><img src=\"https://www.byran.ee/img/photo.jpg\"><p><em>Booting and inserting magnetically attached keyboard</em></p><img src=\"https://www.byran.ee/img/minecraft.jpg\"><p><em>Epic Hypixel Bedwars gaming</em></p><h2>Finding an electron in a cloud</h2><p>I first made a mental map and transferred it into Obsidian:</p><p>Boiling it down, it landed me with a lofty list of goals:</p><ul><li><a href=\"https://www.rock-chips.com/uploads/pdf/2022.8.26/192/RK3588%20Brief%20Datasheet.pdf\" target=\"_blank\">RK3588</a> SoC Motherboard\n<ul></ul></li><li>Powertrain\n<ul><li>~60Wh Li-ion battery pack</li></ul></li><li>Peripherals\n<ul><li>Wireless mechanical keyboard</li><li>Glass-topped multi-touch trackpad</li></ul></li><li>Anodized aluminum CNC chassis</li></ul><p>I looked towards single-board computer SoCs, as board manufacturers commonly release schematics for reference. In many aspects, the Rockchip RK3588 is the fastest consumer-procurable chip on the market. Despite the spotty software support, the hardware documentation has lots of developer resources and <a href=\"https://wiki.friendlyelec.com/wiki/images/1/15/CM3588_NAS_SDK_2309_SCH.PDF\" target=\"_blank\">reference schematics</a> from SBC manufacturers.</p><ul><li>Quad core A76 and quad core A55</li><li>I/O: 8K display, dual USB3.1, PCIe 3.0 x 4, HDMI2.1/eDP 1.4, etc.</li></ul><p>With only a few months to work on this project, an SoM (system on module) like the Raspberry Pi CM5 presented the best option for its hardware compatibility and a high likelihood of a snug integration. Choosing an SoM also alleviates memory and other high-speed signaling concerns. Looking around for a RK3588 SoM, I came across the CM3588 by FriendlyElec. Cheap, well-documented, and easily procurable. Sounds good!</p><img src=\"https://www.byran.ee/img/cm3588.jpg\"><p>I hopped on <a href=\"https://www.panelook.com\" target=\"_blank\">panelook.com</a> and filtered by size and resolution. I’ve always been a sucker for high pixel density, so I went with a 4K AMOLED 13.3” display. Cross referencing stock availability on Taobao (Chinese domestic Aliexpress), the <a href=\"https://www.panelook.com/ATNA33TP11_Samsung_13.3_OLED_parameter_59424.html\" target=\"_blank\">ATNA33TP11</a> seemed to be the one with most  stock since OLED risked burn-in.</p><p>A highlight: during display evaluation, switching out a connector and shortening the board by 2mm improved signal integrity  for the 1.5GHz x 4 signals go pass through. Getting the display running on Linux meant finding system logs from Asus laptops that have this display, reverse-engineering the values, and tuning the power-on timings amongst other things . TLDR; getting a 4K AMOLED eDP display running on non-mainline Linux was a heck of a journey, so read <a href=\"https://www.byran.ee/posts/creation/\">this if you’re interested</a> (coming soon).</p><img src=\"https://www.byran.ee/img/screen.jpg\"><p><em>ATNA33TP11 working with display evaluation board V2 short</em></p><p>The cells had to be 6mm thin and four packs lined up should take roughly half of the entire chassis volume. Chinese manufacturers don’t stock batteries readily, and shipping them to the US would be a pain. Thus, I looked on the American side. I stumbled upon with <a href=\"https://www.batteryspace.com/polymerli-ionmodule37v4250mah157wh85arate-prewiredwithpcbpl5467100.aspx\" target=\"_blank\">these batteries</a> from AA Portable Power Corp. or batteryspace.com. or Powerizer. Doing the power calculations, we get: 4.250Ah  4S = 62.9 Wh with max 8A (so max 134.4W discharge)! Solid.</p><p>The total voltage is 4.2V (peak) * 4S = 16.8V. The system’s designed for up to 20V USB-C (AKA 100W) and passed into the <a href=\"https://www.ti.com/product/BQ25713\" target=\"_blank\">BQ25713</a> charging IC. The batteries are balanced with the <a href=\"https://www.ti.com/product/BQ77915\" target=\"_blank\">BQ77915</a> to ensure safe charging, and the power is tracked with an <a href=\"https://www.analog.com/en/products/ltc2943.html\" target=\"_blank\">LTC2943</a> to calculate a state-of-charge percentage. I popped in an ESP32-S3 module as the controller for everything, and set it to production.</p><p>After writing drivers and sitting on the undecipherable datasheets for days, I had the batteries charging. I successfully <a href=\"https://a.co/d/3b8R9mN\" target=\"_blank\">load tested</a> it to around 5A and powered the full system. There’s still a lot of quiescent current (about ~50mA), but I haven’t had the time to optimize the firmware.</p><p>The USB of the ESP32 connects to the internal USB on the motherboard to feed the power telemetry over UART. A Python script and kernel module in the OS forwards it to the battery service in the kernel to display it natively.</p><img src=\"https://www.byran.ee/img/powertrain.jpg\"><p><em>Powertrain V0.2 inside laptop</em></p><p>In settings, tick “Align controls with KiCad” for mouse pan/zoom/scroll</p><p>With those decisions made up, I aimed for &gt;90mm motherboard width based on a prelim CAD from the batteries and display dimensions.</p><p>On the physical I/O side, I settled on dual USB3.1 Type-C ports, a USB2.0 Type-A port, a headphone jack, and a microSD card slot. Internally, the M.2 E-key connects to an <a href=\"https://a.co/d/4lJDnwX\" target=\"_blank\">RTL8852BE</a> WiFi 6 (802.11ax) + BT5.2 wireless card and the M.2 M-key accommodates up to an 2242-sized NVMe SSD. A full size NVMe SSD can fit with some modifications of the chassis too.</p><p>Tangent over, this leaves me with around ~90mm of board height. Implementing all the features on the final mainboard would stretch this writeup too long, so read <a href=\"https://www.byran.ee/posts/creation/\">this if you’re interested</a> (coming soon).</p><p>In settings, tick “Align controls with KiCad” for mouse pan/zoom/scroll</p><img src=\"https://www.byran.ee/img/mainboard.jpg\"><p><em>Detailed hardware overview</em></p><p><a href=\"https://github.com/Joshua-Riek/ubuntu-rockchip\" target=\"_blank\">Joshua Riek’s ubuntu-rockchip</a> kernel/distro combined an out-of-the-box experience with lots of optimizations. Using Armbian’s kernel (I believe it’s still off Rockchip’s kernel) meant that it offered nearly all the features of the RK3588 on a developer-ready kernel configuration.</p><p>Since nearly all the work I needed to do was abstracted in the DeviceTree (DTS) hardware configuration language implemented with U-boot, the bootloader, I took advantage of their system-agnostic nature to speed up my trial-and-error process having never done any Linux work.</p><p>Instead of developing and compiling code on the RK3588 itself, I used my daily driver MacBook and Visual Studio Code. Once I made a change in the DTS, I’d use Orbstack (virtualization software) running Ubuntu 24.04 (shared filesystem and kernel with macOS) and compile the DeviceTree there.</p><pre tabindex=\"0\" data-language=\"txt\"><code></code></pre><p>Pointing U-Boot to a custom compiled DTB (devicetree binary), I ’ed the compiled  to the OS. A  regenerates the bootloader configurations, and a reboot updates the changes.</p><p>That’s how I did the hardware bringup—display configurations, PCIe, USB, and other low-level system tweaks. The rest is just a standard install of Ubuntu 24.04 LTS with Linux Kernel 6.1.</p><img src=\"https://www.byran.ee/img/working.jpg\"><p><em>Testing batteries and writing DTS</em></p><p><em>In-depth software overview</em></p><p>Imagine being able to just pull out your laptop’s keyboard and use it as just another wireless keyboard for literally anything! Just me? Maybe.</p><p>Being a mechanical keyboard addict with quite a few <a href=\"https://zmk.dev\" target=\"_blank\">ZMK keyboards</a> designed, I chose the <a href=\"https://github.com/pashutk/Cherry_MX_ULP\" target=\"_blank\">Cherry MX ULP mechanical switches</a> for the best feel. Of course, a battery and fully mechanical switches add  of height. I used a 1mm thin <a href=\"https://www.powerstream.com/thin-lithium-ion.htm\" target=\"_blank\">200mAh battery</a> and a custom battery protection board that sticks up between two rows of keys to cut down on ~1.6mm (PCB height). The nRF52840 SoC running ZMK Firmware is right underneath the spacebar. A sandwich of PLA and 6061 aluminum from Fabworks crammed everything under ~7mm.</p><p>Since the keycaps aren’t easily procurable, I got a <a href=\"https://www.printedsolid.com/products/e3d-revo-nozzles?srsltid=AfmBOopKMJDs7gFpzrJg3kHQ-aJLDFTjeFO0ZJAYf1hADzy5iurNlkLB\" target=\"_blank\">0.15mm nozzle</a> for my Bambu Lab X1C and printed them with PLA. It got me down a rabbit hole of tungsten nozzles, and I got quoted ~$400 for 20x 0.15mm nozzles. I’ve been thinking of trying that out too. But alas, printing out all the keycaps and assembling for the last time, the keyboard was done.</p><p>Moving on to the trackpad, it was quite quick. I knew from the start that I wanted a good trackpad, so making my own with zero capacitive tracking experience is a no-go. Searching online, I came across the Azoteq <a href=\"https://www.mouser.com/ProductDetail/Azoteq/PXM0057-401-S?qs=t7xnP681wgVkp9ZZYy6TPA%3D%3D\" target=\"_blank\">PXM0057-401</a> evaluation module on Mouser. It had it all—glass surface, multi-touch, and worked over USB. And, it was only 35 bucks or so. However, the trackpad has ceased production without many alternatives.</p><p>With the keyboard and trackpad working, it was time to put on the finishing touches.</p><p>In settings, tick “Align controls with KiCad” for mouse pan/zoom/scroll</p><img src=\"https://www.byran.ee/img/peripherals.jpg\"><p>*Counterclockwise from top left: keyboard side profile, typing on keyboard, trackpad, 1mm battery on back, nRF52840 SoC area</p><p><em>OnShape wireframe exploded view</em></p><p>Roughly the same time I began the system design, I sent a few CNC aluminum blocks off to JLC for evaluation with different anodization finishes. The dark gray anodization felt “best”, but I preferred the look of the matte black, so I settled on that.\nUsing PTC OnShape, I (attempted) CAD’ed a robust and minimalistic look and a blend of my two favorite laptop lineup designs, the Razer Blade and the MacBook Pro. Because of the removable keyboard, the bottom has no screws. Instead, the palm rest screws into the bottom chassis. <a href=\"https://cad.onshape.com/documents/a18bb6df7dbba66df24a7ec8/w/967d921e60c207e3b6f5cf7b/e/1f78a9387b17c2d178742295?renderMode=0&amp;uiState=678da20d5bee0d1ad2dd55f1\" target=\"_blank\">CAD Link here.</a></p><p>The hardest part about the chassis was the hinge. I used <a href=\"https://frame.work/products/display-hinge-kit?v=FRANFB0001\" target=\"_blank\">Framework’s 13.3” hinge</a> because it has a 3D model. I constrained it in OnShape so I can see the exact closing angles.</p><p>The chassis layout is fairly simple: batteries on the bottom, the power board on the right, motherboard on the left, and the hinge mechanism on top. Oh, and a transparent PETG FDM printed power button that lights up on a custom PCB. To balance out the asymmetric hinge (caused by the mainboard being too wide), a little <a href=\"https://www.mcmaster.com/2153T11/\" target=\"_blank\">carbon fiber rod</a> lines up on the left side too.</p><img src=\"https://www.byran.ee/img/chassis_empty.jpg\"><p>It was a battle to get the screen assembly to not hit anything while also covering\nAlthough I started considering thermals way in advance, hence the gap here for the heatpipe to go through, I still had difficulty fitting everything in. The distance between the bottom of the keyboard and the top of the heatsink is less than a half a millimeter. The cooling system is really constrained because I don’t have the resources to make a custom heatpipe and fin solution. So, I made a full copper CNC heatsink (from JLCCNC) and a heatpipe connected to a fan. It’s all connected with <a href=\"https://www.lttstore.com/products/ptm7950-phase-change-thermal-pad\" target=\"_blank\">PTM7950</a>.</p><p>I also added <a href=\"https://puiaudio.com/product/speakers-and-receivers/as04004mo-sp40\" target=\"_blank\">these</a> PUI audio speakers on either side. The audio from the CM3588’s DAC didn’t work and I ran out of debugging time, so I made a USB to audio converter board separately and shot it through an Class-D amplifier. I would’ve also made the amp, but I ran out of time.</p><p>As I reached final assembly, I used a mix of JLC’s selective laser sintering (SLS) of nylon powder and FDM printed PA6-CF for smaller structural parts. Putting it all together with the matte black CNC aluminum chassis, I finally had my laptop.</p><img src=\"https://www.byran.ee/img/inside.jpg\"><p><em>Inside full laptop assembly</em></p><p>The hardest class I’ve taken so far was quantum mechanics in my junior spring term. A few months before spending hours solving time-independent and dependent Schrödinger equations, I was on the squash bus (the sport, not the vegetable). My friend suggested I make a laptop for my senior project—and that was all.\nI came up with the name anyon_e in June, after I finished the quantum course.</p><p>Making this laptop was hard. Mentally pressured with a deadline, and a constant inter-disciplinary challenge across electrical, software, and mechanical systems. Summing up everything I’ve ever done. It took up most of my mind from May until now.</p><p>Inspired by open-source projects like <a href=\"https://zmk.dev\" target=\"_blank\">ZMK</a>, <a href=\"https://www.kicad.org\" target=\"_blank\">KiCAD</a>, <a href=\"https://www.blender.org\" target=\"_blank\">Blender</a>, and countless <a href=\"https://certification.oshwa.org/basics.html\" target=\"_blank\">OSHW</a> projects, I want to do my own little part. To put power in people’s hands in creation, innovation, imagination, or whatever else. To attempt the impossible.</p><img src=\"https://www.byran.ee/img/conclusion.jpg\">","contentLength":11328,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://news.ycombinator.com/item?id=42797260"},{"title":"How to improve your WFH lighting to reduce eye strain","url":"https://rustle.ca/posts/articles/work-from-home-lighting","date":1737576537,"author":"jahfer","guid":210,"unread":true,"content":"<div><p><em>I work from home everyday, I am susceptible to eye strain, eye pain, and dizziness. Having a working environment that’s as easy on my eyes as possible is of critical importance. I hope that by sharing what I've learned, it can be helpful to you if you work from home, and like many, have experienced WFH eye strain.</em></p><p><em>Disclaimer: I'm not an ergonomist or optometrist. These tips are intended to help improve your work from home comfort based on my own personal experience.</em></p></div><div><ol><li>An even, diffused lighting environment is best for the eyes</li><li>When it comes to light brightness, too much is just as problematic as too little</li><li>Use natural light wherever possible&nbsp;</li><li>Quality of artificial light matters</li><li>The best lighting for camera, is not necessarily the best lighting for ergonomics</li><li>Even the perfect lighting environment will fatigue you — take breaks, and take care of yourself</li></ol></div><h2>What is it about computer screens that makes them fatiguing?</h2><div><p>Most monitors have some level of flicker. This flickering is generally not visually noticeable, but can still be fatiguing. Monitors at lower brightness levels exhibit more flicker - as they use PWM dimming (Pulse Width Modulation). In some monitors this is done by changing the ON/OFF intervals, increasing OFF timing, and lowering ON timing — while maintaining the same brightness! This creates an awful strobe-effect, and can be very exhausting — especially when working in an environment where the monitor is the sole light source.</p></div><div><p>High contrast lighting can exist in a few different formats. It can exist as  — that is for example light coming in from a window, into a dark room, illuminating a part of your desk. This glare is fatiguing on your eyes because they are accommodating for two levels of brightness simultaneously, while also trying to conduct tasks on a computer monitor — such as reading. High contrast can also exist in a room with bright light on the left, and darkness on the right. This is fatiguing for your eyes to compensate for.</p></div><div><p>When working at a computer, most of the time and the don't move significantly. We focus at the same distances for long periods of time. This causes our eye muscles to get tight and overworked. This can cause our eyes to get tired, spasm, or sometimes even make it very hard to relax our eyes. Although improved office lighting can help with this, the main way to solve for this problem is to take breaks practicing the 20/20/20 rule: Every 20 minutes, look up from your screen and focus on something approximately 20 feet away for at least 20 seconds.</p></div><div><p>Light in the office primarily comes in from the sun. The direct light causes glare, and because of the lack of diffusion, makes for dark corners in the room. Even with a light overhead, it's not enough to equal the amount from outside. This results in high contrast, dark spots behind the monitor, and harsh shadows. Blackout curtains are of little help because they only serve to reduce the size of the light coming in, as opposed to aiding with diffusion. Anytime it's dark outside, it's like working at night. Not fun.</p></div><div><p>Light primarily comes from above. Because of this single light source, it makes for harsh shadows, dark spots, and high contrast. The contrast issue is particularly apparent with the monitor, which although can be dimmed, creates a bright monitor, which also self-shades the wall behind resulting in a dark background.</p></div><h5>Window light sources, and filtering light</h5><div><p>Windows now have light-filtering curtains, which helps to not only reduce the amount of light on bright days, but also to heavily diffuse the light coming in, which makes for a beautiful glow in the room. In addition, I've installed wood-blinds (not shown) behind the curtains which helps to further control the amount of light entering the office on very bright days.<em>Products used: Sheer curtains • Wood Blinds</em></p></div><div><p>Each corner of the room now has a torchiere lamp, which helps to create an even lighting environment. These lamps point directly up and light the room indirectly through reflections off of the walls and ceiling. In the center of the ceiling, a fabric wrapped light fixture provides  diffused lighting. This light is dimmable and can be adjusted to match the amount of light from the standing lamps. </p></div><div><p>The desk now has even lighting. The brightness of the monitor is now matched by a dimmable flicker-free backlight, which makes working at the display less fatiguing. In addition, a monitor lightbar (not shown), provides indirect light to the desk, reflected off the surface which is completely dimmable and flicker-free. These two lights together help to make for an even lighting environment during the day, and a calm and cozy environment at night. In addition to the two lights, the Apple Studio display has an ambient light sensor, which adjusts the brightness to match the ambient light, which is a game changer for light sensitive people. </p></div><div><ol><li><p><strong>An even, diffused lighting environment is best for the eyes. </strong>Try to balance out dark/light spots with additional lighting, and diffusing strong light sources — like the sun.</p></li><li><p><strong>When it comes to light brightness, too much is just as problematic as too little. </strong>When dealing with too little light, add additional light sources which provide indirect, and reflective lights — such as up-lights, or torchieres, or lights that have a shade. When dealing with too much light — use blinds, sheer curtains, or light filtering curtains. If you have too much light from an artificial source, use lower wattage bulbs, or consider adding a dimmer switch.</p></li><li><p><strong>Use natural light wherever possible. </strong>If you've got natural light, use it to your advantage. Natural light is healthier than artificial light — there's no flicker, and it can provide us with much needed vitamin D. For rooms with small windows, use mirrors to help reflect natural light and fill the room. </p></li><li><p><strong>Quality of Artificial Light Matters. </strong>Wherever possible seek out high quality lighting that is dimmable and flicker-free. Spending a few extra dollars for these products is worth it, and it will result in less fatigue. For regular bulbs, I recommend <a href=\"https://www.homedepot.ca/product/philips-ultradefinition-led-a19-e26-60w-equivalent-light-bulb-dimmable-soft-white-2700k-2-pack/1001664067?eid=PS_GO_140203__ALL_PLA-526641&amp;eid=ds_ads_van_27772_FY24%20%7C%20MS%20%7C%20Always%20on%20%7C%20Google%20Shopping&amp;pid=1001664067&amp;store=7158&amp;utm_source=google&amp;utm_medium=vantage&amp;utm_campaign=25029&amp;utm_content=26766&amp;gad_source=1&amp;gclid=CjwKCAiAxea5BhBeEiwAh4t5K7JuMnZCfX-pH8h00lhpixTdd7IHwLgyH18hfcewKmL6MXn-lSnxUhoCPCUQAvD_BwE#reviews\"><em>Philipps Ultra Definition LED Soft White</em></a>bulbs which have low flicker rates, glass enclosures, high color rendering index, and a relatively inexpensive pricepoint.</p></li><li><p><strong>The best lighting for camera, is not necessarily the best lighting for ergonomics. </strong>When working from home, we spend a lot of time on video calls, and it's natural to want to look our best. Studio lights that attach to our desks, or facing a window outdoor will result in great lighting on camera, but can also cause fatigue. Consider reserving this lighting for calls, or see if generally better room lighting can result in a similar light quality on camera.</p></li><li><p><strong>Even the perfect lighting environment will fatigue you — take breaks, and think beyond lighting! </strong>Having a great lighting environment will help you with stamina, but having good work habits like the 20/20/20 rule, and changing up posture and working environments are important in order to take the best care of your eyes, and your body. Think beyond lighting when considering ergonomics, such as room humidity (to limit dry eye), posture, chair position, and stay moving to keep blood flowing.</p></li></ol></div><div><p><em>It may seem daunting, but I believe that with some small changes it can make a big difference. I hope this gives you new ideas to try, and I'd love to hear what you are doing in your own office as well! Cheers!</em></p></div>","contentLength":7392,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://news.ycombinator.com/item?id=42796950"},{"title":"TabBoo – add random jumpscares to websites you're trying to avoid","url":"https://tabboo.xyz/","date":1737566834,"author":"thatsnotoptimal","guid":209,"unread":true,"content":"<h2>\n          Add  to sites you're\n          trying to avoid\n        </h2><p>\n          You're stuck in an addictive, endless loop, loading the same sites\n          over and over again. Install the extension and let\n           do the rest.\n        </p><a href=\"https://chromewebstore.google.com/detail/tabboo/jjdalbijcodgjpeepgllndclalllbopg\" target=\"_blank\">+ Add to Chrome</a>","contentLength":252,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://news.ycombinator.com/item?id=42795237"},{"title":"Mastercard DNS error went unnoticed for years","url":"https://krebsonsecurity.com/2025/01/mastercard-dns-error-went-unnoticed-for-years/","date":1737559557,"author":"todsacerdoti","guid":208,"unread":true,"content":"<p>The payment card giant  just fixed a glaring error in its domain name server settings that could have allowed anyone to intercept or divert Internet traffic for the company by registering an unused domain name. The misconfiguration persisted for nearly five years until a security researcher spent $300 to register the domain and prevent it from being grabbed by cybercriminals.</p><div><img aria-describedby=\"caption-attachment-70128\" decoding=\"async\" src=\"https://krebsonsecurity.com/wp-content/uploads/2025/01/akamne.png\" alt=\"\" width=\"667\" height=\"478\"><p>A DNS lookup on the domain az.mastercard.com on Jan. 14, 2025 shows the mistyped domain name a22-65.akam.ne.</p></div><p>From June 30, 2020 until January 14, 2025, one of the core Internet servers that MasterCard uses to direct traffic for portions of the mastercard.com network was misnamed. MasterCard.com relies on five shared Domain Name System (DNS) servers at the Internet infrastructure provider [DNS acts as a kind of Internet phone book, by translating website names to numeric Internet addresses that are easier for computers to manage].</p><p>All of the Akamai DNS server names that MasterCard uses are supposed to end in “akam.net” but one of them was misconfigured to rely on the domain “.”</p><p>This tiny but potentially critical typo was discovered recently by ,&nbsp;founder of the security consultancy <a href=\"https://www.seralys.com/\" target=\"_blank\" rel=\"noopener\">Seralys</a>. Caturegli said he guessed that nobody had yet registered the domain akam.ne, which is under the purview of the top-level domain authority for the West Africa nation of <a href=\"https://en.wikipedia.org/wiki/Niger\" target=\"_blank\" rel=\"noopener\">Niger</a>.</p><p>Caturegli said it took $300 and nearly three months of waiting to secure the domain with the registry in Niger. After enabling a DNS server on akam.ne, he noticed hundreds of thousands of DNS requests hitting his server each day from locations around the globe. Apparently, MasterCard wasn’t the only organization that had fat-fingered a DNS entry to include “akam.ne,” but they were by far the largest.</p><p>But the researcher said he didn’t attempt to do any of that. Instead, he alerted MasterCard that the domain was theirs if they wanted it, copying this author on his notifications. A few hours later, MasterCard acknowledged the mistake, but said there was never any real threat to the security of its operations.</p><p>“We have looked into the matter and there was not a risk to our systems,” a MasterCard spokesperson wrote. “This typo has now been corrected.”</p><p>Meanwhile, Caturegli received a request submitted through , a program that offers financial rewards and recognition to security researchers who find flaws and work privately with the affected vendor to fix them. The message suggested his public disclosure of the MasterCard DNS error via <a href=\"https://www.linkedin.com/feed/update/urn:li:activity:7285038365236682753/\" target=\"_blank\" rel=\"noopener\">a post on LinkedIn</a> (after he’d secured the akam.ne domain) was not aligned with ethical security practices, and passed on a request from MasterCard to have the post removed.</p><div><img aria-describedby=\"caption-attachment-70126\" decoding=\"async\" loading=\"lazy\" src=\"https://krebsonsecurity.com/wp-content/uploads/2025/01/mastercard-response.png\" alt=\"\" width=\"708\" height=\"855\"><p>MasterCard’s request to Caturegli, a.k.a. “Titon” on infosec.exchange.</p></div><p>Caturegli said while he does have an account on Bugcrowd, he has never submitted anything through the Bugcrowd program, and that he reported this issue directly to MasterCard.</p><p>“I did not disclose this issue through Bugcrowd,” Caturegli wrote in reply. “Before making any public disclosure, I ensured that the affected domain was registered to prevent exploitation, mitigating any risk to MasterCard or its customers. This action, which we took at our own expense, demonstrates our commitment to ethical security practices and responsible disclosure.” </p><p>Most organizations have at least two authoritative domain name servers, but some handle so many DNS requests that they need to spread the load over additional DNS server domains. In MasterCard’s case, that number is five, so it stands to reason that if an attacker managed to seize control over just one of those domains they would only be able to see about one-fifth of the overall DNS requests coming in.</p><p>But Caturegli said the reality is that many Internet users are relying at least to some degree on public traffic forwarders or DNS resolvers like  and .</p><p>“So all we need is for one of these resolvers to query our name server and cache the result,” Caturegli said. By setting their DNS server records with a long TTL or “Time To Live” — a setting that can adjust the lifespan of data packets on a network — an attacker’s poisoned instructions for the target domain can be propagated by large cloud providers.</p><p>“With a long TTL, we may reroute a LOT more than just 1/5 of the traffic,” he said.</p><p>The researcher said he’d hoped that the credit card giant might thank him, or at least offer to cover the cost of buying the domain.</p><p>“We obviously disagree with this assessment,” Caturegli wrote in <a href=\"https://www.linkedin.com/feed/update/urn:li:activity:7285038365236682753?commentUrn=urn%3Ali%3Acomment%3A%28activity%3A7285038365236682753%2C7285289297706909697%29&amp;dashCommentUrn=urn%3Ali%3Afsd_comment%3A%287285289297706909697%2Curn%3Ali%3Aactivity%3A7285038365236682753%29\" target=\"_blank\" rel=\"noopener\">a follow-up post</a> on LinkedIn regarding MasterCard’s public statement. “But we’ll let you judge— here are some of the DNS lookups we recorded before reporting the issue.”</p><div><img aria-describedby=\"caption-attachment-70125\" decoding=\"async\" loading=\"lazy\" src=\"https://krebsonsecurity.com/wp-content/uploads/2025/01/mastercard-domains.png\" alt=\"\" width=\"790\" height=\"561\" srcset=\"https://krebsonsecurity.com/wp-content/uploads/2025/01/mastercard-domains.png 790w, https://krebsonsecurity.com/wp-content/uploads/2025/01/mastercard-domains-768x545.png 768w, https://krebsonsecurity.com/wp-content/uploads/2025/01/mastercard-domains-782x555.png 782w, https://krebsonsecurity.com/wp-content/uploads/2025/01/mastercard-domains-100x70.png 100w\" sizes=\"(max-width: 790px) 100vw, 790px\"><p>Caturegli posted this screenshot of MasterCard domains that were potentially at risk from the misconfigured domain.</p></div><p>As the screenshot above shows, the misconfigured DNS server Caturegli found involved the MasterCard subdomain . It is not clear exactly how this subdomain is used by MasterCard, however their naming conventions suggest the domains correspond to production servers at Microsoft’s  cloud service. Caturegli said the domains all resolve to Internet addresses at Microsoft.</p><p>“Don’t be like Mastercard,” Caturegli concluded in his LinkedIn post. “Don’t dismiss risk, and don’t let your marketing team handle security disclosures.”</p><p>One final note: The domain akam.ne has been registered previously — in December 2016 by someone using the email address um-i-delo@yandex.ru. The Russian search giant Yandex reports this user account belongs to an “Ivan I.” from Moscow. Passive DNS records from <a href=\"https://www.domaintools.com\" target=\"_blank\" rel=\"noopener\">DomainTools.com</a> show that between 2016 and 2018 the domain was connected to an Internet server in Germany, and that the domain was left to expire in 2018.</p><p>This is interesting given <a href=\"https://www.linkedin.com/feed/update/urn:li:activity:7285038365236682753?commentUrn=urn%3Ali%3Acomment%3A%28activity%3A7285038365236682753%2C7285221445796835329%29&amp;replyUrn=urn%3Ali%3Acomment%3A%28activity%3A7285038365236682753%2C7285223757982363648%29&amp;dashCommentUrn=urn%3Ali%3Afsd_comment%3A%287285221445796835329%2Curn%3Ali%3Aactivity%3A7285038365236682753%29&amp;dashReplyUrn=urn%3Ali%3Afsd_comment%3A%287285223757982363648%2Curn%3Ali%3Aactivity%3A7285038365236682753%29\" target=\"_blank\" rel=\"noopener\">a comment on Caturegli’s LinkedIn post from an ex-Cloudflare employee</a> who linked to a report he co-authored on a similar typo domain apparently registered in 2017 for organizations that may have mistyped their AWS DNS server as “” instead of “.” DomainTools reports that this typo domain also was registered to a Yandex user (playlotto@yandex.ru), and was hosted at the same German ISP — Team Internet (AS61969).</p>","contentLength":6248,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://news.ycombinator.com/item?id=42793783"},{"title":"Ross Ulbricht granted a full pardon","url":"https://twitter.com/Free_Ross/status/1881851923005165704","date":1737504652,"author":"Ozarkian","guid":207,"unread":true,"content":"<!DOCTYPE html>","contentLength":0,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://news.ycombinator.com/item?id=42786962"},{"title":"Stargate Project: SoftBank, OpenAI, Oracle, MGX to build data centers","url":"https://apnews.com/article/trump-ai-openai-oracle-softbank-son-altman-ellison-be261f8a8ee07a0623d4170397348c41","date":1737498562,"author":"tedsanders","guid":206,"unread":true,"content":"","contentLength":0,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://news.ycombinator.com/item?id=42785891"},{"title":"The FizzBuzz that did not get me the job","url":"https://kranga.notion.site/The-fizzbuzz-that-did-not-get-me-the-job-180e7c22ef3b80c3a386f7f8de720ac7","date":1737490505,"author":"Andugal","guid":205,"unread":true,"content":"<!DOCTYPE html>","contentLength":0,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://news.ycombinator.com/item?id=42784699"},{"title":"Ask HN: Is anyone doing anything cool with tiny language models?","url":"https://news.ycombinator.com/item?id=42784365","date":1737488379,"author":"prettyblocks","guid":204,"unread":true,"content":"<div>I mean anything in the 0.5B-3B range that's available on Ollama (for example). Have you built any cool tooling that uses these models as part of your work flow?</div>","contentLength":160,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://news.ycombinator.com/item?id=42784365"},{"title":"0-click deanonymization attack targeting Signal, Discord, other platforms","url":"https://gist.github.com/hackermondev/45a3cdfa52246f1d1201c1e8cdef6117","date":1737471584,"author":"hackermondev","guid":203,"unread":true,"content":"","contentLength":0,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://news.ycombinator.com/item?id=42780816"},{"title":"Startup Winter: Hacker News Lost Its Faith","url":"https://www.vincentschmalbach.com/startup-winter-hacker-news-lost-its-faith/","date":1737453607,"author":"vincent_s","guid":202,"unread":true,"content":"<p>In 2013, a failing founder posted their story on Hacker News (<a href=\"https://news.ycombinator.com/item?id=5255209\">link</a>). The responses were overwhelmingly supportive: \"Failure is just an event, not who you are.\" \"Get back up and try again!\" \"This is valuable experience for next time.\"</p><p>Fast forward to 2025. Another founder shares their journey of six failed attempts (<a href=\"https://news.ycombinator.com/item?id=42771676\">link</a>). The sentiment in the comments is strikingly different: \"Would have been better to work at BigTech.\" \"The rat race isn't worth it.\" \"Most interesting stories remain buried while we're presented with a somewhat skewed reality.\"</p><p>This shift isn't isolated to these two posts. The same forum that championed \"fail fast, fail often\" now regularly questions whether the startup path makes sense at all.</p><ol><li><p>The human cost has become more visible. Stories of burnout, failed relationships, and mental health struggles are no longer swept under the rug of \"hustle culture.\"</p></li><li><p>Big Tech compensation has transformed the risk-reward equation. When senior engineers can make $300K+ at established companies, the financial argument for startups becomes harder to justify.</p></li><li><p>The VC model's limitations have become apparent. The focus on hypergrowth and exits has left many founders feeling trapped between authentic business building and investor expectations.</p></li><li><p>The industry has matured. The low-hanging fruit of the mobile/web era has largely been picked, making truly innovative opportunities harder to find.</p></li></ol><p>I believe we're entering what might be called a \"Startup Winter\" - not because startups have stopped being created, but because the mythology around them has frozen over.</p><p>What might emerge from this winter could be a startup ecosystem that's less glamorous but more authentic. One where alternative paths to innovation are celebrated alongside the traditional VC-backed route.</p>","contentLength":1779,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://news.ycombinator.com/item?id=42778266"},{"title":"The Most Mario Colors","url":"https://lmnt.me/blog/the-most-mario-colors.html","date":1737450613,"author":"ingve","guid":201,"unread":true,"content":"<p>This may be the silliest post I’ve ever written.</p><p>The  franchise has  distinct logo styles. The first began with the  arcade game and is mostly used for side-scrolling  games, though not all of those games use that style. The second is a multicolor polygonal style, and though it’s primarily used for 3D  adventures now, it was introduced with .</p><img src=\"https://lmnt.me/files/images/mario/super-mario-world.webp\"><p>Most Mario games with polygonal logos have a different color per letter, but the sequence of colors in Mario’s name is rarely the  sequence across games.</p><p>This captivated me—for some reason—and I set out to analyze every Mario video game logo to see if I could find a pattern for specific arrangements of colors and to determine the “most Mario” color scheme.</p><p>Every logo in this analysis adheres to the following criteria:</p><ol><li>The title must be in the polygonal style</li><li>Mario’s name must be in the title</li><li>Mario’s name must be multicolor</li><li>The sequence of colors cannot be in rainbow order</li></ol><p>Direct sequels that use the same sequence of colors  included, but re-releases are not. On that note, titles that were released on multiple platforms must have different logos and/or key art to have both included. <small>(That means  on N64 and GBC are considered to be one logo.)</small> Regional releases only count if each logo had a different sequence.</p><p>With that out of the way, here’s a list of 40  games—in release order—showing which color was used for each letter in Mario’s name.</p><table><tbody><tr><td>Super Mario World 2: Yoshi’s Island</td></tr><tr><td>Mario Golf: Toadstool Tour</td></tr><tr></tr><tr></tr><tr></tr><tr></tr><tr></tr><tr></tr><tr></tr><tr><td>Mario Tennis: Ultra Smash</td></tr><tr><td>Mario + Rabbids: Kingdom Battle</td></tr><tr></tr><tr></tr><tr><td>Mario + Rabbids: Sparks of Hope</td></tr></tbody></table><p><small>That question mark for  is because the O is a globe.</small></p><p>Here are some initial observations:</p><ul><li>Though the first two instances had a  M, it was used only once more, for  in 2018.</li><li>The most common color to be used  in Mario’s name is , followed by .</li><li>The first time any logo had  was  in 2001.</li></ul><img src=\"https://lmnt.me/files/images/mario/super-mario-advance.webp\"><p>Let’s look at the total count per letter, per color to see what more we can learn.</p><table><tbody></tbody></table><ul><li>The letter M has almost always been . </li></ul><ul><li> is the most common color overall, with a whopping  in 40 logos.</li><li> is also the most consistent choice for any letter, with 70% coverage for the letter A.</li></ul><ul><li> is the least-used overall. </li><li> has never been used for A or R.</li><li> has never been used for M or A.</li><li> has never been used for O.</li></ul><p>Given this data, we can surmise the “most Mario” colors are:</p><table><tbody></tbody></table><p>Though these exact sequences do occur, surprisingly, there are  sequences that show up just as often. Let’s see how many times an exact color sequence was used.</p><table><tbody></tbody></table><p>Despite red being the most common  for the letter M, one of the most common  doesn’t have one. Most instances where the Mario logo begins with a blue M, it is this  sequence. Notable examples of this sequence are  and both  titles.</p><img src=\"https://lmnt.me/files/images/mario/super-mario-64.webp\"><p>Is  sequence in the running for the “most Mario”? Hard to say. Because another way to look at it is to find the most common sequence of the first  letters.</p><table><tbody></tbody></table><p>From this perspective, the red-green-yellow-blue sequence is a lot more common than blue-green-yellow-red, making it the clear winner. That’s also in line with the most common color per letter we deduced earlier. Here are the 10 titles with that sequence, representing a quarter of all these logos.</p><table><tbody><tr></tr><tr></tr><tr><td>Mario Tennis: Ultra Smash</td></tr><tr><td>Mario + Rabbids: Kingdom Battle</td></tr><tr></tr><tr></tr><tr><td>Mario + Rabbids: Sparks of Hope</td></tr></tbody></table><p>Some notes about this selection:</p><ul><li>Two  games. Two  games. Two  games.</li><li>The first with any of these sequences was 14 years ago.</li><li>All of these games were released in a span of 11 years.</li><li>Of these games, 9 out of 10 feature Peach on the box art. <small>(Is that why pink is more commonly used lately?)</small></li></ul><img src=\"https://lmnt.me/files/images/mario/super-mario-3d-land.webp\"><p>This sequence is used on three major franchise games, four sports games, two crossovers, and a . All recent titles. Is this pattern, initially set by , the “most Mario” color sequence?</p><p>Let’s look at one more thing: <em>The Super Mario Bros. Movie</em>.</p><table><tbody><tr><td>The Super Mario Bros. Movie</td></tr></tbody></table><img src=\"https://lmnt.me/files/images/mario/the-super-mario-bros-movie.webp\"><p>Was this useful for me? For you? For ? Probably not. Has Nintendo done a similar analysis to help determine the coloration for the film logo? Maybe. Or maybe it’s just what  looks like lately.</p>","contentLength":3993,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://news.ycombinator.com/item?id=42777948"},{"title":"Reverse engineering Call of Duty anti-cheat","url":"https://ssno.cc/posts/reversing-tac-1-4-2025/","date":1737414430,"author":"deverton","guid":200,"unread":true,"content":"<p><strong>I’ve been reversing Black Ops Cold War for a while now, and I’ve finally decided to share my research regarding the user-mode anti-cheat inside the game. It’s not my intention to shame or promote cheating/bypassing of the anti-cheat, so I’ve redacted a few things.</strong></p><p>To clear up any confusion, Black Ops Cold War does not have the kernel-mode component of Ricochet that Modern Warfare (2019) and later titles have. I’ll be referring to the anti-cheat as TAC (Treyarch Anti-Cheat) as the game I reversed is a Treyarch game. Also, whenever I provide function pseudocode, it will be the best I can do since the actual decompilation is super cluttered with a lot of junk/resolving code. The biggest difference between the newer games is the kernel-mode driver, while the majority of anti-cheat code is user-mode and very similar to TAC.</p><p>Let’s look at how the anti-cheat and the game is protected before we dig too deep.</p><ul><li><p>Arxan is an obfuscation/protection tool that’s used on many Call of Duty games, most of which are anything past Black Ops 3. Which includes many features, that make cheaters/reverse engineers’ life a lot harder.</p><h2>Runtime Executable Decryption</h2><ul><li>The game executable is packed and encrypted; Arxan inserts code during the startup process to unpack and decrypt the game executable.</li></ul><ul><li>Arxan is constantly monitoring the game executable for any patches.</li><li>If you want to learn more about these, momo5502 has a great blog post which can be found <a href=\"https://momo5502.com/posts/2022-11-17-reverse-engineering-integrity-checks-in-black-ops-3/\">here</a></li><li>Whenever Arxan detects a debugger or a checksum mismatch, it will terminate the process.</li></ul><ul><li>Arxan can take a function and all of its instructions and separate them with a jmp.</li><li>This is also useful to hide where a function is called from, it breaks IDA and requires an external tool to sift through the instructions.\n<div><pre tabindex=\"0\"><code data-lang=\"asm\"></code></pre></div></li><li>This is difficult to analyze statically, especially whenever it’s a giant function that’s been planted with hundreds of jumps.</li></ul><ul><li>It’s really difficult to follow the entry point on Arxan-protected games; first, you have the protected Arxan code that unpacks and executes the game’s real entry point, which jmp obfuscation can also be planted in here, making it extremely difficult to understand what’s going on.</li></ul></li></ul><p>Now we that understand how the game and anti-cheat are protected we can dig deeper.\nTAC is planted directly into the game executable, uses no kernel components, and will also terminate the process if debug artifacts are found.</p><h3>How does TAC detect monitoring?</h3><ul><li><ul><li>TAC is designed for Windows; this means it’s going to be using Windows-specific APIs for the anti-cheat.</li></ul><ul><li><p>The hook detection used here is pretty basic, and it’s currently only checking for 7 patterns. It looks like they have just taken previous cheats’ hook stubs and put them in.</p></li><li><p>NOTE: Each time I provide example code, every API called in that example code is what TAC is using, is being checked for hooks, and is being resolved by their runtime hash lookup. Also, most of TAC is heavily inlined.</p><div><pre tabindex=\"0\"><code data-lang=\"asm\"></code></pre></div></li></ul></li></ul><ul><li>Here’s how these checks are implemented. Those 0x0 spots in the assembly are 8 bytes because this is x64.\n<div><pre tabindex=\"0\"><code data-lang=\"c++\"></code></pre></div></li></ul><h2>Runtime API Export Lookup</h2><ul><li>TAC has an inlined API lookup function; it takes the module hash and the API name hash, iterates the current list of loaded modules, hashes the name, then goes through each exported function from that module and compares it to the compile-time hash of the API they want.</li></ul><p>This is what the decomp looks like.\n<img src=\"https://ssno.cc/runtime_lookup.PNG\" alt=\"image info\"></p><p>Here’s a recreation of their runtime lookup.</p><div><pre tabindex=\"0\"><code data-lang=\"c++\"></code></pre></div><h2>How can we figure out what these hashes are?</h2><p>The answer is super simple; I grabbed a list of all the loaded modules in my game process and copied over the game’s hashing function (note: dll names are hashed a little bit differently), which can be seen here.</p><div><pre tabindex=\"0\"><code data-lang=\"c++\"></code></pre></div><p>I took that function and calculated the hash of all the module names and exports from the module list that I grabbed, then created a function to look up these API names by using the FNV hash base and the inlined hash of the API name.</p><p>Here’s how I managed to cache and resolve all of the exports.</p><div><pre tabindex=\"0\"><code data-lang=\"c++\"></code></pre></div><ul><li>After all of this, it was time to do some manual work.\n<ul><li>I went in by hand and grabbed the base hashes and function hashes from the decompilation then put those into my program.</li><li>Now I was able to tell exactly which APIs the anti-cheat was calling.</li></ul></li></ul><p>Here’s how my tool ended up working.</p><div><pre tabindex=\"0\"><code data-lang=\"c++\"></code></pre></div><p>I do want to mention that these hashes aren’t going to be the same in different versions of the game.\nAlso, this isn’t the only way of beating this hashing technique; these function pointers are stored in global variables; you can simply inspect them and match the virtual address of the function to one of the exported functions from all of the DLLs loaded.</p><p>Ok, now we have established that TAC detects API hooking <em>(It only checks functions that it uses, not actually checking all important APIs for hooks, just the ones it’s using)</em>. These are only here to monitor API hooking attempts that would hurt or prevent the anti-cheat from doing its job.</p><p>What if there was a hooking method that bypassed their hooking detections?</p><p>For actual cheaters trying to hook into the game, Arxan has got the code patching covered; cheaters must use non-code patching hooking methods while Arxan is present.\nThere are a couple of these hooking methods, and I’ll list a few here:</p><ul><li>Exception hooking - Forcefully triggering an exception and handling it.\n<ul><li>Exceptions can be triggered in multiple ways.</li><li>Modify a global pointer to be a nullptr or invalid memory address.</li><li>Modify page access protections to trigger an access exception (Example: PAGE_NOACCESS or PAGE_GUARD).</li></ul></li><li>Debug registers - telling the CPU to break (throw a STATUS_SINGLE_STEP exception) on a specific instruction.\n<ul><li>These are very powerful; the CPU can break on any or all of these conditions for a given instruction address.\n</li><li>Debug registers are the easiest to use, the most popular, and the easiest to detect!</li></ul></li></ul><p>Since debug registers are so popular and powerful, and completely bypass Arxan’s .text patch monitoring, this makes them the perfect hooking technique for Call of Duty games.</p><h2>Here’s how TAC checks for debug registers.</h2><div><pre tabindex=\"0\"><code data-lang=\"c++\"></code></pre></div><ul><li>Since debug registers are in the DR0-DR3 registers, you can’t just write some custom assembly to directly read them because these registers are privileged and must be fetched by the Windows kernel or sent to the process by Windows whenever an exception occurs.</li></ul><div><pre tabindex=\"0\"><code data-lang=\"asm\"></code></pre></div><h2>Driver Signing Enforcement</h2><ul><li>Windows has a test mode, which is designed for driver development.</li><li>This will allow you to bypass the normal Windows restriction on kernel-mode drivers not having valid digital signatures.</li><li><em>This is a protection mechanism in place to prevent bad actors from running kernel mode drivers on your system without the proper authorization.</em></li><li>TAC will know if you have test mode enabled on Windows, via <strong><em>ntdll!NtQuerySystemInformation</em></strong>. This isn’t going to ban you directly, but this will have your account flagged.</li></ul><div><pre tabindex=\"0\"><code data-lang=\"c++\"></code></pre></div><p>Now we understand some of TAC’s anti-static analysis and debug register detection tactics. We’re going to move on to the more advanced detections implemented into TAC.</p><h2>How does TAC exit the process?</h2><ul><li>TAC uses two ways of exiting the process; both of them clear the registers, and these are written in inline shellcode.\n<ul><li><p>The first method sets RCX to -1 as it calls NtTerminateProcess.</p></li><li><p>TAC will not use this method if NtTerminateProcess is detected to be hooked.</p></li><li><p>If NtTerminateProcess is hooked, it’ll go to the second one, which jumps to 0x0.</p><div><pre tabindex=\"0\"><code data-lang=\"asm\"></code></pre></div><p>Here’s the second method; we can see the same register clearing, and we see a jmp. This jump goes to 0x0, which will crash the process.</p><div><pre tabindex=\"0\"><code data-lang=\"asm\"></code></pre></div><p>These are hard to recover from since all of the important registers are cleared.\nThe code for generating and running these shellcodes is provided here.</p><div><pre tabindex=\"0\"><code data-lang=\"c++\"></code></pre></div><div><pre tabindex=\"0\"><code data-lang=\"cpp\"></code></pre></div></li></ul></li></ul><ul><li>Oftentimes, internal cheaters will allocate a console using <a href=\"https://learn.microsoft.com/en-us/windows/console/allocconsole\">AllocConsole</a> to print their debug logs to, or even make their menu in it using print statements.\n<ul><li>The PEB (Process Environment Block) contains information regarding the allocation of a console.\n<ul><li>The PEB contains a ton of useful information regarding the process. If you want to read more about this <a href=\"https://learn.microsoft.com/en-us/windows/win32/api/winternl/ns-winternl-peb\">click here</a>; most of this structure is undocumented, but that’ll take you to the MSDN page.</li></ul></li><li>The game knows that there shouldn’t ever be a console window allocated; checking for one is super simple and will catch some people who use this method of logging. Here’s the implementation.\n<div><pre tabindex=\"0\"><code data-lang=\"c++\"></code></pre></div></li></ul></li></ul><ul><li><p>Cheaters need to draw on the screen if they want a working  or even a .</p><ul><li>How do they do this?\n<ul><li>There are a few ways of drawing on the screen; the most common method for internal cheats is to hook whichever graphics API the game is using and draw their information in there.</li><li>Modern Call of Duty games are made with .</li><li>The present function is what presents the rendered game image to the user. The idea is you add your custom data to the image before it’s presented to the user, update the image then present it to the user.</li></ul></li><li>How is this detected?\n<ul><li>First, we need to understand how these functions are hooked.\n<ul><li>The  functions are inside of the  DLL on your computer.</li><li>DirectX interfaces hold vtables which will point to the functions inside of dxgi, these vtable indexes will be the same across the versions of windows.</li><li>This can either be directly hooked, or pointer swapped.</li></ul></li><li>Detecting these hooks.\n<ul><li>Something that can be done is to scan the DXGI present function, but TAC doesn’t currently do this.</li><li>TAC checks the present pointer in the vtable.</li><li> introduced command queues; whenever the game is drawing something, it’s from the command queue, a list of draw commands. This is something cheaters will also need if they want to draw.\n<ul><li>How do cheaters get this command queue?\n<ul><li>Since this is an interface, the methods will have a  pointer passed as the first parameter; in this case, that pointer is the command queue.</li></ul></li></ul></li></ul></li></ul></li><li>Cool information:\n<ul><li>Many things such as OBS Studio/Streamlabs OBS/Discords game overlay/Steams game overlay actually all do this, while Steam and Discord draw here, things like OBS studio are just here to capture the rendered image (capture the frames) and save them into your recording. This only happens if you use game capture on recording software.</li><li>Cheaters can ignore the game, and simply hook into Discord/steam and draw things there if they want to.</li></ul></li></ul></li></ul><h2>What about External Cheats?</h2><ul><li><p>External cheats are most likely going to create an overlapped window that covers the width and height of the game window. There are a few ways to detect this; the detection methods heavily rely on Windows APIs and require more effort to implement.</p></li><li><p>TAC loops through all of the windows, checking their <a href=\"https://learn.microsoft.com/en-us/windows/win32/winmsg/extended-window-styles\">window style</a> for   using <a href=\"https://learn.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-getwindowlonga\">GetWindowLongA</a>; once it finds that, it then compares that window’s rect with the game rect using <a href=\"https://learn.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-getwindowrect\">GetWindowRect</a>.</p></li><li><p>After all of that, if the window is over the game’s rect and it is a layered window, the hwnd to that window will be cached, which will later be used for many string checks. This stores a bunch of information and uploads it to their servers.</p><p>Here we can see how that works.</p><div><pre tabindex=\"0\"><code data-lang=\"c++\"></code></pre></div><div><pre tabindex=\"0\"><code data-lang=\"c++\"></code></pre></div><ul><li><p>We can see 0x780 and 0x438, which represent 1920 by 1080, which was my screen size.\n\nOkay, so we know the windows are cached. Now what?</p></li><li><p>The cached list is handled in another function that checks the window text and its class names.</p></li><li><p>Cheat developers can hide their overlapping windows from recording software, and screenshot tools using <a href=\"https://learn.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-setwindowdisplayaffinity\">SetWindowDisplayAffinity</a> with .</p><ul><li>This is checked by TAC, and it’s saved into the buffer that will be uploaded to their servers later.\n<div><pre tabindex=\"0\"><code data-lang=\"c++\"></code></pre></div></li><li>There are a couple more things related to the window that are uploaded as well.\n<ul><li>The normal window style is also checked; you can find more <a href=\"https://learn.microsoft.com/en-us/windows/win32/winmsg/window-styles\">here</a>.</li><li>TAC checks that the window is visible first before any more processing happens on it.</li></ul></li></ul></li><li><p>TAC also stores the list of modules, including the exe name of the overlapping window.</p><ul><li>When you do anything in Windows to another process, you need to have permission; Windows has an API that will let you request permission from the system. <a href=\"https://learn.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-openprocess\">OpenProcess</a><div><pre tabindex=\"0\"><code data-lang=\"c++\"></code></pre></div></li></ul></li><li><p>The first parameter in OpenProcess is the access desired, since this is a bitmask our reversing software will just show us 0x410 by default, but that doesn’t do us any good!</p><ul><li>This can be figured out with some IDA magic.</li><li>Creating a <a href=\"https://docs.hex-rays.com/user-guide/disassembler/bitfields/bitfields-tutorial\">bitmask structure</a> in IDA Pro and setting that as the function declaration’s first parameter helps us out.\n<div><pre tabindex=\"0\"><code data-lang=\"c++\"></code></pre></div></li><li>Here’s the resulting code we get from IDA.</li></ul><div><pre tabindex=\"0\"><code data-lang=\"c++\"></code></pre></div><ul><li>As you can see, TAC wants to read the overlapping process’ virtual memory, and it wants to query information about the process.</li><li>This is the access level you would expect for enumerating process modules. <a href=\"https://learn.microsoft.com/en-us/windows/win32/psapi/enumerating-all-processes\">example</a>.</li></ul><ul><li>Then the strings are encrypted and stored into the encryption buffer.</li></ul></li><li><p>Here’s what the majority of the code looks like.</p></li></ul><div><pre tabindex=\"0\"><code data-lang=\"c++\"></code></pre></div></li></ul><ul><li>Example data. TAC will format in json with modules hashed.\n<div><pre tabindex=\"0\"><code data-lang=\"cpp\"></code></pre></div></li></ul><ul><li>Cheat Engine is one of the easiest programs to detect, and it’s really because of how virtual memory works in Windows.</li><li>Whenever a program wants to allocate virtual memory, they’re going to call the Windows API <a href=\"https://learn.microsoft.com/en-us/windows/win32/api/memoryapi/nf-memoryapi-virtualalloc\">VirtualAlloc</a>.\n<ul><li>This memory is allocated, but it’s not backed by any physical memory yet because it hasn’t been accessed, this is a feature in the Windows kernel.</li><li>This allows the game to allocate virtual memory with that function and never use it.</li><li>After Cheat Engine scans the process, it will hit this virtual memory, which will then make that memory valid, because now it has been accessed by Cheat Engine.\n<ul><li>Here’s how that detection would look, and this is for any memory scanner, not just Cheat Engine. This will also include the Process Hacker memory tab.</li></ul><div><pre tabindex=\"0\"><code data-lang=\"c++\"></code></pre></div></li></ul></li></ul><ul><li>Game hackers love signatures; whenever the game updates, no problem the cheat will automatically update.\n<ul><li><p>Treyarch had a pretty interesting idea.</p><ul><li>Their idea is to create a function that’ll never be called again; this function will call another function that protects the return address with PAGE_NOACCESS. Since this will never be reached again by the program, this isn’t an issue.</li><li>The way sig scanners work is they attempt to match a signature by reading bytes in the executable. It’s extremely slow to query each byte you are going to be reading, which is why this is such a good method. You can read more about VirtualProtect <a href=\"https://learn.microsoft.com/en-us/windows/win32/api/memoryapi/nf-memoryapi-virtualprotect\">here</a>.\n<ul><li>It’s not undefeatable, but it’s something that’s there and will probably give most a hard time.</li></ul></li></ul><div><pre tabindex=\"0\"><code data-lang=\"c++\"></code></pre></div><ul><li>Here’s a good example of code that’ll never be reached again. (The program will never reach the top of the main function again.)</li></ul><div><pre tabindex=\"0\"><code data-lang=\"c++\"></code></pre></div><ul><li>The scan pattern function will start at the base of the executable and continue to the end until it finds the pattern it wants, ultimately hitting the PAGE_NOACCESS memory, and crashing the process.</li></ul></li></ul></li></ul><ul><li><p>TAC has a simple anti-debug check; but remember, Arxan is still running, so they still have all of those anti-debugging tricks.</p><ul><li>How does TAC prevent debugging?\n<ul><li>TAC loops through all threads in the current process by using <a href=\"https://learn.microsoft.com/en-us/windows/win32/api/tlhelp32/nf-tlhelp32-createtoolhelp32snapshot\">CreateToolHelpSnapshot32</a> with SnapThread passed and checks the thread for a DebugObject, which is going to be present if a debugger is running.</li></ul><div><pre tabindex=\"0\"><code data-lang=\"c++\"></code></pre></div></li><li>A weird anti-debug trick.\n<ul><li>It throws an access violation by writing to invalid memory; if the code ever gets past the exception, a debugger got past it or handled the exception properly.</li></ul><div><pre tabindex=\"0\"><code data-lang=\"c++\"></code></pre></div></li></ul><ul><li>Standard API check\n<div><pre tabindex=\"0\"><code data-lang=\"c++\"></code></pre></div></li></ul></li></ul><h2>Monitoring Network Traffic</h2><ul><li>This is a super cool detection method used for some cheats, and don’t be alarmed by this; they do not store any of your active connections; they are only looking for a very specific check.\n<ul><li>A cheater can write shellcode into the game process that starts a network server inside of the game process on the local network, then the cheater can have their external application send and receive information to this local server, kind of like a local command and control center.\n<ul><li>Here’s how it’s implemented.</li></ul><div><pre tabindex=\"0\"><code data-lang=\"c++\"></code></pre></div></li></ul></li></ul><h2>Encrypted Custom Syscalls</h2><ul><li>Whenever you look at exported APIs in ntdll, you’ll notice most of them do a syscall.</li><li>A syscall is what moves over into the kernel, where the actual implementation of the function is.</li><li>This is what a syscall stub looks like.</li><li>IMO this is the coolest feature TAC has!\n<div><pre tabindex=\"0\"><code data-lang=\"asm\"></code></pre></div></li><li>Writing your own syscall stub has a purpose. Whenever a user-mode cheat hooks those ntdll functions that syscall, it’ll work, but their hooks can be bypassed very easily if the anti-cheat just calls the syscall instruction with eax set to the same syscall index as the normal function.</li><li>Syscalls are vulnerable to instrumentation callbacks; these are callbacks coded into Windows, and they will work on every single user-mode process.</li><li>These callbacks will catch every syscall instruction and every exception.\n<ul><li>Just an FYI, instrumentation callbacks are called AFTER the syscall; their return address will be right after the syscall instruction.</li><li>This would normally allow cheaters to easily see where every syscall is coming from since all of the functions using it are just exported in ntdll.</li><li>It fails because the cheater will see a syscall from a random ntdll function, rather than the anti-cheat code.</li></ul></li></ul><ul><li>If you want to see instrumentations in action, you can do so <a href=\"https://github.com/Deputation/instrumentation_callbacks\">here</a>.</li></ul><ul><li>At a quick glance, this is very confusing and hard to figure out statically.</li><li>They even make it confusing to see what memory is being written to.</li></ul><div><pre tabindex=\"0\"><code data-lang=\"c\"></code></pre></div><ul><li>It turned out to be pretty simple to figure this out and understand exactly how it works.</li><li>That memory being written to is actually a large chunk allocated in the .text section that they just virtual protect for write/execute rights.</li><li>Now we could spend all day in our XOR calculator and try to build the byte array of these XOR encrypted instructions ourselves.</li><li>Or we could just let the computer do it….</li></ul><p>This was pretty much just copy and paste from IDA Pro, all I did was allocate my own memory here.</p><div><pre tabindex=\"0\"><code data-lang=\"cpp\"></code></pre></div><p>Inspecting this memory address reveals the unencrypted shellcode and we can see the standard syscall stub here.\n</p><p>Starting with the “mov r10, rcx” instruction.</p><p>Following that jmp after the mov, 0x2C is the NtTerminateProcess syscall index for my Windows version, and we can see that being moved into eax.\n</p><p>Following the jump after mov eax, this is where the address of the syscall instruction comes in; it’s just a jump to it.\n</p><p>We can take a look at where this syscall instruction is located, just to verify that it’s a bit random.\n<img src=\"https://ssno.cc/spoof_stub5.png\" alt=\"image info\"></p><p>And just to double-check, if we run the code again, our syscall instruction location will change!\n<img src=\"https://ssno.cc/spoof_stub6.png\" alt=\"image info\"></p><ul><li><p>This is a lot, so let’s recap quickly.</p></li><li><p>Why would you use a custom syscall stub?</p><ul><li>This will completely bypass cheaters hooking ntdll functions.</li></ul></li><li><p>What’s going on with the NtReadFile stuff?</p><ul><li>TAC is actually searching for the syscall instruction; their encrypted syscall stub is designed to actually fake where syscalls are coming from, the CPU time is the RNG factor.</li><li>Example: Someone monitoring the process will see that a syscall happened from NtReadFile, so they’ll do some inspecting and try to cover up anything NtReadFile would expose of theirs, but the syscall wasn’t even NtReadFile. The actual syscall could have been anything; the cheater will never know unless they’re able to inspect the eax register after the syscall (which should be cleared out and replaced with the NTSTATUS code). This is really cool; an attacker won’t have any way of knowing what syscall instruction to monitor.</li></ul></li><li><p>A good way to monitor these would be preventing page execute protections, and looking at the exception, this is what the stub looks like in Ida Pro.\n<img src=\"https://ssno.cc/syscall_ida.png\" alt=\"image info\"></p></li></ul><p>Just for bonus points, I’ve recreated their syscalling method.</p><div><pre tabindex=\"0\"><code data-lang=\"cpp\"></code></pre></div><p>Let’s test this just to make sure.</p><ul><li>We can see this is working exactly how it should! Again, this is clever and even more effective; cheaters will have no clue which syscall instruction to watch out for.</li></ul><h2>Detecting Anti-Debugger-Hiding Attempts</h2><ul><li><p>It’s common for anti-debugging or anti-cheat threads to set  to true.</p><ul><li>Whenever a thread has  set, any exceptions thrown from that thread will skip past a debugger and crash the process or be handled in the process’s structured exception handling.</li><li>Which means this flag is pretty important, and you want to make sure someone isn’t spying on your activity.</li><li>TAC has a pretty interesting approach to detecting hooks for this.\n<ul><li>To set , the API  must be called.</li><li>Cheaters can hook this and just return TRUE whenever  is being requested. This will make the anti-cheat think it has been successfully hidden even though nothing happened.</li><li>This method detects poorly made hooks.</li></ul><div><pre tabindex=\"0\"><code data-lang=\"c\"></code></pre></div></li></ul><p>This is the result when running under x64dbg with ScyllaHide.\n</p><p>And this is the result without a debugger and without ScyllaHide.\n</p></li></ul><h2>Create Remote Thread Blocking</h2><ul><li><p>TAC installs an exception handler that just calls <a href=\"https://learn.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-terminatethread\">TerminateThread</a> on the <code>STATUS_PRIVILEGED_INSTRUCTION</code> exception code.</p></li><li><p>There’s a good reason for this; when cheaters manually map their DLL, they need a way to get the remote process to actually run the shellcode they wrote. One of the most common ways of doing this is <a href=\"https://learn.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-createremotethread\">CreateRemoteThread</a>, which just allows the cheater to have a newly created thread that immediately executes their shellcode.</p><ul><li>How is it detected?:\n<ul><li>TLS callbacks are callbacks that can be planted inside of a Windows PE file; these callbacks are called before the thread’s entry point whenever a thread is created.</li></ul></li></ul><p>Here’s how that works; keep in mind that we are running in the current thread context of the newly created thread.</p><div><pre tabindex=\"0\"><code data-lang=\"asm\"></code></pre></div><div><pre tabindex=\"0\"><code data-lang=\"c++\"></code></pre></div></li></ul><h2>Dumping Exception Handlers</h2><p>For those interested in how I dumped the exception handlers, I’ve provided the code.\nYou’ll need to update these offsets if you want to use this.</p><div><pre tabindex=\"0\"><code data-lang=\"c++\"></code></pre></div><p>I’m not sure what this is, but it looks like something that would flag virtual machines or custom versions of Windows.</p><div><pre tabindex=\"0\"><code data-lang=\"c++\"></code></pre></div><p>Since TAC is so reliant on the linked module list, they have a check that prevents someone from setting it to an empty list. Setting this to an empty list will probably break the process anyway.</p><div><pre tabindex=\"0\"><code data-lang=\"c++\"></code></pre></div><p>TAC is a pretty cool user-mode anti-cheat, with features such as runtime API lookups, detecting poorly made hooks by passing clever invalid parameters, external overlay detection, internal DirectX hook detection, checking APIs that it uses for hooks, checking for debuggers and debugging artifacts, AllocConsole detection, CreateRemoteThread detection, and the coolest of all, spoofed and encrypted syscall stubs. Arxan really helps out TAC; it has powerful obfuscation, anti-static analysis methods, and a couple of features that break IDA Pro, all while monitoring the executable for .text modifications. It even has its own anti-debug techniques built-in. Similar code from TAC is being used in modern Call of Duty games. Overall, this was a huge learning experience, and a great challenge, and pretty unreal to see all the things that caught me! I hope you found my research interesting. I’m still not 100% done reversing the anti-cheat, so you can expect to see new information posted here sometime in the future! :)</p>","contentLength":22518,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://news.ycombinator.com/item?id=42774221"},{"title":"I am (not) a failure: Lessons learned from six failed startup attempts","url":"http://blog.rongarret.info/2025/01/i-am-not-failure-lessons-learned-from.html","date":1737398445,"author":"lisper","guid":199,"unread":true,"content":"<blockquote>I've had many, many failures in my life.&nbsp; (Hm, maybe I should write a blog post about that.)</blockquote>This is that post.&nbsp; I'm writing it not as a lament, but rather because I've ended up in a good place in life despite my extraordinary track record of failing at just about everything I've ever tried.&nbsp; If my younger self had heard these stories he might \nhave had a less stressful life knowing that even a long string of \nfailures in specific endeavors doesn't necessarily translate to\nfailure in life.&nbsp; Maybe some version of my younger self is still out there and will get some similar value out of it.<p>Growing up, I had two major life ambitions: to become a tenured university professor, and to found a successful startup company.&nbsp; My role models were people like <a href=\"https://en.wikipedia.org/wiki/Rodney_Brooks\" target=\"_blank\">Rodney Brooks</a> (who was on my Ph.D. thesis committee) who made a big splash in the AI/Robotics world in the early 1990s with the <a href=\"https://en.wikipedia.org/wiki/Subsumption_architecture\" target=\"_blank\">Subsumption Architecture</a>, and was a co-founder of <a href=\"https://en.wikipedia.org/wiki/Lucid_Inc.\" target=\"_blank\">Lucid</a> and <a href=\"https://en.wikipedia.org/wiki/IRobot\" target=\"_blank\">iRobot</a>.<p>I didn't accomplish either of those goals.&nbsp; I never even got an interview for an academic job, let alone tenure.&nbsp; I made six (and a half) attempts to found a startup.&nbsp; All of them failed.</p></p><h3>Failure #0: Professor Ron</h3><p>In elementary school, my ambition was to be a doctor, specifically a brain surgeon.&nbsp; That dream died in high school biology class when we had to dissect fetal pigs and I discovered that I was a lot more squeamish than I had thought.&nbsp; So I traded my surgical scrubs for a computer keyboard and set my sights on AI instead.&nbsp; Fast-forward to 1991, when a freshly minted PH.D. started sending out curriculum vitae (that's academic-speak for \"resumes\") to CS departments.&nbsp; Unfortunately, my timing could not have been worse.&nbsp; It was the height of <a href=\"https://en.wikipedia.org/wiki/AI_winter#The_setbacks_of_the_late_1980s_and_early_1990s\" target=\"_blank\">AI Winter</a> and the <a href=\"https://en.wikipedia.org/wiki/Early_1990s_recession_in_the_United_States\" target=\"_blank\">first Bush recession</a>, and the few universities that were hiring were getting hundreds of applications for single openings.&nbsp; My publication record was not great.&nbsp; I hadn't published a single journal article.&nbsp; My <a href=\"https://dl.acm.org/doi/10.5555/1867135.1867260\" target=\"_blank\">main conference publication</a> (PDF is <a href=\"https://flownet.com/gat/papers/aaai92.pdf\" target=\"_blank\">here</a>) was well received, but (apparently) insufficiently academic for academia.&nbsp; I didn't even get an interview.<p>So I just stayed where I was, which was JPL.&nbsp; I've told </p><a href=\"https://blog.rongarret.info/2023/01/lisping-at-jpl-revisited.html\" target=\"_blank\">that story</a> elsewhere so I won't repeat it here.&nbsp; Suffice to say, my JPL career had ups and downs, but eventually entered a long and steady decline from which it never recovered.&nbsp; But the  that my career declined had nothing to do with JPL or any external circumstance, it happened because I gradually came to realize that scientific research was not what I had imagined it to be.&nbsp; In the real world, research is not a Platonic quest for objective truth. It is, first and foremost, a human endeavor, deeply intertwined with human ambitions and foibles, including my own.&nbsp; The reason my career lasted as long as it did was that I learned, at least to a certain extent, how to work the system.&nbsp; I was nominally successful, eventually becoming the most cited AI researcher in all of NASA according to a popular metric at the time (<a href=\"https://citeseerx.ist.psu.edu/\" target=\"_blank\">Citeseer</a>).&nbsp; But as time went by I became less and less proud of the work I was doing, and the entire field seemed mired in a stasis that I felt powerless to dislodge.&nbsp; So I quit.<p>Lesson learned: academic research is no panacea.&nbsp; (I think things are actually worse now than they were in my day.)</p></p><p>I spent the summer of 1990 as a visiting graduate student in Rodney Brooks's lab at MIT.&nbsp; While there I met a brilliant hardware engineer named Mike Ciholas, who went on to found <a href=\"https://www.ciholas.com/\" target=\"_blank\">a company</a> that today employs dozens of people and bears his name.&nbsp; He pitched an idea to me for a new design for a computer network that he called <a href=\"https://dl.acm.org/doi/10.5555/327728.327731\" target=\"_blank\">FlowNet</a> (full text is <a href=\"https://flownet.com/gat/fnlj.html\" target=\"_blank\">here</a>).&nbsp; We built working prototypes.&nbsp; If they had gone into production they would have had more than an order of magnitude price-performance advantage over the competition at the time.&nbsp; We had numerous meetings with VC's, but none of them ever gave us a term sheet, probably because they knew what we did not: <a href=\"https://en.wikipedia.org/wiki/Fast_Ethernet\" target=\"_blank\">Fast Ethernet</a> was coming, and although it would be expensive at first, it would quickly get commodified and beat out any potential competition no matter how technically superior it might be.&nbsp; We built our prototypes in 1993.&nbsp; Fast Ethernet came out in 1995.&nbsp; We folded up the tent in 1997.<p>Lesson learned: direct frontal assaults on infrastructure and standards are very unlikely to succeed.&nbsp; More worthy players than us have </p><a href=\"https://en.wikipedia.org/wiki/Betamax\" target=\"_blank\">learned this lesson the hard way</a> over the years.</p><p>In 2000 I went to work for <a href=\"https://www.google.com/\" target=\"_blank\">an obscure little Silicon Valley startup company</a>.&nbsp; I've told <a href=\"https://blog.rongarret.info/2009/12/xooglers-rises-from-ashes.html\" target=\"_blank\">that story</a> elsewhere so I won't tell it again, but I wanted to mention it for two reasons.&nbsp; First, it sets the stage for what was to come, and second, while it was unquestionably a success, it was not  success.&nbsp; In fact, on a personal level I count Google as a failure as well.&nbsp; My tenure there was marked by a long series of screwups, and I had a serious case of <a href=\"https://en.wikipedia.org/wiki/Impostor_syndrome\" target=\"_blank\">impostor syndrome</a>. &nbsp;&nbsp; I lasted a year, but after that I went back to JPL to bide my time until the IPO.</p><p>The <a href=\"https://en.wikipedia.org/wiki/History_of_Google#Financing_and_initial_public_offering\" target=\"_blank\">Google IPO</a> allowed me to quit JPL and pursue my entrepreneurial ambitions more seriously.&nbsp; With the benefit of hindsight I should have moved to Northern California and hung out at <a href=\"https://www.ycombinator.com/\" target=\"_blank\">Y Combinator</a>, but I had lived in Los Angeles for 17 years at that point, which was longer than any place else I had ever lived before by a wide margin.&nbsp; By my standards at the time, I had deep roots there.&nbsp; I have also always had a love for magic and movies, and Los Angeles was the epicenter of both of those industries.&nbsp; So I decided to try to do something in the entertainment space.<p>The result of that was a company called </p><a href=\"https://opencorporates.com/companies/us_ca/2674053\" target=\"_blank\">IndieBuyer</a>, which was going to be Netflix for independent films.&nbsp; The idea was that technology was making filmmaking more and more accessible, leading to a long tail of undervalued product that couldn't find an audience because of the bottleneck presented by a distribution system designed for more capital-intensive projects.&nbsp; The business model was that we would sell DVDs (which were still very much a thing back then) but with a money-back guarantee: if you bought a DVD that we recommended and you didn't like it, you could return it for a full refund.&nbsp; The returns would provide the data for a recommendation engine that would, we hoped, over time become a better and better predictor of who would like what kinds of movies.&nbsp; The long-term business model was to intelligently match niche products with niche audiences at scale.<p>It was a plausible idea, and it might have even worked if we had been better capitalized.&nbsp; But I was funding it entirely from my own pocket, and after a couple of years with very little growth I lost my nerve and decided to pull the plug.&nbsp; We did try to find some outside investors, but because we had already launched and weren't showing much traction, we didn't attract any interest.</p><p>Lesson learned: it's really hard to make money in the movie business.</p></p><p>This is the half-failure alluded to in the title.&nbsp; I count it as half a failure because, although I was actively involved, I was not a founder.&nbsp; Evryx (which eventually rebranded itself as <a href=\"https://www.youtube.com/watch?v=yvWV4W4r4io\" target=\"_blank\">SnapNow</a>) was founded by another engineer at JPL.&nbsp; The company was an early pioneer in reverse image search.&nbsp; It used an algorithm called <a href=\"https://en.wikipedia.org/wiki/Scale-invariant_feature_transform\" target=\"_blank\">SIFT</a> to match an image taken with a cell phone to a library of stored images and provide information about whatever was in the image.&nbsp; I was never entirely clear on what the business model was intended to be, but the technology seemed cool.&nbsp; I happened to mention it in passing to a friend of mine whom I had met at a political fundraiser.&nbsp; He looked into it and got sufficiently excited about it to become their CEO.&nbsp; The founder became CTO.<p>About a year later the company had a crisis: the founder/CTO was behaving erratically, and my friend, the CEO, decided he had to fire him.&nbsp; He tapped me to come aboard as acting CTO until a permanent replacement could be recruited.&nbsp; The company limped along for another year or so but ultimately folded in 2007, in no small measure because of the fallout from the financial crisis that began that year.&nbsp; The CEO had actually managed to secure another round of funding, but it was voted down at a shareholder meeting, with the (fired) CTO casting the deciding vote against.&nbsp; The company folded a few weeks later.&nbsp; The bankrupt entity was eventually acquired at a fire-sale price by a private investor, and I have no idea what happened to it after that.&nbsp; It was sitting on some potentially valuable IP, so maybe they were able to do something with it.</p><p>Lesson learned: even smart people can do incredibly stupid things.&nbsp; The CTO said he voted against the financing because he didn't like the terms and didn't want to be diluted.&nbsp; The result was that his intact share of the company ended up being worthless.</p><p>(I actually saw a similar thing play out at another company in which I was a passive investor.&nbsp; The technical co-founders basically torpedoed the company, but in their case they went on to start a new company with the exact same IP and business model.&nbsp; It was blatantly illegal, but to that point the company was funded entirely by small angel investors, and no one was willing to put up the resources to try to stop them.&nbsp; So they got away with it.)</p></p><p>In 2009 my wife and I took a cruise around the Pacific rim.&nbsp; At one point we ended up in Saigon and needed to get back to the cruise ship, but couldn’t find a taxi.&nbsp; I thought to myself: this place is chock-full of taxi drivers, all of whom have cell phones, and many of whom have smart phones.&nbsp; Someone should write an app that would let me broadcast the fact that I'm standing in this location looking for a ride.&nbsp; It was a brilliant idea.&nbsp; Unfortunately, Garrett Camp and Travis Kalanick had <a href=\"https://en.wikipedia.org/wiki/Uber\" target=\"_blank\">the exact same idea at the exact same time</a>.&nbsp; I founded a company called iCab, and they founded a company called Ubercab, which eventually changed its name to Uber.<p>iCab was stillborn.&nbsp; It was never even established as an actual company.&nbsp; I assembled a team, mainly people I knew from Evryx, and wrote a prototype app which actually worked.&nbsp; But we couldn't figure out a way to procure drivers.&nbsp; We were in LA and we tried pitching the idea to cab companies, but they were not interested.&nbsp; The idea of using black car limos never even occurred to me.&nbsp; With no supply chain, we folded up the tent before we had even pitched it.</p><p>Lesson learned: a brilliant idea is not enough.&nbsp; You have to execute.&nbsp; And sometimes that requires another brilliant idea.</p></p><h3>Failure #4: Virgin Charter (nee Smart Charter)</h3><p>In 2010 my wife and I decided to get an apartment in Santa Monica so we could spend more time by the beach.&nbsp; I started hanging out in the offices of a venture capital firm with an office on the <a href=\"https://www.santamonica.com/experience-santa-monica/neighborhoods/downtown-santa-monica-3rd-street-promenade/\" target=\"_blank\">Third Street Promenade</a>.&nbsp; One day a fellow named Scott Duffy walked into the office and asked if he could hire us to do due diligence on an acquisition he was considering.&nbsp; I don't remember the name of the company, but it collected business intelligence on the private aviation industry.<p>In the course of conducting this due diligence we learned that the private jet market is incredibly fragmented and inefficient, with dozens of operators most of whom had only a small handful of planes.&nbsp; At the time there were a few thousand private jets operating as charters, but there were only three operators with fleets of more than 100 planes.&nbsp; The largest of these was NetJets with (if memory serves) about 250, only about 10% of the total.</p><p>To match customers with aircraft, a secondary industry of brokers had cropped up.&nbsp; If you wanted to charter a jet you would call up a broker, give them your mission parameters, and then they would start making phone calls and sending emails and faxes (yes, fax was still a thing back then) to try to find a matching aircraft.&nbsp; The turnaround time to get a quote was measured in hours, and actually securing a reservation could take days.</p><p>But even worse than the time involved was the fact that when an aircraft took you somewhere, it eventually had to return to its home base.&nbsp; Most of the time this happened in one of two ways: you either paid to have the aircraft (and its crew) wait for you and take you back, or you had to pay for two round trips.&nbsp; About 40% of legs flown by private jets were flown empty.&nbsp; This led to a secondary market of brokers trying to sell these empty legs, which had already been paid for.&nbsp; If you were lucky and happened to find one that was flying a route that you wanted to travel, you could pick one up for a song.&nbsp; The empty flight was already paid for, so any revenue at all was pure profit.</p><p>The problem is that most of the customer base for private jets want to go where and when they want to go, not where and when a plane happens to be available, so it was rare to actually sell an empty leg.&nbsp; But if you've ever wanted to fly on a private jet and you are flexible with regards to your timing and route, you could (and still can) find some very good deals.</p><p>One man's inefficiency is always another man's business opportunity.&nbsp; I realized that the problem was the lack of a centralized clearing house for demand.&nbsp; If we could somehow collect all the data on who wanted to go where and when, we could route the fleet much more efficiently.&nbsp; We crunched the numbers and it turned out to be a billion-dollar business -- if we could somehow pull it off.&nbsp; The problem was that the customers and the suppliers all depended on the brokers.&nbsp; In order to succeed we wold need to wrest both away.&nbsp; How to do it?</p><p>I came up with the following diabolical plan: build a web site that would let people enter their trip details, and then give access to that data </p><i>to the brokers as a lead generation service</i> for a very modest fee.&nbsp; The fee was actually a red herring to disguise the fact that we were secretly plotting to put the brokers out of business.&nbsp; It would be an offer they couldn't refuse: more customers for a small amount of money.&nbsp; But once we reached a critical mass of users, we would start phase two: offer that lead data <i>directly to charter operators</i> so they could bypass the brokers.&nbsp; Again, it would be an offer they could not refuse.&nbsp; We would offer these leads to the operators for free, and it would be a much faster and more efficient way of getting bookings because the whole process would be automated.&nbsp; As a bonus, they could pocket what would have been the broker's commission.<p>Finally, once we had a critical mass of operators on board, we would start phase 3, a centralized scheduling service that would dispatch the entire fleet in order to minimize the number of empty legs being flown.&nbsp; Again, it would be an offer they couldn't refuse.&nbsp; Anyone who didn't subscribe would have to charge significantly more for the same product in order to pay for the additional empty legs, and market forces would eventually drive all the customers to us.</p><p>To this day I'm pretty sure that plan would have worked if we had actually executed it.&nbsp; It was a brilliant plan if I do say so myself.&nbsp; In fact, it was so brilliant that it convinced Richard Branson to acquire the company </p> for $10M.&nbsp; We started the company as Smart Charter, but we launched as Virgin Charter.<p>I vehemently opposed the acquisition, but I was overridden by my two co-founders.&nbsp; When I lost that fight, I resigned from the company, but I kept my shares on the off chance that my intuitions were wrong and Virgin would actually make it work.&nbsp; Unfortunately, my fears were well-founded.&nbsp; As soon as they took over, they changed the business model to be directly consumer-facing, because that is Virgin's strength.&nbsp; Instead of a stealthy three-phase plan, they went for a direct assault on an established industry with very little understanding of the actual dynamics of that industry.&nbsp; Charter jets are a very rarified market.&nbsp; There's a lot of dollars involved, but not a whole lot of people, and those people don't like to be treated like ordinary consumers.</p><p>At our peak we had dozens of sales people.&nbsp; They all sat around the office with almost nothing to do.&nbsp; This was made all the more ironic by the fact that the original business model required fewer than ten people and probably could have been run on a single server.&nbsp; Even at 100% market share, the volumes in private jets are just not that high.</p><p>Lesson learned: Be careful who you take on as a partner.&nbsp; Success in one industry does not necessarily translate into success in another.&nbsp; This is another lesson that </p><a href=\"https://applescoop.org/story/who-is-john-sculley-inside-apples-turbulent-decade\" target=\"_blank\">others have learned the hard way</a>.</p><h3>Failure #5: Founder's Forge</h3><p>After being stung so hard by the private jet fiasco, I decided to design a business that I could run entirely without partners.&nbsp;&nbsp; This was around the time that Bitcoin first appeared, though it would still be many, many years before it broke out of hacker circles and into public awareness.&nbsp; I had always been interested in cryptography, and there were parts of Bitcoin's technology that I found very appealing, particularly its use of public-key cryptography and <a href=\"https://en.wikipedia.org/wiki/Digital_signature\" target=\"_blank\">digital signatures</a>.&nbsp; I foresaw increasing problems with <a href=\"https://blog.rongarret.info/2013/02/a-simple-solution-to-credit-card-fraud.html\" target=\"_blank\">credit card fraud</a> because of the fact that the protocol was fundamentally broken: the credentials that you use to authorize a transaction are not bound to that transaction.&nbsp; They can be re-used.&nbsp; This is still the basis of most credit card fraud today, and it's the reason your card has a chip in it.&nbsp; That chip has a secret key in it, and it computes digital signatures.&nbsp; That makes it impossible to re-use the authorization for one transaction on a different transaction, and makes the credentials in general harder (but still not impossible) to steal.<p>The problem is that you can't use that chip for e-commerce.&nbsp; It's not because this is </p> impossible, it's just that the infrastructure to do it doesn't exist.&nbsp; There is no reason you could not have a card reader peripheral plugged into a USB port that would execute the same protocol that point-of-sale terminals use and provide the same protection.&nbsp; In fact, there is no reason why you even need any hardware at all.&nbsp; The entire protocol could be executed entirely in software on your computer or smart phone.&nbsp; It would cost next to nothing and it would eliminate most credit card fraud.&nbsp; So why hasn't it been done?<p>It is because the process is controlled by the banks, and the banks don't care.&nbsp; Why don't the banks care?&nbsp; Because they treat the cost of fraud as just another cost of doing business, and they pass it along to you, the consumer.&nbsp; And they do it in a diabolical, stealthy way that you don't notice.&nbsp; But that's another story.&nbsp; Back in the day, I was not yet aware of all this.&nbsp; I thought that fixing credit card fraud would be, if not welcomed, at least not actively opposed.&nbsp; I was wrong.</p></p><p>I knew that the banks controlled the credit card system, and I knew they comprised a massive, ossified industry that was going to be next to impossible to penetrate.&nbsp; So I came up with a plan that would hide the fact that I was trying to solve credit card fraud by presenting it as a completely different product addressing a completely different problem and market.<p>The idea was this: by this time I had a fair amount of experience starting and running companies, and one of the \"pain points\" was financial record-keeping.&nbsp; Making sure the books were up to date was a sufficiently serious chore that most companies employed an entire team of people to do it.&nbsp; (There's a reason that \"the finance department\" is a thing.)</p><p>The fundamental reason that record-keeping is a chore is that the records are decoupled from the transactions they record.&nbsp; This is for historical reasons.&nbsp; You can easily hand someone a dollar, or write them a check, or swipe your credit card without writing down that you did these things.&nbsp; In the vast majority of cases you have to </p> connect the record of a transaction with the actual transaction itself.<p>But in an age where most transactions are electronic, this doesn't have to be the case.&nbsp; There is no reason why you can't build an interface in which the authorization and the record-keeping are one and the same operation, and if you do that, they cannot fall out of sync.&nbsp; So the idea was to provide a service that coupled transactions and record-keeping to guarantee that they always remained in sync.&nbsp; And the interface to the authorization system would quietly use digital signatures as the authorization mechanism.&nbsp; The users of the system would mostly be unaware that there were digital signatures happening under the hood, just as the users of chipped credit cards are mostly unaware of this.</p><p>The company was called \"Founders Forge\" because the initial target market was going to be startup companies.&nbsp; The name was a play on \"</p><a href=\"https://sourceforge.net/\" target=\"_blank\">SourceForge</a>\", the then-popular open-source hosting site.&nbsp; But all of that was a red herring because the real plan was to replace credit cards with digital signatures for e-commerce.<p>Of course, to make all this work I needed a way to move money around, and for this I needed a bank.&nbsp; I always knew that was going to be the heavy-lift so I focused on that early, long before I had even a prototype product ready to launch.&nbsp; As things happened, I never even built a prototype because the banks turned out to be an impenetrable brick wall, but that impenetrability manifested itself in a very unexpected way.</p><p>I approached banks with the following pitch: I am building an accounting system for startup companies, and I want to link it with their actual financial transactions.&nbsp; So I need access to an </p><a href=\"https://en.wikipedia.org/wiki/API\" target=\"_blank\">API</a> to allow me to authorize transactions on my client's behalf.&nbsp; The clients will authorize me as their agent so it will all be on the up-and-up.&nbsp; The benefit for the bank is that I would funnel them a steady stream of new business in the form of the most promising Silicon Valley startup companies.<p>Somewhat to my surprise, this pitch was very well received.&nbsp; I got positive responses and follow-up meetings from half a dozen different banks, and I thought I was on my way.</p><p>But then events took a very unexpected turn.&nbsp; One by one, every bank that had initially responded positively changed their minds.&nbsp; Worse, not a single one of them would tell me why.&nbsp; They said, \"Sorry, turns out we can't do it\" and then stopped returning my calls.&nbsp; In one case I actually got as high as the bank's CTO, who seemed very excited about the idea, but then he too suddenly backed off.&nbsp; At that point I decided to quit, and went into a </p><a href=\"https://blog.rongarret.info/2010/09/what-would-you-do.html\" target=\"_blank\">deep existential crisis</a> for a while.&nbsp; I had been working on Founders Forge for about six years.<p>I never got a straight answer from any of the banks about why they changed their minds.</p><p>Lesson learned: never underestimate the capacity of the banking industry to stifle innovation.&nbsp; (Also, it really does appear to be run by a shadowy cabal of people you will likely never meet.)</p></p><h3>Failure #6: Spark Innovations</h3><p>I don't actually remember exactly how my last company got started.&nbsp; I did this one with a partner who handled the business side of things, but was also a really good designer and front-end developer, so we made a kick-ass team.&nbsp; The product was motivated by the observation that people used Microsoft Excel for purposes that it was never really intended to serve.&nbsp; In particular, people tended to use it as a replacement for a SQL database.&nbsp; The idea was to build a product with a spreadsheet-like UI, but with a SQL database on the back end.&nbsp; We had three launch customers lined up, all of whom seemed to be very excited about the idea.&nbsp; While we were building the MVP we had a previously scheduled meeting with a VC acquaintance.&nbsp; We told him what we were working on, not really intending it to be a pitch, but just FYI.&nbsp; In one of those legendary Silicon-Valley moments he got so excited about the idea that he asked us to let him invest just to get a foot in the door.&nbsp; We didn't really want to take any money until after we launched, but he insisted, so we capitulated.<p>To make a long story short, we launched, and all three of our launch customers suddenly lost interest and didn't tell us why.&nbsp; It was a similar situation that I had encountered previously with the banks.&nbsp; No feedback, just suddenly not interested and not returning our calls.&nbsp; At that point my partner had to quit because he needed a paycheck.&nbsp; In a final desperate hail-mary I tried to pivot the company to something I could do on my own, but that didn't work either (obviously).&nbsp; I'll spare you the details on that one.</p><p>And that's it.&nbsp; My tale of six and a half failed startups plus one failed academic career, all of which somehow added up to a good life at the end of the day.&nbsp; Of course, hitting the jackpot with Google didn't hurt, but I really don't think that was the whole story.&nbsp; I learned a lot.&nbsp; I grew a lot.&nbsp; And&nbsp; I think my current happiness stems mainly from the fact that I like the person I've become, someone who can fail again and again and again and again and still find a way, for the most part, to be happy.</p></p>","contentLength":24958,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://news.ycombinator.com/item?id=42771676"},{"title":"Master the Art of the Product Manager 'No'","url":"https://letsnotdothat.com/","date":1737396143,"author":"mikhaill","guid":198,"unread":true,"content":"<!DOCTYPE html>","contentLength":0,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://news.ycombinator.com/item?id=42771310"}],"tags":["dev","hn"]}