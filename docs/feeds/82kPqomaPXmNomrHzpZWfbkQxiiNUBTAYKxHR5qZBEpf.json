{"id":"82kPqomaPXmNomrHzpZWfbkQxiiNUBTAYKxHR5qZBEpf","title":"Hacker News: Show HN","displayTitle":"HN Show","url":"https://hnrss.org/show?points=60","feedLink":"https://news.ycombinator.com/shownew","isQuery":false,"isEmpty":false,"isHidden":false,"items":[{"title":"Show HN: Filter out engagement bait and politics on your X/Twitter feed","url":"https://unbaited.danielpetho.com/","date":1736156981,"author":"danielpetho","unread":true,"content":"\n<p>hi friends!<p>i'm pretty tired of engagement bait and all the political nonsense on my x/twitter feed.<p>i was curious if i could use an llm to filter out these type of content, so i prototyped a quick chrome extension.<p>it uses LLama 3.3 to analyze the tweet through <a href=\"https://groq.com/\" rel=\"nofollow\">https://groq.com/</a> (because they are super-super fast).<p>the extension is available in the chrome store, also there is a link to the repo.<p>- you can tweak the system prompt for the filtering \n- but you need your own API key from Groq (you can get one for free)</p>\n<hr>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42609151\">https://news.ycombinator.com/item?id=42609151</a></p>\n<p>Points: 65</p>\n<p># Comments: 126</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Show HN: Struggle with CSS Flexbox? This Playground Is for You","url":"https://yoavsbg.github.io/css-flexbox-playground/","date":1736067721,"author":"yoav_sbg","unread":true,"content":"\n<p>Experiment with different flex properties to understand how they affect layout. Adjust the controls below to see changes in real-time and copy the generated CSS code.</p>\n<hr>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42600586\">https://news.ycombinator.com/item?id=42600586</a></p>\n<p>Points: 301</p>\n<p># Comments: 111</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Show HN: Open Rewind – POC for audio and screen and video streaming to S3","url":"https://github.com/janwilmake/efficient-recorder","date":1736015139,"author":"wwoessi","unread":true,"content":"\n<p>Got into a rabbit hole today.<p>POC works using 'npx efficient-recorder'.<p>Is this useful to anyone?</p>\n<hr>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42596607\">https://news.ycombinator.com/item?id=42596607</a></p>\n<p>Points: 77</p>\n<p># Comments: 32</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Show HN: Pretty-print your chess games using Prettier","url":"https://github.com/gmasclet/prettier-plugin-pgn","date":1736001472,"author":"gmasclet","unread":true,"content":"\n<p>Hi,<p>As an enthusiast chess player, I like to manage my games and my opening repertoire as a set of PGN files stored in a Git repository (PGN is a text file format for recording chess games). So I wanted a way to pretty-print PGN files using a CLI and integrating in my editor.<p>Today, it looks like most people use GUI-based software. So I decided to create a Prettier plugin that formats PGN files. Prettier is a well-known pretty-printer in the Node.js ecosystem, used to ensure consistent source code formatting in software projects. One upside of implementing this PGN formatter as a Prettier plugin is that it benefits from its editor integration.<p>The plugin is currently near complete, even if the project is still at an early stage. It's usable, even if there might be some bugs.<p>Hope you find this useful. Comments and ideas are welcome. Have a nice weekend.</p>\n<hr>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42594896\">https://news.ycombinator.com/item?id=42594896</a></p>\n<p>Points: 101</p>\n<p># Comments: 9</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Show HN: I created a PoC for live descriptions of the surroundings for the blind","url":"https://github.com/o40/seesay","date":1735987309,"author":"o40","unread":true,"content":"\n<p>The difference in cost between products that are developed as accessibility tools compared to consumer products is huge. One example is camera glasses where the accessibility product costs ~$3000 (Envision Glasses), and the consumer product costs ~$300 (Ray-Ban Meta).<p>In this case the Ray-Ban Meta is getting accessibility features. The functionality is promising according to reviews, but requires the user to say \"Hey meta what am I looking at\" every time a scene is to be described. The battery life seem underwhelming as well.<p>It would be nice to have an cheap and open source alternative to the currently available products, where the user gets fed information rather than continuously requesting it. This is where I got interested to see if I could create a solution using an ESP32 WiFi camera, and learn some arduino development in the process.<p>I managed to create a solution where the camera connects to the phone \"personal hotspot\", and publishes an image every 7 seconds to an online server, which then uses the gpt-4o-mini model to describe the image and update a web page, that is read back to the user using voice synthesis. The latency for this is less than 2 seconds, and is generally faster.<p>I am happy with the result and learnt a lot, but I think I will pause this project for now. At least until some shiny new tech emerges (cheaper open source camera glasses).</p>\n<hr>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42593919\">https://news.ycombinator.com/item?id=42593919</a></p>\n<p>Points: 73</p>\n<p># Comments: 25</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Show HN: I aggregated over 200 Go-To-Market strategies","url":"https://fellowry.com/","date":1735953057,"author":"baetylus","unread":true,"content":"\n<p>Hey HN,<p>I aggregated a bunch of GTM advice, including their rankings.<p>Thought it could be useful for some founders here.<p>Let me know if you have any feedback. Thanks!</p>\n<hr>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42591291\">https://news.ycombinator.com/item?id=42591291</a></p>\n<p>Points: 82</p>\n<p># Comments: 25</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Show HN: AI that generates 3blue1brown-style explainer videos","url":"https://tma.live/","date":1735944287,"author":"zan2434","unread":true,"content":"\n<p>I've been building prototypes of new AI learning tools for months, but I recently learned that 3blue1brown open sourced his incredible math animation library, Manim, and that LLMs could generate code for it without any fine-tuning.<p>So I made a tool that automatically generates animated math/science explanations in the style of 3blue1brown using Manim from any text prompt.<p>Try it yourself at <a href=\"https://TMA.live\" rel=\"nofollow\">https://TMA.live</a> (no signup required)<p>or see the demo video here: <a href=\"https://x.com/i/status/1874948287759081608\" rel=\"nofollow\">https://x.com/i/status/1874948287759081608</a><p>The UX is pretty simple right now, you just write a text prompt and then start watching the video as it's generated. Once it's done generating you can download it.<p>I built this because I kept finding myself spending 30+ minutes in AI chats trying to understand very specific concepts that would have clicked instantly if there were a visual explanations on YouTube.<p>Technical Implementation:<p>- LLM + prompt to use Manim well, right now this uses Gemini with grounding to ensure some level of factuality, but it works equally well with Claude<p>- Manim for animation generation<p>- OpenAI TTS for the voiceovers<p>- Fly.io for hosting the web app<p>- Modal.com for fast serverless GPUs to render the videos<p>- HLS protocol for streaming the videos as they are rendered<p>Note: This is focused on STEM education and visualization, and it is particularly good for math, but get creative and try it with anything! I used it recently to teach my partner's parents a new board game in Mandarin (which I don't speak!)<p>I'll be around to answer questions. Happy learning!</p>\n<hr>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42590290\">https://news.ycombinator.com/item?id=42590290</a></p>\n<p>Points: 90</p>\n<p># Comments: 46</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Show HN: WebGPU + TypeScript Slime Mold","url":"https://github.com/SuboptimalEng/slime-sim-webgpu","date":1735835858,"author":"SuboptimalEng","unread":true,"content":"\n<p>Article URL: <a href=\"https://github.com/SuboptimalEng/slime-sim-webgpu\">https://github.com/SuboptimalEng/slime-sim-webgpu</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42575947\">https://news.ycombinator.com/item?id=42575947</a></p>\n<p>Points: 70</p>\n<p># Comments: 11</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Show HN: connet – A P2P reverse proxy with NAT traversal","url":"https://github.com/connet-dev/connet","date":1735835228,"author":"Ingon","unread":true,"content":"\n<p>Over the past couple of months, I've been working on connet. At this point, it is working pretty smoothly (in what I use it for), so I wanted to share it with more people and see what they think.<p>I know many other similar/reverse proxy solutions exist - like <a href=\"https://github.com/fatedier/frp\">https://github.com/fatedier/frp</a>, <a href=\"https://github.com/rapiz1/rathole\">https://github.com/rapiz1/rathole</a>, and a bunch more you can find at <a href=\"https://github.com/anderspitman/awesome-tunneling\">https://github.com/anderspitman/awesome-tunneling</a>. However, I wanted to try and put my own little peer-to-peer twist on it.<p>Thanks for checking it out, and sharing any feedback you might have!</p>\n<hr>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42575841\">https://news.ycombinator.com/item?id=42575841</a></p>\n<p>Points: 128</p>\n<p># Comments: 29</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Show HN: Discuo – Anonymous discussions with infinite branching and 24h lifespan","url":"https://discuo.com/","date":1735750380,"author":"drdruide","unread":true,"content":"\n<p>I built Discuo, a unique discussion platform that combines:\n- Infinite thread branching: conversations evolve naturally in multiple directions\n- 24h post lifespan: all content auto-deletes after 24 hours\n- No account needed: just start posting or commenting instantly\n- Complete anonymity: no tracking, no personal data collection\n- Minimalist design: distraction-free, focused on pure discussion<p>Originally created for developers to share progress and discuss code, it evolved into a platform covering various topics while maintaining its minimalist essence.</p>\n<hr>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42567212\">https://news.ycombinator.com/item?id=42567212</a></p>\n<p>Points: 79</p>\n<p># Comments: 69</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Show HN: API Parrot – Automatically Reverse Engineer HTTP APIs","url":"https://apiparrot.com/","date":1735737303,"author":"pvarghav","unread":true,"content":"\n<p>When automating business processes at work, I found it difficult and time-consuming to reverse engineer business systems' APIs. I often had to manually reverse engineer APIs using developer tools or settle for less optimal technologies such as Robotic Process Automation (RPA).<p>Often, the issue is that it can be hard to resolve all the cookies, access tokens, and other elements required to successfully execute the requests. Manually trying to resolve these dependencies using developer tools is especially challenging with multiple requests where data is stored in JavaScript objects or HTML elements.<p>To try to solve this issue, I built a tool called API Parrot that automatically identifies the data correlations between requests and builds a graphical representation of the flow to give users a better understanding. To streamline the process, I also included functionality to record requests, define your own inputs and outputs, and export the entire flow—or parts of it—as JavaScript code.<p>The application is Electron-based and currently compiled for Windows and Linux. Please try it out and give feedback!<p>Online Tutorial: A simple example of reverse engineering the USPS API is available at <a href=\"https://docs.apiparrot.com/docs/category/tutorial---reverse-engineering-the-usps-api\" rel=\"nofollow\">https://docs.apiparrot.com/docs/category/tutorial---reverse-...</a></p>\n<hr>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42565821\">https://news.ycombinator.com/item?id=42565821</a></p>\n<p>Points: 451</p>\n<p># Comments: 116</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Show HN: Watch 3 AIs compete in real-time stock trading","url":"https://trading.snagra.com/","date":1735662778,"author":"sunnynagra","unread":true,"content":"\n<p>A live dashboard where you can watch GPT-4, Claude 3, and Gemini analyze market data and make daily stock trades with real money. Each AI explains its reasoning, and you can compare their different approaches to the same data.<p>Link: <a href=\"https://trading.snagra.com?utm_source=hn\" rel=\"nofollow\">https://trading.snagra.com?utm_source=hn</a> (no signup required)<p>What you can try right now:\n- Watch live trades from GPT-4, Claude 3, and Gemini\n- Read each AI's full analysis and reasoning\n- Compare their different interpretations of the same market data\n- Track their real-time performance and win rates\n- View historical trades and performance metrics<p>Built this over the holidays to study how different AI models approach financial decisions. Each morning at 9:30 AM EST, the AIs analyze market data and make real trades with $5 stakes.<p>Technical Implementation:\n- Next.js frontend with real-time updates\n- Node.js/Lambda backend for AI processing\n- PostgreSQL for trade tracking\n- Alpaca API for automated trading\n- Consistent prompts for all models<p>Data Flow:\n1. Daily market analysis (9:30 AM EST)\n2. Each AI gets identical inputs:\n   - Financial headlines\n   - Market summaries\n   - Technical indicators\n   - Earnings reports\n3. AIs provide:\n   - Stock picks with reasoning\n   - Entry/exit conditions\n   - Risk assessment\n4. Automated trade execution<p>Note: This is an experiment in AI behavior, not investment advice. The goal is to study how different LLMs interpret financial data and make decisions with real consequences.<p>I'll be around to answer questions about the implementation.</p>\n<hr>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42559744\">https://news.ycombinator.com/item?id=42559744</a></p>\n<p>Points: 269</p>\n<p># Comments: 202</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Show HN: Execute SQL against Bluesky firehose","url":"https://github.com/turbolytics/sql-flow","date":1735650800,"author":"dm03514","unread":true,"content":"\n<p>Article URL: <a href=\"https://github.com/turbolytics/sql-flow\">https://github.com/turbolytics/sql-flow</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42558496\">https://news.ycombinator.com/item?id=42558496</a></p>\n<p>Points: 100</p>\n<p># Comments: 3</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Show HN: Org-Supertag","url":"https://github.com/yibie/org-supertag","date":1735645454,"author":"oliverchan2024","unread":true,"content":"\n<p>Enhance org-mode tag system, borrow idea from tana.</p>\n<hr>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42558143\">https://news.ycombinator.com/item?id=42558143</a></p>\n<p>Points: 92</p>\n<p># Comments: 64</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Show HN: A remake of my 2004 PDA video game","url":"https://nicollet.net/blog/darklaga/remake.html","date":1735642556,"author":"victorNicollet","unread":true,"content":"\n<p>My background project for the last two years has been re-implementing my 2004 C++ shoot'em up game in TypeScript + WebGL, and it's finally done (just in time for the 20th anniversary!)<p>Play the game online: <a href=\"https://nicollet.net/blog/darklaga/darklaga.html\" rel=\"nofollow\">https://nicollet.net/blog/darklaga/darklaga.html</a><p>Technical article about the remake: <a href=\"https://nicollet.net/blog/darklaga/remake.html\" rel=\"nofollow\">https://nicollet.net/blog/darklaga/remake.html</a><p>I have tested Firefox, Chrome and Edge on desktop and mobile (no access to a device capable of running Safari).<p>It's amazing how much difference 20 years makes: the hardware is so much more powerful, the web as a deployment platform is so much easier than side-loading onto a PDA through a serial cable or sharing .exe files through e-mail, and my experience as a professional developer makes almost everything so much easier... but at the same, it didn't feel that the language, editor or debugger (TypeScript on Visual Studio Code) were significantly better than good old Visual C++ 6.<p>Repository with the code of the remake: <a href=\"https://github.com/VictorNicollet/Darklaga\">https://github.com/VictorNicollet/Darklaga</a> (sadly, I cannot provide the video and audio assets themselves under any open license).</p>\n<hr>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42557920\">https://news.ycombinator.com/item?id=42557920</a></p>\n<p>Points: 106</p>\n<p># Comments: 23</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Show HN: I built open source file sharing solution using AWS S3","url":"https://s3-file-share-for-free-35n2u.kinsta.app/","date":1735562267,"author":"rohitghumare","unread":true,"content":"\n<p>I created a 100% Open source Company-wide Self-hosted File Sharing Solution for Teams<p>Recently, I wanted to share HD images and video files with my graphic designer. She’s exceptional at her craft but isn’t familiar with AWS S3<p>So, I got an idea and built this.<p>Github Repo: <a href=\"https://github.com/rohitg00/s3-file-share-for-free\">https://github.com/rohitg00/s3-file-share-for-free</a><p>Detailed Guide: <a href=\"https://ghumare64.medium.com/i-built-a-company-wide-self-hosted-file-sharing-solution-for-teams-186dbf688de5\" rel=\"nofollow\">https://ghumare64.medium.com/i-built-a-company-wide-self-hos...</a></p>\n<hr>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42548763\">https://news.ycombinator.com/item?id=42548763</a></p>\n<p>Points: 62</p>\n<p># Comments: 36</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Show HN: Onramp Can Compile Doom","url":"https://ludocode.com/blog/onramp-can-compile-doom","date":1735540805,"author":"ludocode","unread":true,"content":"\n<p>Article URL: <a href=\"https://ludocode.com/blog/onramp-can-compile-doom\">https://ludocode.com/blog/onramp-can-compile-doom</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42547086\">https://news.ycombinator.com/item?id=42547086</a></p>\n<p>Points: 78</p>\n<p># Comments: 24</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Show HN: Chorus, a Mac app that lets you chat with a bunch of AIs at once","url":"https://melty.sh/chorus","date":1735508842,"author":"Charlieholtz","unread":true,"content":"\n<p>There's so many cool models to try but they're all in different places. In Chorus you can chat with a bunch of models all at once, and add your own system prompts.<p>Like 4o with a CBT overview, or a succinct Claude. Excited to hear your thoughts!</p>\n<hr>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42543601\">https://news.ycombinator.com/item?id=42543601</a></p>\n<p>Points: 138</p>\n<p># Comments: 73</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""}]}