{"id":"2k6wXud2N91xpf4PwnSfo4j5WSuTNX5k","title":"Tech News - Last 2 days","displayTitle":"Tech News - Last 2 days","url":"","feedLink":"","isQuery":true,"isEmpty":false,"isHidden":false,"items":[{"title":"US Records Its First Human Bird Flu Death","url":"https://news.slashdot.org/story/25/01/07/0036226/us-records-its-first-human-bird-flu-death?utm_source=rss1.0mainlinkanon&utm_medium=feed","date":1736214000,"author":"BeauHD","unread":true,"content":"A 65-year-old patient in the United States with underlying medical conditions has died from bird flu. According to NBC News, \"health officials considered the case to be the \"country's first severe human H5N1 infection.\" From the report: The Louisiana Department of Health said the patient had been exposed to a combination of a backyard flock and wild birds. \"The Department expresses its deepest condolences to the patient's family and friends as they mourn the loss of their loved one,\" it said in a statement. \"Due to patient confidentiality and respect for the family, this will be the final update about the patient.\" All but one of the [67] human bird flu infections confirmed so far in the U.S. were diagnosed in the last 10 months, according to the Centers for Disease Control and Prevention. Most cases have been relatively mild, with symptoms including pinkeye, coughs or sneezes. The majority of the patients became sick after exposure to infected cattle or poultry. The Louisiana patient was the first case linked to exposure to a backyard flock. [...]\n \nThe CDC maintains that the immediate risk to public health is low. Public health officials have not found any evidence that the virus has spread person-to-person, which would mark a dire step in bird flu's evolution. \"While tragic, a death from H5N1 bird flu in the United States is not unexpected because of the known potential for infection with these viruses to cause severe illness and death,\" the agency said in a statement on Monday. \"There are no concerning virologic changes actively spreading in wild birds, poultry, or cows that would raise the risk to human health,\" the statement added. However, samples of the virus collected from the Louisiana patient showed signs of mutations that could make it more transmissible to humans, according to the agency.<p><div class=\"share_submission\" style=\"position:relative;\">\n<a class=\"slashpop\" href=\"http://twitter.com/home?status=US+Records+Its+First+Human+Bird+Flu+Death%3A+https%3A%2F%2Fnews.slashdot.org%2Fstory%2F25%2F01%2F07%2F0036226%2F%3Futm_source%3Dtwitter%26utm_medium%3Dtwitter\"><img src=\"https://a.fsdn.com/sd/twitter_icon_large.png\"></a>\n<a class=\"slashpop\" href=\"http://www.facebook.com/sharer.php?u=https%3A%2F%2Fnews.slashdot.org%2Fstory%2F25%2F01%2F07%2F0036226%2Fus-records-its-first-human-bird-flu-death%3Futm_source%3Dslashdot%26utm_medium%3Dfacebook\"><img src=\"https://a.fsdn.com/sd/facebook_icon_large.png\"></a>\n\n\n\n</div></p><p><a href=\"https://news.slashdot.org/story/25/01/07/0036226/us-records-its-first-human-bird-flu-death?utm_source=rss1.0moreanon&amp;utm_medium=feed\">Read more of this story</a> at Slashdot.</p><iframe src=\"https://slashdot.org/slashdot-it.pl?op=discuss&amp;id=23571079&amp;smallembed=1\" style=\"height: 300px; width: 100%; border: none;\"></iframe>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Sony-Honda’s Afeela EV will start at $89,900","url":"https://techcrunch.com/2025/01/06/sony-hondas-afeela-ev-will-start-at-89900/","date":1736213967,"author":"Kirsten Korosec","unread":true,"content":"<p>Sony has been trickling out details of the Afeela brand it launched with Honda, ever since it unveiled the EV in 2023. But it&#8217;s held back one big detail &#8212; until today. Sony CEO Kenichiro Yoshida announced Monday at CES 2025 that the four-door Afeela EV would have a starting price of $89,900. The Sony-Honda [&#8230;]</p>\n<p>© 2024 TechCrunch. All rights reserved. For personal use only.</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Google Is Forming a New Team To Build AI That Can Simulate the Physical World","url":"https://tech.slashdot.org/story/25/01/07/0031204/google-is-forming-a-new-team-to-build-ai-that-can-simulate-the-physical-world?utm_source=rss1.0mainlinkanon&utm_medium=feed","date":1736211720,"author":"BeauHD","unread":true,"content":"Google DeepMind is forming a new team to develop AI models capable of simulating the physical world. It's being led by former OpenAI Sora co-lead Tim Brooks and builds on Google's Gemini, Veo, and Genie projects. \"DeepMind has ambitious plans to make massive generative models that simulate the world,\" Brooks wrote on X. \"I'm hiring for a new team with this mission.\" TechCrunch reports: According to job listings Brooks linked to in his post, the new modeling team will collaborate with and build on work from Google's Gemini, Veo, and Genie teams to tackle \"critical new problems\" and scale models \"to the highest levels of compute.\" Gemini is Google's flagship series of AI models for tasks like analyzing images and generating text, while Veo is Google's own video generation model. As for Genie, it's Google's take on a world model -- AI that can simulate games and 3D environments in real time. Google's latest Genie model, previewed in December, can generate a massive variety of playable 3D worlds.\n \n\"We believe scaling [AI training] on video and multimodal data is on the critical path to artificial general intelligence,\" reads one of the job descriptions. Artificial general intelligence, or AGI, generally refers to AI that can accomplish any task a human can. \"World models will power numerous domains, such as visual reasoning and simulation, planning for embodied agents, and real-time interactive entertainment.\" Per the description, Brooks' new team will look to develop \"real-time interactive generation\" tools on top of the models they build, and study how to integrate their models with existing multimodal models such as Gemini.<p><div class=\"share_submission\" style=\"position:relative;\">\n<a class=\"slashpop\" href=\"http://twitter.com/home?status=Google+Is+Forming+a+New+Team+To+Build+AI+That+Can+Simulate+the+Physical+World%3A+https%3A%2F%2Ftech.slashdot.org%2Fstory%2F25%2F01%2F07%2F0031204%2F%3Futm_source%3Dtwitter%26utm_medium%3Dtwitter\"><img src=\"https://a.fsdn.com/sd/twitter_icon_large.png\"></a>\n<a class=\"slashpop\" href=\"http://www.facebook.com/sharer.php?u=https%3A%2F%2Ftech.slashdot.org%2Fstory%2F25%2F01%2F07%2F0031204%2Fgoogle-is-forming-a-new-team-to-build-ai-that-can-simulate-the-physical-world%3Futm_source%3Dslashdot%26utm_medium%3Dfacebook\"><img src=\"https://a.fsdn.com/sd/facebook_icon_large.png\"></a>\n\n\n\n</div></p><p><a href=\"https://tech.slashdot.org/story/25/01/07/0031204/google-is-forming-a-new-team-to-build-ai-that-can-simulate-the-physical-world?utm_source=rss1.0moreanon&amp;utm_medium=feed\">Read more of this story</a> at Slashdot.</p><iframe src=\"https://slashdot.org/slashdot-it.pl?op=discuss&amp;id=23571057&amp;smallembed=1\" style=\"height: 300px; width: 100%; border: none;\"></iframe>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Sony’s CES 2025 press conference: How to watch","url":"https://techcrunch.com/2025/01/06/sonys-ces-2025-press-conference-how-to-watch/","date":1736211221,"author":"Brian Heater","unread":true,"content":"<p>Sony knows how to put on a show at CES 2025. The company’s pressers are high-octane, star-studded affairs, as these things go. In addition to standard Sony fare like TVs and audio systems, there’s always a curve ball or two, be it a car, a drone, or a &#8220;Gran Turismo&#8221; movie. That’s one of the [&#8230;]</p>\n<p>© 2024 TechCrunch. All rights reserved. For personal use only.</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Nvidia’s CES 2025 keynote: How to watch","url":"https://techcrunch.com/2025/01/06/nvidias-ces-2025-keynote-how-to-watch/","date":1736210564,"author":"Brian Heater","unread":true,"content":"<p>Nvidia will no doubt have the biggest CES 2025. After all, the company has pretty much the biggest everything nowadays. The chip giant is sporting a $3.4+ trillion market cap, due largely to its foundational position in the ongoing AI boom. Companies like OpenAI and Meta have purchased Nvidia processors by the boatload, and that’s [&#8230;]</p>\n<p>© 2024 TechCrunch. All rights reserved. For personal use only.</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"AMD Reveals Next-Gen Handheld Gaming PC Chips","url":"https://hardware.slashdot.org/story/25/01/07/0022229/amd-reveals-next-gen-handheld-gaming-pc-chips?utm_source=rss1.0mainlinkanon&utm_medium=feed","date":1736209440,"author":"BeauHD","unread":true,"content":"At CES 2025, AMD unveiled the Z2, Z2 Go, and Z2 Extreme chipsets -- all powered by Zen 5 CPU cores and designed for handheld gaming PCs. IGN reports: The AMD Zen 2 Extreme, along with lower-specced cousins the Z2 and Z2 Go, are powered by Zen 5 CPU cores. While the Zen 2 Extreme is using a RDNA 3.5-based GPU, the Z2 and Z2 Go are still using RDNA 3 and RDNA 2, respectively. This creates an entire family of APUs (Advanced Processing Units) for handheld gaming PCs that should hopefully cause the price of handhelds to go down a bit.\n \nWith the Z2 Extreme, AMD is hoping to dramatically improve battery life, while also delivering console-like gaming performance to devices like the Lenovo Legion Go. By and large, the biggest limiting factor of these handhelds, especially at the high end, is how quickly their batteries drain when playing demanding games away from a wall outlet. The company also introduced the \"Fire Range\" HX3D processors for gaming laptops, leveraging 3D V-cache technology for enhanced gaming performance and efficiency. \"All of these mobile chipsets, from 'Fire Range' HX3D to the AMD Z2 Extreme, will end up in gaming laptops and handhelds over the next few months,\" adds IGN.\n \nAMD published a press release with additional details and specifications.<p><div class=\"share_submission\" style=\"position:relative;\">\n<a class=\"slashpop\" href=\"http://twitter.com/home?status=AMD+Reveals+Next-Gen+Handheld+Gaming+PC+Chips%3A+https%3A%2F%2Fhardware.slashdot.org%2Fstory%2F25%2F01%2F07%2F0022229%2F%3Futm_source%3Dtwitter%26utm_medium%3Dtwitter\"><img src=\"https://a.fsdn.com/sd/twitter_icon_large.png\"></a>\n<a class=\"slashpop\" href=\"http://www.facebook.com/sharer.php?u=https%3A%2F%2Fhardware.slashdot.org%2Fstory%2F25%2F01%2F07%2F0022229%2Famd-reveals-next-gen-handheld-gaming-pc-chips%3Futm_source%3Dslashdot%26utm_medium%3Dfacebook\"><img src=\"https://a.fsdn.com/sd/facebook_icon_large.png\"></a>\n\n\n\n</div></p><p><a href=\"https://hardware.slashdot.org/story/25/01/07/0022229/amd-reveals-next-gen-handheld-gaming-pc-chips?utm_source=rss1.0moreanon&amp;utm_medium=feed\">Read more of this story</a> at Slashdot.</p><iframe src=\"https://slashdot.org/slashdot-it.pl?op=discuss&amp;id=23571055&amp;smallembed=1\" style=\"height: 300px; width: 100%; border: none;\"></iframe>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Anker shows off its solar beach umbrella at CES 2025","url":"https://techcrunch.com/2025/01/06/anker-shows-off-its-solar-beach-umbrella-at-ces-2025/","date":1736208000,"author":"Lauren Forristal","unread":true,"content":"<p>At CES 2025, Anker unveiled its first solar umbrella, designed to charge electronic devices — like coolers or phones — while outdoors. The new umbrella is part of Anker&#8217;s SOLIX lineup, which includes energy-efficient products like portable power stations and solar generators intended for powering home appliances during blackouts and emergencies. Though many solar-powered beach [&#8230;]</p>\n<p>© 2024 TechCrunch. All rights reserved. For personal use only.</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"US Adds Tencent, CATL To List of Chinese Firms Aiding Beijing's Military","url":"https://yro.slashdot.org/story/25/01/06/2216244/us-adds-tencent-catl-to-list-of-chinese-firms-aiding-beijings-military?utm_source=rss1.0mainlinkanon&utm_medium=feed","date":1736206800,"author":"BeauHD","unread":true,"content":"An anonymous reader quotes a report from Reuters: The U.S. Defense Department said on Monday it has added Chinese tech giants including gaming and social media leader Tencent Holdings and battery maker CATL to a list of firms it says work with China's military. The list also included chip maker Changxin Memory Technologies, Quectel Wireless and drone maker Autel Robotics, according to a document published on Monday. The annually updated list (PDF) of Chinese military companies, formally mandated under U.S. law as the \"Section 1260H list,\" designated 134 companies, according to a notice posted to the Federal Register.\n \nU.S.-traded shares of Tencent, which is also the parent of Chinese instant messaging app WeChat, fell 8% in over-the-counter trading. Tencent said in a statement that its inclusion on the list was \"clearly a mistake.\" It added: \"We are not a military company or supplier. Unlike sanctions or export controls, this listing has no impact on our business.\" CATL called the designation a mistake, saying it \"is not engaged in any military related activities.\" A Quectel spokesperson said the company \"does not work with the military in any country and will ask the Pentagon to reconsider its designation, which clearly has been made in error.\"\n \nWhile the designation does not involve immediate bans, it can be a blow to the reputations of affected companies and represents a stark warning to U.S. entities and firms about the risks of conducting business with them. It could also add pressure on the Treasury Department to sanction the companies.\nTwo previously listed companies, drone maker DJI and Lidar-maker Hesai Technologies, both sued the Pentagon last year over their previous designations, but remain on the updated list. The Pentagon also removed six companies it said no longer met the requirements for the designation, including AI firm Beijing Megvii Technology, China Railway Construction Corporation Limited, China State Construction Group Co and China Telecommunications Corporation.<p><div class=\"share_submission\" style=\"position:relative;\">\n<a class=\"slashpop\" href=\"http://twitter.com/home?status=US+Adds+Tencent%2C+CATL+To+List+of+Chinese+Firms+Aiding+Beijing's+Military%3A+https%3A%2F%2Fyro.slashdot.org%2Fstory%2F25%2F01%2F06%2F2216244%2F%3Futm_source%3Dtwitter%26utm_medium%3Dtwitter\"><img src=\"https://a.fsdn.com/sd/twitter_icon_large.png\"></a>\n<a class=\"slashpop\" href=\"http://www.facebook.com/sharer.php?u=https%3A%2F%2Fyro.slashdot.org%2Fstory%2F25%2F01%2F06%2F2216244%2Fus-adds-tencent-catl-to-list-of-chinese-firms-aiding-beijings-military%3Futm_source%3Dslashdot%26utm_medium%3Dfacebook\"><img src=\"https://a.fsdn.com/sd/facebook_icon_large.png\"></a>\n\n\n\n</div></p><p><a href=\"https://yro.slashdot.org/story/25/01/06/2216244/us-adds-tencent-catl-to-list-of-chinese-firms-aiding-beijings-military?utm_source=rss1.0moreanon&amp;utm_medium=feed\">Read more of this story</a> at Slashdot.</p><iframe src=\"https://slashdot.org/slashdot-it.pl?op=discuss&amp;id=23570933&amp;smallembed=1\" style=\"height: 300px; width: 100%; border: none;\"></iframe>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"CES 2025 Press Day: Everything Nvidia, Sony, Toyota, Samsung announced, and more","url":"https://techcrunch.com/2025/01/06/ces-2025-press-day-everything-nvidia-sony-toyota-samsung-announced-and-more/","date":1736205552,"author":"Cody Corrall","unread":true,"content":"<p>CES 2025, the annual consumer tech conference held in Las Vegas, is here. TechCrunch reporters are on the ground giving you the latest announcements and reveals at the conference. Today is Press Day, which features keynotes from the biggest players, including Samsung, Nvidia, Toyota, Sony, and more. Below, you’ll find a list of the biggest [&#8230;]</p>\n<p>© 2024 TechCrunch. All rights reserved. For personal use only.</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Toyota's Futuristic Woven City In Japan Is Ready For Its First Residents","url":"https://slashdot.org/story/25/01/06/227248/toyotas-futuristic-woven-city-in-japan-is-ready-for-its-first-residents?utm_source=rss1.0mainlinkanon&utm_medium=feed","date":1736204400,"author":"BeauHD","unread":true,"content":"Toyota's Woven City, a $10 billion \"living laboratory\" on the site of a former car factory, is set to welcome its first 100 residents in fall 2025. The first residents will be Toyota employees and affiliates, but the city aims to expand to include \"external inventors and their families.\" The Verge reports: Toyota said it completed \"phase 1\" of the construction, with the official launch planned for 2025. \"Woven City is more than just a place to live, work, and play,\" Toyota Chairman Akio Toyoda said during today's press conference at CES. \"Woven City is a place where people can invent and develop all kinds of new products and ideas. It's a living laboratory where the residents are willing participants, giving inventors the opportunity to freely test their ideas in a secure, real-life setting.\" [...] In fall 2025, Toyota said it will welcome the first 100 residents to Woven City, all of whom will be employees of Toyota or its subsidiary, Woven by Toyota. The community will gradually expand to include \"external inventors and their families\" who will be invited to relocate to the new city. In total, the first phase of the city will eventually house 360 residents, Toyota says.\n \nToyota dubs these first residents \"Weavers,\" adding that they are people who \"share a passion for the 'expansion of mobility' and a commitment to building a more flourishing society. Through their participation in co-creation activities, Weavers will contribute to realizing the full potential of Woven City.\" That said, the first \"inventors\" confirmed for Woven City are mostly in the food services business, including a vending machine company and a startup that wants to explore \"the potential value of coffee through futuristic cafe experiences.\" Toyoda mentioned several other ideas during his press conference, including high-powered motorized wheelchairs for people with disabilities who want to experience the thrill of racing. He also pitched the idea of a personal drone that follows joggers for added security, and \"pet robots\" for elderly people.\n \nThe Woven City site, which is located at the base of Mount Fuji, includes buildings that are designed by famed Danish architect Bjarke Ingels. The goal, through phase 2 and subsequent phases, is to build enough housing and facilities for up to 2,000 people to live year-around, with utilities powered by the company's hydrogen fuel cell technology. The site is private for now, though Toyota says it plans on inviting the general public to see it in 2026. The name \"Woven City\" is a reference to weaving together three different types of streets or pathways, each for a specific type of user. One street would be for faster vehicles only. The second would be a mix of lower-speed personal mobility vehicles, like bikes and scooters, as well as pedestrians. And the third would be a park-like promenade for pedestrians only. Japan first announced the \"prototype city of the future\" at CES 2020.<p><div class=\"share_submission\" style=\"position:relative;\">\n<a class=\"slashpop\" href=\"http://twitter.com/home?status=Toyota's+Futuristic+Woven+City+In+Japan+Is+Ready+For+Its+First+Residents%3A+https%3A%2F%2Fslashdot.org%2Fstory%2F25%2F01%2F06%2F227248%2F%3Futm_source%3Dtwitter%26utm_medium%3Dtwitter\"><img src=\"https://a.fsdn.com/sd/twitter_icon_large.png\"></a>\n<a class=\"slashpop\" href=\"http://www.facebook.com/sharer.php?u=https%3A%2F%2Fslashdot.org%2Fstory%2F25%2F01%2F06%2F227248%2Ftoyotas-futuristic-woven-city-in-japan-is-ready-for-its-first-residents%3Futm_source%3Dslashdot%26utm_medium%3Dfacebook\"><img src=\"https://a.fsdn.com/sd/facebook_icon_large.png\"></a>\n\n\n\n</div></p><p><a href=\"https://slashdot.org/story/25/01/06/227248/toyotas-futuristic-woven-city-in-japan-is-ready-for-its-first-residents?utm_source=rss1.0moreanon&amp;utm_medium=feed\">Read more of this story</a> at Slashdot.</p><iframe src=\"https://slashdot.org/slashdot-it.pl?op=discuss&amp;id=23570909&amp;smallembed=1\" style=\"height: 300px; width: 100%; border: none;\"></iframe>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Samsung will unveil the Galaxy S25 on January 22","url":"https://techcrunch.com/2025/01/06/samsung-will-unveil-the-galaxy-s25-on-january-22/","date":1736204363,"author":"Brian Heater","unread":true,"content":"<p>In what was an otherwise uneventful CES 2025 press conference, Samsung on Monday announced January 22 as the date for its next Unpacked event. The timing lines up with earlier reporting. The event, which is being livestreamed through Samsung’s site, will almost certainly serve as a launching pad for the company’s latest flagship phone, the [&#8230;]</p>\n<p>© 2024 TechCrunch. All rights reserved. For personal use only.</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Toyota is ‘exploring rockets’ and has made its first investment into Interstellar Technologies","url":"https://techcrunch.com/2025/01/06/toyota-is-exploring-rockets-made-first-investment-interstellar-technologies/","date":1736203468,"author":"Sean O'Kane, Kirsten Korosec","unread":true,"content":"<p>Japanese automaker Toyota is &#8220;exploring rockets,&#8221; chairman Akio Toyoda announced on stage at CES 2025 on Monday, while hinting at the idea of moving people through space. The rocketry mention on the CES 2025 stage came while Toyoda was in the middle of explaining how he views his company&#8217;s myriad technologies as &#8220;invention by kakezan,&#8221; [&#8230;]</p>\n<p>© 2024 TechCrunch. All rights reserved. For personal use only.</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Samsung says its home robot, Ballie, will roll out the first half of 2025","url":"https://techcrunch.com/2025/01/06/samsung-says-its-home-robot-ballie-will-roll-out-this-year/","date":1736202660,"author":"Brian Heater","unread":true,"content":"<p>Tech companies love rolling a robot out onstage. These systems serve as shorthand for consumer electronics brands branching out into a more bleeding-edge category. On occasion we get an Amazon Astro or Sony Aibo that actually hit the market in some form. More often than not, however, the robots only exist in the land of [&#8230;]</p>\n<p>© 2024 TechCrunch. All rights reserved. For personal use only.</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"The US just added Tencent — which backs US startups — to its list of ‘Chinese military’ companies","url":"https://techcrunch.com/2025/01/06/the-us-just-added-tencent-to-its-list-of-chinese-military-companies/","date":1736202639,"author":"Charles Rollet","unread":true,"content":"<p>While the Chinese internet giant Tencent is best known for its super app WeChat, it’s also a major investor in U.S. tech companies and startups. Some of its most notable and still active investments include Reddit, Snap, and Fortnite creator Epic Games. Things might get a little awkward, though, because Tencent was designated a “Chinese [&#8230;]</p>\n<p>© 2024 TechCrunch. All rights reserved. For personal use only.</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Ahead of SCOTUS Hearing, Study Finds TikTok Is Likely Vehicle For Chinese Propaganda","url":"https://tech.slashdot.org/story/25/01/06/2150211/ahead-of-scotus-hearing-study-finds-tiktok-is-likely-vehicle-for-chinese-propaganda?utm_source=rss1.0mainlinkanon&utm_medium=feed","date":1736202000,"author":"BeauHD","unread":true,"content":"A forthcoming peer-reviewed study (PDF) from Rutgers University's Network Contagion Research Institute argues that TikTok surfaces fewer anti-CCP posts compared to Instagram and YouTube, despite higher user engagement with such content. It also found that heavy TikTok usage correlates with more favorable views of China's human rights record. The findings come a Supreme Court hearing later this week on whether the federal government can ban TikTok. Gizmodo reports: The new peer-reviewed paper, which was first reported by The Free Press, begins by examining whether content on TikTok, Instagram, and YouTube related to the keywords \"Tiananmen,\" \"Tibet,\" \"Uyghur,\" and \"Xinjiang\" tends to display pro- or anti-CCP sentiment. The researchers found that TikTok's algorithm didn't necessarily surface more pro-CCP content in response to searches for those terms, but it delivered fewer anti-CCP posts than did Instagram or YouTube and significantly more posts that were irrelevant to the subject.\n \nIn the second stage of their study, the NCRI team tested whether the lower performance of anti-CCP content was a result of less user engagement (likes and comments) with those posts. They found that TikTok users \"liked or commented on anti-CCP content nearly four times as much as they liked or commented on pro-CCP content, yet the search algorithm produced nearly three times as much pro-CCP content\" while there was no similar discrepancy on Instagram or YouTube.\n \nFinally, the researchers surveyed 1,214 Americans about their social media usage and their views on China's human rights record. The more time users spent on any social media platform, the more likely they were to have favorable views of China's human rights record, the survey showed. Users were particularly more likely to have favorable views if they spent more than three hours a day using TikTok. The researchers wrote that they could not definitively conclude that spending more time on TikTok resulted in more positive views of China, but \"taken together, the findings from these three studies raise the distinct possibility that TikTok is a vehicle for CCP propaganda.\"<p><div class=\"share_submission\" style=\"position:relative;\">\n<a class=\"slashpop\" href=\"http://twitter.com/home?status=Ahead+of+SCOTUS+Hearing%2C+Study+Finds+TikTok+Is+Likely+Vehicle+For+Chinese+Propaganda%3A+https%3A%2F%2Ftech.slashdot.org%2Fstory%2F25%2F01%2F06%2F2150211%2F%3Futm_source%3Dtwitter%26utm_medium%3Dtwitter\"><img src=\"https://a.fsdn.com/sd/twitter_icon_large.png\"></a>\n<a class=\"slashpop\" href=\"http://www.facebook.com/sharer.php?u=https%3A%2F%2Ftech.slashdot.org%2Fstory%2F25%2F01%2F06%2F2150211%2Fahead-of-scotus-hearing-study-finds-tiktok-is-likely-vehicle-for-chinese-propaganda%3Futm_source%3Dslashdot%26utm_medium%3Dfacebook\"><img src=\"https://a.fsdn.com/sd/facebook_icon_large.png\"></a>\n\n\n\n</div></p><p><a href=\"https://tech.slashdot.org/story/25/01/06/2150211/ahead-of-scotus-hearing-study-finds-tiktok-is-likely-vehicle-for-chinese-propaganda?utm_source=rss1.0moreanon&amp;utm_medium=feed\">Read more of this story</a> at Slashdot.</p><iframe src=\"https://slashdot.org/slashdot-it.pl?op=discuss&amp;id=23570887&amp;smallembed=1\" style=\"height: 300px; width: 100%; border: none;\"></iframe>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"SaaS is for Suckers: AI Already Builds Better Custom Software","url":"https://hackernoon.com/saas-is-for-suckers-ai-already-builds-better-custom-software?source=rss","date":1736201167,"author":"Computational Technology for All","unread":true,"content":"<p>It used to be that every company faced a definitive choice: buy or build. For most, the answer was to buy. Software-as-a-Service (SaaS) dominated because it was cheaper, faster, and easier than building proprietary software from scratch. But things have changed now that many tasks within SaaS companies and many features within SaaS products can now be completed by your own AI.  </p>\n<p>\\\nToday, more companies are realizing that building, once seen as prohibitively expensive, is not just viable—it’s becoming the superior option—offering more customization and significantly lower labor costs.</p>\n<h3 id=\"klarnaandibmthecorporateshiftfromlabortoaihasalreadybegun\">Klarna and IBM: The Corporate Shift From Labor to AI Has Already Begun</h3>\n<p><img src=\"https://cdn.hackernoon.com/images/TByPx42kOdfCJW2zO2f7i5O6tku2-7x038ed.jpeg\" alt=\"Yahoo Finance & Fox News Coverage of the Klarna and IBM CEOs respectively https://finance.yahoo.com/news/klarna-ceo-says-company-stopped-205638110.html https://www.foxbusiness.com/technology/ibm-ceo-warns-ai-could-wipe-out-many-jobs-within-5-years?t \" /></p>\n<p>\\\nLook at Klarna. The fintech giant recently replaced significant portions of its workforce with AI-driven automation. IBM did something similar, cutting hiring for roles such as customer support agents, data entry clerks, financial analysts, software testers, and even junior developers, which they knew would soon be automated by AI. But it’s not just these high-profile examples. </p>\n<p>\\\nThis shift is happening across industries like finance, healthcare, retail, and manufacturing, driven by the simple fact that AI is reducing the complexity of software development.</p>\n<p>\\\nThe key reason SaaS took off was that building software was difficult, requiring large teams of engineers, months (if not years) of development, and significant ongoing maintenance. Now, AI is significantly lowering those barriers, making development more accessible while still requiring ongoing maintenance and updates. Companies no longer need to license software for every function because they can generate their own AI-powered solutions dynamically. </p>\n<p>\\\nFor example, AI-driven automation is eating into Salesforce’s subscription market cap as companies build their own custom CRM tools, reducing dependence on third-party SaaS providers. The reliance on third-party software vendors is diminishing, and enterprises that recognize this early are the ones getting ahead.</p>\n<h3 id=\"thenewbuyvsbuilddebate\">The New Buy vs. Build Debate</h3>\n<p>Buying SaaS used to make sense because it let companies focus on their core business instead of wasting time building and maintaining internal tools. Salesforce, HubSpot, and Workday grew by convincing enterprises that outsourcing software to specialists was the smart move. But AI changes the game. Now, building isn’t just cheaper—it’s better. Here’s why:</p>\n<p>\\</p>\n<ol>\n<li><p><strong>Customization:</strong> AI enables businesses to tailor software precisely to their needs rather than force-fitting workflows into rigid SaaS platforms. For instance, companies like Netflix are leveraging AI to create highly customized content recommendation engines rather than relying on off-the-shelf solutions.</p>\n<p>\\</p></li>\n<li><p><strong>Cost Savings:</strong> Once AI-powered tools are set up, they can operate with minimal human intervention, reducing ongoing licensing and staffing costs. Tesla, for example, has reduced reliance on third-party software vendors by developing AI-driven automation for manufacturing and quality control.</p>\n<p>\\</p></li>\n<li><p><strong>Faster Iteration:</strong> Enterprises can update and refine AI-driven tools on demand rather than waiting for vendors to release updates. Amazon continuously refines its AI-driven logistics and warehouse management systems to improve efficiency without waiting for external software updates.</p>\n<p>\\</p></li>\n<li><p><strong>Data Ownership:</strong> Companies no longer need to send valuable proprietary data to third-party vendors. Apple has emphasized data privacy by developing its own AI models for on-device processing, reducing reliance on external cloud-based AI services.</p></li>\n</ol>\n<p>\\\nFor decades, enterprises made peace with SaaS limitations, but AI reduces the need for those compromises.</p>\n<h3 id=\"theinfrastructureadvantagewhowins\">The Infrastructure Advantage: Who Wins?</h3>\n<p>So if AI is making custom software development easier and more attractive than SaaS, who benefits the most? The answer lies in infrastructure. In the early days of the cloud, companies realized that managing their own data centers was inefficient. AWS, Google Cloud, and Microsoft Azure took over, turning infrastructure into a commodity and becoming the backbone of the Internet. Now, a similar battle is playing out in AI.</p>\n<p>\\\nThe companies that win will be those that control AI compute infrastructure. OpenAI, Anthropic, and other model providers are competing for dominance, but their fate ultimately depends on access to the real power brokers: those who control chips, energy, and data centers.</p>\n<p>\\\nNvidia, Intel, and AMD own the GPU market. AWS, Google, and Microsoft control hyperscale cloud computing. Enterprises that recognize this are increasingly bypassing external AI providers and optimizing their own AI stacks. The closer they are to the infrastructure layer, the more leverage they have.</p>\n<h3 id=\"saasvendorsareinawholelottatrouble\">SaaS Vendors Are in a Whole Lotta’ Trouble</h3>\n<p>SaaS companies should be worried. The economic model that made them dominant—recurring revenue through subscription licensing—relies on the assumption that building software is too costly for most businesses. That assumption is breaking down. Take enterprise automation tools like Zapier or UIPath. Five years ago, companies paid them hefty fees for automation. </p>\n<p>\\\nToday, those same companies can use AI to write scripts that handle automation on demand, tailored to their specific workflows. CRM platforms, ERP systems, and customer service software all face the same challenge: AI enables companies to replace generic, expensive SaaS solutions with custom-built, AI-powered tools that are cheaper and more effective.</p>\n<p>\\\nThis isn’t just a small shift. It’s an existential crisis for SaaS vendors who have spent years building walled gardens around their platforms. When enterprises no longer need to play inside those walls, the foundations of the SaaS business model begin to erode.</p>\n<h3 id=\"thenewenterprisesoftwaredevelopmentplaybook\">The New Enterprise Software Development Playbook</h3>\n<p>Forward-thinking enterprises are already adjusting. They’re reducing reliance on third-party SaaS vendors and investing in AI-powered internal tools. Here’s what the winning strategy looks like:</p>\n<ol>\n<li><p><strong>Control Compute:</strong> Companies are moving from renting AI services to controlling their own compute resources. For example, OpenAI has begun building its own AI supercomputers to reduce reliance on external cloud providers.</p>\n<p>\\</p></li>\n<li><p><strong>AI-Native Development:</strong> Instead of licensing SaaS, enterprises are using AI to generate and maintain their own software dynamically. Shopify, for example, has implemented AI-driven code generation to streamline backend development and reduce dependency on third-party software solutions.</p>\n<p>\\</p></li>\n<li><p><strong>API-First Thinking:</strong> Businesses are integrating AI into their core workflows through APIs rather than relying on bloated SaaS interfaces. Stripe has heavily invested in AI-powered financial APIs to enhance fraud detection and transaction efficiency.</p>\n<p>\\</p></li>\n<li><p><strong>Security & Compliance:</strong> By keeping AI workloads in-house, enterprises avoid the compliance risks of sending sensitive data to third-party SaaS platforms. JPMorgan Chase has developed proprietary AI-driven financial analytics platforms to maintain data security and regulatory compliance.</p></li>\n</ol>\n<p>\\\nThe smartest companies aren’t just replacing SaaS—they’re designing their entire tech stacks around AI-native architectures. The end goal isn’t just cost-cutting; it’s agility, security, and ownership.</p>\n<h3 id=\"aitoconsumesaasandbeyond\">AI to Consume SaaS and Beyond</h3>\n<p>SaaS isn’t going to disappear overnight, with the market cap of the global SaaS industry currently exceeding $3 trillion, but its dominance is slipping. AI is changing the economics of software development, making in-house solutions not just viable, but preferable. Companies that recognize this now will gain an edge. But beyond simply taking market share from SaaS, AI is expanding the overall market by creating efficiencies that reduce labor hours and unlock new economic opportunities. </p>\n<p>\\\nInstead of just shifting dollars from software subscriptions to AI-powered internal solutions, businesses are using AI to optimize processes, automate routine tasks, and augment human capabilities. This shift not only lowers operational costs but also increases productivity, allowing companies to scale faster and compete more effectively. </p>\n<p>\\\nTesla has developed in-house AI-powered automation to streamline manufacturing, JPMorgan Chase has built proprietary AI-driven financial analytics platforms, and Netflix has created its own AI-enhanced content recommendation system—each reducing reliance on third-party SaaS providers. </p>\n<p>\\\nThose who continue relying on SaaS vendors may find themselves constrained by costly and less adaptable solutions. The lesson from past tech revolutions is clear: the real power belongs to those who control the infrastructure. Just as cloud computing reshaped enterprise IT, AI is reshaping enterprise software. The winners won’t be the SaaS providers of yesterday. They’ll be the companies that own their AI stacks, control their compute, and move faster than the competition.</p>\n<p>\\\nIf you’re still debating buy vs. build, the answer is already clear: AI makes building the better choice.</p>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Consumer tech spending will break records in 2025 if Trump’s tariffs don’t squash it, CTA predicts","url":"https://techcrunch.com/2025/01/06/consumer-tech-spending-will-break-records-in-2025-if-trumps-tariffs-dont-squash-it-cta-predicts/","date":1736200764,"author":"Julie Bort","unread":true,"content":"<p>AI is leading US consumers towards a tech spending bonanza this year if tariffs don't materialize, new research from the Consumer Technology Association finds.</p>\n<p>© 2024 TechCrunch. All rights reserved. For personal use only.</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Toyota’s Woven City is open for business and looking for startups","url":"https://techcrunch.com/2025/01/06/toyotas-woven-city-is-open-for-business-and-looking-for-startups/","date":1736200069,"author":"Kirsten Korosec","unread":true,"content":"<p>Toyota Motor Chairman Akio Toyoda revealed Monday at CES 2025 his vision for a living laboratory chock-full of startups and technology. His message: Woven City — a prototype city on a 175-acre site at the foot of Mount Fuji in Japan — is open for business and searching for inventors. &#8220;Today, I say to anyone [&#8230;]</p>\n<p>© 2024 TechCrunch. All rights reserved. For personal use only.</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"The 'Always Available' Trap: What Is It and How to Avoid It","url":"https://hackernoon.com/the-always-available-trap-what-is-it-and-how-to-avoid-it?source=rss","date":1736200040,"author":"Scott D. Clary","unread":true,"content":"<h2 id=\"whyyourfearofsettinglimitsisyoursigntostart\">Why Your Fear of Setting Limits Is Your Sign to Start</h2>\n<p>Last week, I watched Sarah break down in the middle of our mastermind meeting.</p>\n<p>\\\nShe runs a thriving design agency, the kind that big tech companies fight to work with.&nbsp;<strong>Revenue is up 200% this year</strong>. Her team has grown from just her to fifteen talented designers. She just landed a dream contract with a Fortune 500 company.</p>\n<p>\\\nAnd yet, there she sat, barely holding back tears while scrolling through dozens of Slack messages from a client who had been messaging her throughout the night.</p>\n<p>\\\n<em>\"I know I need to set better boundaries,\"</em>&nbsp;she whispered, her voice shaking.&nbsp;<em>\"But what if they get angry? What if they leave? What if word gets out that I'm 'difficult' to work with?\"</em></p>\n<p>\\\nThat's when it hit me. Sarah's fear of setting boundaries wasn't just a personal struggle – it was the&nbsp;<strong>exact evidence</strong>&nbsp;she needed them most.</p>\n<p>\\\nThink about that for a moment.</p>\n<p>\\\nThe same drive that makes entrepreneurs successful – our desire to help, to deliver value, to exceed expectations – can become the very thing that threatens to break us. It's what I call the&nbsp;<strong>Success Trap</strong>: the better you get at serving others, the worse you become at protecting yourself.</p>\n<p>\\\nThree years ago, Sarah celebrated when clients would text her directly.&nbsp;<em>It meant they trusted her.</em></p>\n<p>\\\nTwo years ago, she prided herself on being \"always available.\"&nbsp;<em>It showed her dedication.</em></p>\n<p>\\\nLast year, working weekends was a badge of honor.&nbsp;<em>It proved her commitment.</em></p>\n<p>\\\nBut now? Those same behaviors weren't signs of success anymore. They had become what I call&nbsp;<strong>golden handcuffs</strong>&nbsp;– self-imposed constraints masquerading as customer service.</p>\n<p>\\\nHer success hadn't disappeared. Her standards for self-preservation just hadn't kept pace with her growth. And in the gap between where her business had scaled and where her boundaries remained stuck in startup mode, she was quietly drowning.</p>\n<p>\\\nSarah isn't alone. This pattern shows up in nearly every successful entrepreneur's journey once you start looking for it. And it always starts with the same dangerous belief:&nbsp;<strong>that our availability equals our value</strong>.</p>\n<h2 id=\"theparadoxofentrepreneurialpeoplepleasing\">The Paradox of Entrepreneurial People-Pleasing</h2>\n<p>Here's what nobody tells you about scaling a business:&nbsp;<strong>success amplifies every boundary weakness</strong>&nbsp;you haven't addressed.</p>\n<p>\\\nLet me show you how deep this goes.</p>\n<p>\\\nLast month (at various events), I spoke with thirty founders who'd crossed the $1M revenue mark. I asked them one simple question:&nbsp;<em>\"What's the hardest part of growing?\"</em></p>\n<p>\\\nTwenty-six of them said some version of the same thing:&nbsp;<strong>managing increasing demands on their time and energy</strong>.</p>\n<p>\\\nBut here's what fascinated me – the founders who struggled most with boundaries weren't the rookies. They were the&nbsp;<strong>high-performing veterans</strong>&nbsp;who'd built their success on being exceptional at serving others.</p>\n<p>\\\nIt's what I call the&nbsp;<strong>People-Pleasing Paradox</strong>:&nbsp;<em>The better you get at delighting others, the harder it becomes to disappoint them.</em></p>\n<p>\\\nThink about the logic that traps us:</p>\n<p>\\\nA client texts at midnight. We respond because&nbsp;<em>\"that's what great service looks like.\"</em></p>\n<p>\\\nAn investor wants a Saturday meeting. We agree because&nbsp;<em>\"that's what committed founders do.\"</em></p>\n<p>\\\nA team member has a crisis on our day off. We jump in because&nbsp;<em>\"that's what good leaders do.\"</em></p>\n<p>\\\nEach time we override our boundaries, we're not just solving a short-term problem. We're&nbsp;<strong>programming everyone around us</strong>&nbsp;with dangerous expectations.</p>\n<p>\\\nBut here's the real kicker – and the part that keeps us stuck.</p>\n<p>\\\nMost entrepreneurs aren't actually afraid of setting boundaries. They're afraid of the&nbsp;<strong>identity shift</strong>&nbsp;that comes with it. Because somewhere along the way, we started believing that our&nbsp;<strong>accessibility</strong>&nbsp;was our competitive advantage.</p>\n<p>\\\nI saw this perfectly illustrated when I asked Sarah why she hadn't set office hours with her clients yet. Her answer floored me:</p>\n<p>\\\n<em>\"If I'm not always available… then what actually makes me special?\"</em></p>\n<p>\\\nAnd there it was. The raw truth that keeps so many of us chained to our phones, laptops, and endless meetings. We've confused our&nbsp;<strong>value</strong>&nbsp;with our&nbsp;<strong>availability</strong>.</p>\n<p>\\\nBut here's what Sarah couldn't see from inside her always-on prison:&nbsp;<strong>Her fear of setting boundaries was actually because of the pressure that had built up from not having them.</strong></p>\n<p>\\\nIt's like a pressure valve in a steam engine. The more pressure that builds, the scarier it feels to release it. But that rising fear isn't a reason to keep the pressure contained – it's the very signal that release is necessary.</p>\n<p>\\\nThis brings us to a counter-intuitive truth about entrepreneurial boundaries:&nbsp;<strong>The more successful you become, the more essential your boundaries become – and the more resistance you'll feel to setting them.</strong></p>\n<h2 id=\"thehiddencostsofweakboundaries\">The Hidden Costs of Weak Boundaries</h2>\n<p>Let me tell you about Mark, another founder in our mastermind group. He did $2.4M in revenue last year, and by traditional metrics, his business was thriving.</p>\n<p>\\\nBut when we actually ran the numbers, we discovered something shocking: his&nbsp;<strong>lack of boundaries was costing him nearly $400,000 a year</strong>.</p>\n<p>\\\nHere's how it broke down:</p>\n<p>\\\n<strong>Lost Innovation Time</strong>&nbsp;Every time Mark got interrupted by a non-urgent client message, it took him an average of 23 minutes to get back into deep work mode. With 15 interruptions per day, he was losing&nbsp;<em>4.5 hours of high-value work daily</em>.</p>\n<p>\\\n<strong>Decision Fatigue Tax</strong>&nbsp;Being constantly available meant Mark was making critical business decisions in a state of mental exhaustion. We tracked his conversion rates on sales calls and found a&nbsp;<em>32% drop</em>&nbsp;in close rates for meetings scheduled after 3 PM.</p>\n<p>\\\n<strong>The Team Multiplication Effect</strong>&nbsp;His lack of boundaries wasn't just affecting him – it was&nbsp;<strong>creating a culture of chaos</strong>. His team was mimicking his always-on behavior, leading to burnout and a turnover rate triple the industry average.</p>\n<p>\\\nBut here's what really got my attention: the&nbsp;<strong>invisible costs</strong>&nbsp;that weren't showing up on any balance sheet.</p>\n<p>\\\nMark's wife hadn't seen him fully present at dinner in months. His innovative thinking – the same creativity that built his business – had dried up. The joy of entrepreneurship had been replaced by a constant hum of anxiety.</p>\n<p>\\\nHe was experiencing what I call&nbsp;<strong>Boundary Debt</strong>&nbsp;– and like financial debt, it compounds over time.</p>\n<p>\\\nThink of boundaries like a cell phone battery. Every time you override a boundary, you're not just using today's energy. You're borrowing from tomorrow's capacity. Do it long enough, and you end up in&nbsp;<em>spiritual bankruptcy</em>.</p>\n<p>\\\nThe most dangerous part? Unlike financial debt,&nbsp;<strong>boundary debt sneaks up on you</strong>. It masquerades as dedication. It disguises itself as customer service. It hides behind words like \"hustle\" and \"commitment.\"</p>\n<p>\\\nBut make no mistake – it's stealing something precious from you:</p>\n<p>\\\nYour ability to innovate</p>\n<p>\\\nYour capacity to lead</p>\n<p>\\\nYour space to think strategically</p>\n<p>\\\nYour presence with loved ones</p>\n<p>\\\nYour passion for your work</p>\n<p>\\\nI recently asked a room full of successful founders to calculate their \"boundary debt.\" The exercise was simple: multiply the number of hours they spend overriding their boundaries by their highest value work rate.</p>\n<p>\\\nThe numbers were staggering. One founder realized she was \"investing\" $50,000 worth of her time annually in&nbsp;<strong>maintaining relationships that were actually costing her business money</strong>.</p>\n<p>\\\nBut here's the real tragedy: most entrepreneurs don't recognize these costs until they've already paid them. They're too busy responding to midnight emails to notice their creative well running dry. Too caught up in being \"always available\" to realize they're becoming&nbsp;<em>increasingly ineffective</em>.</p>\n<h2 id=\"whyitsharderforentrepreneurs\">Why It's Harder for Entrepreneurs</h2>\n<p>Last month at a founder dinner, someone asked an interesting question:&nbsp;<em>\"Why do successful entrepreneurs struggle more with boundaries than most professionals?\"</em></p>\n<p>\\\nThe room went quiet. Then the stories started pouring out.</p>\n<p>\\\nA SaaS founder described turning down a client call during his daughter's recital, only to spend the entire performance wondering if he'd just lost a $50,000 contract.</p>\n<p>\\\nA startup CEO admitted to checking Slack during her father's funeral because an investor might be waiting for her response.</p>\n<p>\\\nA creative agency owner confessed to taking client calls from his hospital bed after surgery because he was afraid of appearing&nbsp;<em>\"uncommitted.\"</em></p>\n<p>\\\nThese weren't inexperienced founders. These were&nbsp;<strong>seasoned entrepreneurs running multi-million dollar businesses</strong>. So, what makes it so much harder for us?</p>\n<p>\\\nThe answer lies in what I call the&nbsp;<strong>Entrepreneur's Boundary Bind</strong>&nbsp;– a unique set of pressures that make traditional boundary-setting advice feel impossible to follow.</p>\n<p>\\\n<strong>First, there's the Identity Merge.</strong>&nbsp;Most entrepreneurs don't just run their businesses – they&nbsp;<em>are</em>&nbsp;their businesses. When your name is on the door (literally or figuratively), every boundary can feel like you're choosing between your personal needs and your company's success.</p>\n<p>\\\n<strong>Then comes the Opportunity Fear.</strong>&nbsp;In a world where one connection can change everything, saying \"no\" feels like gambling with your company's future. Every boundary becomes a calculated risk:&nbsp;<em>Is protecting my Sunday afternoon worth potentially missing the next big break?</em></p>\n<p>\\\n<strong>Add to that the Reality of Responsibility.</strong>&nbsp;When you're responsible for payroll, client deliverables, and investor expectations, traditional boundaries can feel like luxury items. One founder put it perfectly:&nbsp;<em>\"It's hard to turn off your phone when other people's mortgages depend on you being available.\"</em></p>\n<p>\\\nBut the most insidious challenge? What I call the&nbsp;<strong>Success Trap 2.0</strong>.</p>\n<p>\\\nHere's how it works: Your lack of boundaries helped you succeed in the early days. You really did need to be available 24/7. You actually did have to respond to every message. Your hustle really was your competitive advantage.</p>\n<p>\\\nBut now? You're running a different-sized business with the same size boundaries. It's like trying to run a factory with startup rules – it's not just inefficient, it's unsustainable.</p>\n<p>\\\nI saw this clearly with Elena, a founder who scaled her business from zero to $5M in three years. Her superpower in the early days was her instant responsiveness to customer needs. But at $5M, that same superpower was keeping her business stuck.</p>\n<p>\\\n<em>\"I know I need to step back,\"</em>&nbsp;she told me,&nbsp;<em>\"but every time I try, I remember all the deals I won because I was the one who picked up the phone at 9 PM. What if I miss the next big opportunity?\"</em></p>\n<p>\\\nThis is where most boundary advice falls short. It doesn't account for the unique psychological weight entrepreneurs carry – the way each boundary decision feels like it could be the one that changes everything.</p>\n<p>\\\nIt's not just about managing time or learning to say no. It's about reconciling two competing truths:</p>\n<p>\\\n<strong>Truth 1</strong>: Your accessibility was crucial to your early success.</p>\n<p>\\\n<strong>Truth 2</strong>: Your continued accessibility could prevent your next level of growth.</p>\n<p>\\\nThis tension creates what psychologists call an \"approach-avoidance conflict\" – we know we need better boundaries, but the very things that make us successful as entrepreneurs make us resistant to setting them.</p>\n<h2 id=\"thewarningsignswhenweakboundariesbecomecritical\">The Warning Signs: When Weak Boundaries Become Critical</h2>\n<p>The most dangerous thing about boundary erosion? It happens so gradually that you rarely see it until you're already in the danger zone.</p>\n<p>\\\nMost entrepreneurs don't realize they have boundary issues until they're already experiencing serious consequences. By then, they'd typically been showing warning signs for months. The key is learning to spot them&nbsp;<em>before</em>&nbsp;they become critical.</p>\n<p>\\\nHere are the critical indicators that your boundary issues have moved from challenging to&nbsp;<strong>critically compromised</strong>:</p>\n<p>\\\n<strong>The Physical Signals</strong></p>\n<p>\\\nYour body is often the first to wave the red flag. Watch for:</p>\n<ul>\n<li>That knot in your stomach when your phone buzzes&nbsp;<em>after hours</em></li>\n<li>The subtle dread you feel on Sunday nights</li>\n<li>The headaches that come with&nbsp;<strong>constant context-switching</strong></li>\n<li>The exhaustion that sleep doesn't seem to fix</li>\n<li>Increased anxiety around checking messages</li>\n<li>Physical tension when thinking about work commitments</li>\n</ul>\n<p>\\\n<strong>The Business Markers</strong></p>\n<p>\\\nYour company will show clear symptoms when boundaries are compromised:</p>\n<ul>\n<li>High-performing team members start leaving for&nbsp;<em>\"better work-life balance\"</em></li>\n<li>Strategic initiatives consistently get pushed back for&nbsp;<strong>urgent</strong>&nbsp;client needs</li>\n<li>Innovation slows because you're too busy reacting to create</li>\n<li>Growth plateaus because you've become the&nbsp;<strong>bottleneck</strong></li>\n<li>Decision-making quality decreases due to constant interruptions</li>\n<li>Your role becomes increasingly reactive rather than&nbsp;<em>strategic</em></li>\n</ul>\n<p>\\\n<strong>The Relationship Indicators</strong></p>\n<p>\\\nThe deterioration of personal relationships is a&nbsp;<strong>critical warning sign</strong>:</p>\n<ul>\n<li>Conversations with loved ones become transaction-like and distracted</li>\n<li>Social situations feel like potential interruptions to work</li>\n<li>Family members stop sharing important news because&nbsp;<em>\"you're always busy\"</em></li>\n<li>Your team hesitates to bring up problems because&nbsp;<em>\"you have too much on your plate\"</em></li>\n<li>Client expectations keep expanding while your energy keeps shrinking</li>\n<li>Personal commitments consistently take a backseat to work demands</li>\n</ul>\n<p>\\\n<strong>The Resentment Test</strong></p>\n<p>\\\nThe most reliable indicator of boundary issues: When someone makes a reasonable request during reasonable business hours, what's your immediate emotional response? If it's&nbsp;<strong>resentment</strong>&nbsp;rather than neutral consideration, your boundaries aren't just weak – they're&nbsp;<em>critically compromised</em>.</p>\n<p>\\\n<strong>The Time-Energy Disconnect</strong></p>\n<p>\\\nA particularly subtle warning sign in high-performers: when your calendar says you have time, but your&nbsp;<strong>energy</strong>&nbsp;says you don't. This gap between theoretical availability and actual capacity is often the first crack in the foundation.</p>\n<p>\\\n<strong>The Productivity Paradox</strong></p>\n<p>\\\nWhen boundary issues become critical, a strange thing happens: you're working&nbsp;<strong>more hours</strong>&nbsp;but accomplishing&nbsp;<em>less</em>. Your calendar is full, but strategic work isn't getting done. You're constantly busy but struggling to point to meaningful progress.</p>\n<p>\\\nThese warning signs aren't just indicators – they're&nbsp;<strong>invitations</strong>. Each one is an opportunity to recognize that your current system isn't just&nbsp;<em>unsustainable</em>. It's actively undermining the very success you're working so hard to achieve.</p>\n<p>\\\nThe key is to view these signs not as failures, but as&nbsp;<strong>data points</strong>. They're valuable feedback telling you exactly where and how your boundary system needs strengthening.</p>\n<h2 id=\"theboundaryresetframework\">The Boundary Reset Framework</h2>\n<p>Understanding boundary issues is one thing. Actually fixing them is another. Let's break down a systematic approach to resetting your boundaries – one specifically designed for entrepreneurs who need to shift from&nbsp;<strong>always available</strong>&nbsp;to&nbsp;<strong>strategically accessible</strong>.</p>\n<p>\\\n<strong>Start With Your Non-Negotiables</strong></p>\n<p>\\\nBefore setting external boundaries, you need to get crystal clear on your internal ones. Start with these four essential questions:</p>\n<ul>\n<li>What work truly moves your business forward?</li>\n<li>When are you at your creative and strategic best?</li>\n<li>What relationships matter most outside your business?</li>\n<li>What activities restore your energy?</li>\n</ul>\n<p>\\\nThese aren't just self-care questions – they're&nbsp;<em>business strategy</em>. Your ability to serve others is directly proportional to your ability to protect your energy.</p>\n<p>\\\n<strong>The Three-Tier Communication System</strong></p>\n<p>\\\nCreate what I call your&nbsp;<strong>Accessibility Architecture</strong>. Instead of being equally available to everyone, establish three distinct tiers:</p>\n<p>\\\n<strong>Tier 1: Direct Access</strong>&nbsp;Reserved for true emergencies and top-priority relationships. These select few get your personal number and can reach you outside business hours – but only for genuine emergencies.</p>\n<p>\\\n<strong>Tier 2: Structured Access</strong>&nbsp;Key team members and important clients get scheduled access through proper channels during business</p>\n<p>hours. They can book time with you, but it's organized and predictable.</p>\n<p>\\\n<strong>Tier 3: Managed Access</strong>&nbsp;Everything else goes through systems and team members first. This isn't about being unavailable – it's about being available in a sustainable way.</p>\n<p>\\\n<strong>The Automation Alliance</strong></p>\n<p>\\\nStrong boundaries need strong systems. Technology becomes your strongest ally in maintaining these boundaries:</p>\n<ul>\n<li>Use scheduling software with custom availability for different tiers</li>\n<li>Set up email filters and auto-responses that set expectations</li>\n<li>Create standard operating procedures for common requests</li>\n<li>Implement project management tools that reduce the need for constant communication</li>\n</ul>\n<p>\\\nThe key is gradual integration. Each system should reinforce your boundaries while making it easier for others to respect them.</p>\n<p>\\\n<strong>The Language of Limits</strong></p>\n<p>\\\nYour boundaries are only as effective as your ability to communicate them. Develop what I call&nbsp;<strong>Boundary Scripts</strong>&nbsp;– pre-crafted responses that maintain relationships while protecting your time:</p>\n<p>\\\n<em>\"Thank you for reaching out. To ensure I can give your project the attention it deserves, I've set aside dedicated time for client communications between 10am-4pm, Monday through Thursday. I'll respond thoughtfully to your message during those hours.\"</em></p>\n<p>\\\nEvery effective boundary script should:</p>\n<ul>\n<li>Acknowledge the outreach</li>\n<li>Explain the boundary in terms of benefits to others</li>\n<li>Set clear expectations</li>\n<li>Maintain professionalism</li>\n</ul>\n<p>\\\nThe goal isn't to build walls – it's to create channels that allow energy to flow sustainably in both directions. Well-structured boundaries don't limit growth; they enable it by protecting the space where your best work happens.</p>\n<p>\\\nRemember: Your most valuable work requires protected time and energy. By being strategically inaccessible to the many, you become incredibly valuable to the few who matter most.</p>\n<h2 id=\"yourpermissionslip\">Your Permission Slip</h2>\n<p>Let me leave you with a story that changed everything for me.</p>\n<p>\\\nLast year, I sat across from one of the most successful founders I know – someone who'd built and sold multiple companies, each bigger</p>\n<p>than the last. I asked her what she wished she'd known earlier in her journey.</p>\n<p>\\\nHer answer surprised me.</p>\n<p><em>\"I wish I'd known that my fear of setting boundaries was actually the clearest sign I needed them.\"</em></p>\n<p>\\\nShe continued:&nbsp;<em>\"Every time I felt afraid to set a limit, it was really my inner wisdom screaming that something was out of alignment. The bigger the fear, the more necessary the boundary.\"</em></p>\n<p>\\\nThat's when it hit me – and what I hope you take away from this entire piece:</p>\n<p>\\\n<strong>Your fear of setting boundaries isn't a warning to stay silent. It's your invitation to make a change.</strong></p>\n<p>\\\nThink about it:</p>\n<ul>\n<li>When you're afraid to turn off notifications, that's your creativity begging for space to emerge</li>\n<li>When you're scared to say no to a client, that's your expertise asking to be valued properly</li>\n<li>When you're worried about not being available, that's your leadership ready to evolve</li>\n</ul>\n<p>\\\nHere's your permission slip:</p>\n<p>You have permission to be unavailable sometimes.</p>\n<p>You have permission to protect your energy.</p>\n<p>You have permission to disappoint people occasionally.</p>\n<p>You have permission to put your highest work first.</p>\n<p>\\\nBecause here's the truth about entrepreneurial boundaries: They're not just about saying no to others. They're about saying yes to your most important work.</p>\n<p>\\\n<strong>Your Move</strong></p>\n<p>\\\nDon't let this be just another article you read and forget. Take these three steps right now:</p>\n<ol>\n<li>Open your calendar</li>\n<li>Find two hours this week</li>\n<li>Title them: \"Strategic Business Planning\"</li>\n</ol>\n<p>\\\nThose two hours are your first boundary. Your first step toward sustainable success. Your declaration that your energy matters as much as your availability.</p>\n<p>\\\nRemember:</p>\n<p>\\\nYour fear of setting that boundary?</p>\n<p>\\\nThat's not a warning sign.</p>\n<p>\\\nThat's not a stop sign.</p>\n<p>\\\n<strong>That's your starting line.</strong></p>\n<p>\\\nScott</p>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Dell Will No Longer Make XPS Computers","url":"https://hardware.slashdot.org/story/25/01/06/2135241/dell-will-no-longer-make-xps-computers?utm_source=rss1.0mainlinkanon&utm_medium=feed","date":1736199600,"author":"BeauHD","unread":true,"content":"An anonymous reader quotes a report from Ars Technica: After ditching the traditional Dell XPS laptop look in favor of the polarizing design of the XPS 13 Plus released in 2022, Dell is killing the XPS branding that has become a mainstay for people seeking a sleek, respectable, well-priced PC. This means that there won't be any more Dell XPS clamshell ultralight laptops, 2-in-1 laptops, or desktops. Dell is also killing its Latitude, Inspiron, and Precision branding, it announced today. Moving forward, Dell computers will have either just Dell branding, which Dell's announcement today described as \"designed for play, school, and work,\" Dell Pro branding \"for professional-grade productivity,\" or be Dell Pro Max products, which are \"designed for maximum performance.\" Dell will release Dell and Dell Pro-branded displays, accessories, and \"services,\" it said. The Pro Max line will feature laptops and desktop workstations with professional-grade GPU capabilities as well as a new thermal design.\n \nDell claims its mid-tier Pro line emphasizes durability, \"withstanding three times as many hinge cycles, drops, and bumps from regular use as competitor devices.\" The statement is based on \"internal analysis of multiple durability tests performed\" on the Dell Pro 14 Plus (released today) and HP EliteBook 640 G11 laptops conducted in November. Also based on internal testing conducted in November, Dell claims its Pro PCs boost \"airflow by 20 percent, making these Dell's quietest commercial laptops ever.\" Within each line are base models, Plus models, and Premium models. In a blog post, Kevin Terwilliger, VP and GM of commercial, consumer, and gaming PCs at Dell, explained that Plus models offer \"the most scalable performance\" and Premium models offer \"the ultimate in mobility and design.\" By those naming conventions, old-time Dell users could roughly equate XPS laptops with new Dell Premium products. [...] Dell will maintain its Alienware line of gaming PCs and peripherals (Dell acquired Alienware in 2006). The changes were made to create more \"unified branding\" that will make it \"easier and faster to find the right PCs, accessories, and services,\" said Dell in a press release. It also serves to push the company's \"AI PCs\" onto consumers.\n \nDell notes that it will maintain its Alienware line of gaming PCs and peripherals \"that's been service PC gamers for nearly 30 years.\"<p><div class=\"share_submission\" style=\"position:relative;\">\n<a class=\"slashpop\" href=\"http://twitter.com/home?status=Dell+Will+No+Longer+Make+XPS+Computers%3A+https%3A%2F%2Fhardware.slashdot.org%2Fstory%2F25%2F01%2F06%2F2135241%2F%3Futm_source%3Dtwitter%26utm_medium%3Dtwitter\"><img src=\"https://a.fsdn.com/sd/twitter_icon_large.png\"></a>\n<a class=\"slashpop\" href=\"http://www.facebook.com/sharer.php?u=https%3A%2F%2Fhardware.slashdot.org%2Fstory%2F25%2F01%2F06%2F2135241%2Fdell-will-no-longer-make-xps-computers%3Futm_source%3Dslashdot%26utm_medium%3Dfacebook\"><img src=\"https://a.fsdn.com/sd/facebook_icon_large.png\"></a>\n\n\n\n</div></p><p><a href=\"https://hardware.slashdot.org/story/25/01/06/2135241/dell-will-no-longer-make-xps-computers?utm_source=rss1.0moreanon&amp;utm_medium=feed\">Read more of this story</a> at Slashdot.</p><iframe src=\"https://slashdot.org/slashdot-it.pl?op=discuss&amp;id=23570885&amp;smallembed=1\" style=\"height: 300px; width: 100%; border: none;\"></iframe>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Washington sues T-Mobile over 2021 data breach that spilled 79 million customer records","url":"https://techcrunch.com/2025/01/06/washington-sues-t-mobile-over-2021-data-breach-that-spilled-79-million-customer-records/","date":1736199029,"author":"Zack Whittaker","unread":true,"content":"<p>The 2021 breach affected at least 2 million Washington state residents, and tens of millions more customers around the United States.</p>\n<p>© 2024 TechCrunch. All rights reserved. For personal use only.</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Meta appoints UFC’s president to its board","url":"https://techcrunch.com/2025/01/06/meta-appoints-ufcs-president-to-its-board/","date":1736198441,"author":"Kyle Wiggers","unread":true,"content":"<p>Meta has appointed three new members to its board of directors, the company announced Monday: UFC president and CEO Dana White, European investment company Exor CEO John Elkann, and tech investor and entrepreneur Charlie Songhurst. In a press release, Meta CEO Mark Zuckerberg said that White, Elkann, and Songhurst &#8220;will add a depth of expertise [&#8230;]</p>\n<p>© 2024 TechCrunch. All rights reserved. For personal use only.</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Toyota is teaching robot arms to fold t-shirts the Japanese way","url":"https://techcrunch.com/2025/01/06/toyota-is-teaching-robot-arms-to-fold-t-shirts-the-japanese-way/","date":1736198420,"author":"Brian Heater","unread":true,"content":"<p>Monday’s Toyota CES press conference was all about Woven City, the carmaker’s planned community at the base of Mount Fuji. Robotics will undoubtedly play a major role in the company’s bid to automate as much of the 2,000-person city as possible, including autonomous cars and drones designed to chaperone people back home after dark. One [&#8230;]</p>\n<p>© 2024 TechCrunch. All rights reserved. For personal use only.</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"The Greatest Life Hack of All Time Might Be To Avoid Life Hacks Altogether","url":"https://hackernoon.com/the-greatest-life-hack-of-all-time-might-be-to-avoid-life-hacks-altogether?source=rss","date":1736197204,"author":"swag","unread":true,"content":"<p>\\\n\\</p>\n<p>:::info\n<strong><em>Written using HackerNoon’s writing prompts. Would you like to take a stab at answering some of these questions? The link for the template is <a href=\"https://app.hackernoon.com/new?template=describe-your-life-hacks\">HERE</a>, just start writing! Interested in what others had to say in their answers? Click <a href=\"https://hackernoon.com/tagged/life-hack-interview\">HERE</a>. Interested in reading the content from all of our writing prompts? Click <a href=\"https://hackernoon.com/tagged/writing-prompts\">HERE</a>.</em></strong></p>\n<p>:::</p>\n<h2 id=\"tostarttellusalittlebitaboutyourself\">To start, tell us a little bit about yourself</h2>\n<p><strong>I’ve been a professional technologist for multiple decades, but in recent decades I’ve become more of a recovering technologist. I’ve become more fascinated by systems thinking and the gardening approach to the emergent world over the watchmaking approach of engineering a deterministic world that will never stand. Exploring that convergence between extrinsic systems and intrinsic ideas and actions is my primary focus these days.</strong></p>\n<h2 id=\"describethelifehacksyouuseonaregularbasis\">Describe the life hack(s) you use on a regular basis</h2>\n<p>The idea of life hacks comes from software. In a software context, a hack may be clever, but it’s often a mere quirk of flawed code or a disposable bandage placed upon on open wound. It is neither deep nor systemic, and it betrays a “script kiddie” sense of amateurishness and superficiality. Hacks presume a simple trick that requires no learning, no wisdom, no inner transformation. Like AI, it is getting a quick answer to a problem without ever being bothered to address a faulty system or developing your own mental prowess to learn, know, and grow as a human. Hacks are mindless.</p>\n<p>\\\nWhat interests me more are “anti-hacks”. There questions matter more than answers. Living the questions even moreso. Meaning-making emerges from these explorations, leading to insights about the self and our relationship with the world around us, the universe, and what our existence provides as opportunity.</p>\n<h2 id=\"whichpartoflifehasittheyhelpedyouwith\">Which part of life has it/they helped you with?</h2>\n<p>It’s helped break me out of an endless consumption cycle of more-more-more that drives our ceaseless optimization culture for consumerism. It allows my brain to slow down and absorb and be mindful of what I am doing. What my intentions are. And it breaks me from a sense of urgency that wants me to remove things from my vision or thoughts as something that I am no longer aware of, merely vanishing into the background and enabling me to remain oblivious.</p>\n<h2 id=\"wheredidyoufirsthearaboutitthem\">Where did you first hear about it/them?</h2>\n<p>There isn’t a single origin event. It began exploring a minor in philosophy as an undergraduate engineering student, evolved into an exploration of metaphysics, and added a more global cultural awareness of historical practices such as meditation and mindfulness. It meant making the time for long walks for introspection and to create fertile ground for generating new ideas. And rather than a singular Big Bang event, it too evolved over a long period of time with regular practice. An anti-hack of hearing, as it were.</p>\n<h2 id=\"isthereatimethatstandsouttoyouwhennothavingthiswouldhavenegativelyaffectedyourlife\">Is there a time that stands out to you when not having this would have negatively affected your life?</h2>\n<p>Being able to silence all my mobile notifications, to observe all the ways in which modern society tries to frack your attention for profit so you see it coming, allows you to witness the rabbit holes you are about to leap into before it’s too late to get out of them.</p>\n<p>\\\nSo for a singular time, I would say once I was leading a project of 160 people with multiple interruptions coming my way. Taking a deep breath, pausing, and actively resisting the temptation to get wrapped up in the reactionary chaos around me saved not only my sanity, but it allowed me to make better decisions with a clearer thought process.</p>\n<h2 id=\"whoareyourfavoritemotivationalspeakersonlinelecturersandortinkerers\">Who are your favorite motivational speakers, online lecturers, and/or tinkerers?</h2>\n<p>From a systems thinking perspective, I’m a big fan of Nora Bateson, Dave Snowden, L.M. Sacasas, even Otto Scharmer.</p>\n<h2 id=\"whichpodcastsbooksandmoviesdoyoulikeandwhy\">Which podcasts, books, and movies do you like and why?</h2>\n<p>I hate podcasts. While there’s the warmth of the human voice, I would rather use my idle time walking or driving for thinking. That and listening to podcasts feels to much to me like listening to someone else’s voice mail.</p>\n<p>\\\nBooks and movies are ok, but I am probably more engaged with shorter form thought pieces in blogs, substacks, etc. I also appreciate more human gatherings and discussions and debates to make the consumption of content more interactive and less passive.</p>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Sierra Space CEO Tom Vice steps down, CNBC reports","url":"https://techcrunch.com/2025/01/06/sierra-space-ceo-tom-vice-steps-down-cnbc-reports/","date":1736196957,"author":"Rebecca Bellan","unread":true,"content":"<p>Tom Vice, the CEO of private space technologies company Sierra Space, has left the company, according to a CNBC report.  Vice held the position for three and a half years, overseeing the VC-backed company’s $290 million fundraise at a $5.3 billion valuation in 2023 and securement of a military satellite contract in early 2024.&#160; Despite [&#8230;]</p>\n<p>© 2024 TechCrunch. All rights reserved. For personal use only.</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Goodbye, Dell XPS","url":"https://techcrunch.com/2025/01/06/goodbye-dell-xps/","date":1736196921,"author":"Brian Heater","unread":true,"content":"<p>In a bid to streamline, Dell is dropping some of its most iconic laptop brands. At CES 2025 on Monday, the PC company announced that XPS, Inspiron, and Latitude are moving to a farm upstate. In their stead come Dell, Dell Pro, and Dell Pro Max. The move is a bid to create “unified branding” [&#8230;]</p>\n<p>© 2024 TechCrunch. All rights reserved. For personal use only.</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Why Computer Scientists Consult Oracles","url":"https://science.slashdot.org/story/25/01/06/1819206/why-computer-scientists-consult-oracles?utm_source=rss1.0mainlinkanon&utm_medium=feed","date":1736196120,"author":"msmash","unread":true,"content":"Computer scientists are using hypothetical devices called \"oracles\" to advance the field of computational complexity theory, exploring fundamental questions about problem-solving difficulty. These theoretical tools, which instantly provide correct yes-or-no answers to specific questions, help researchers understand relationships between different classes of computational problems. \n\nOracles have proved particularly valuable in studying quantum computing, leading to breakthroughs like Peter Shor's 1994 quantum algorithm for factoring large numbers. The technique has also helped researchers rule out certain approaches to solving the longstanding P versus NP problem, a central question in computer science.<p><div class=\"share_submission\" style=\"position:relative;\">\n<a class=\"slashpop\" href=\"http://twitter.com/home?status=Why+Computer+Scientists+Consult+Oracles%3A+https%3A%2F%2Fscience.slashdot.org%2Fstory%2F25%2F01%2F06%2F1819206%2F%3Futm_source%3Dtwitter%26utm_medium%3Dtwitter\"><img src=\"https://a.fsdn.com/sd/twitter_icon_large.png\"></a>\n<a class=\"slashpop\" href=\"http://www.facebook.com/sharer.php?u=https%3A%2F%2Fscience.slashdot.org%2Fstory%2F25%2F01%2F06%2F1819206%2Fwhy-computer-scientists-consult-oracles%3Futm_source%3Dslashdot%26utm_medium%3Dfacebook\"><img src=\"https://a.fsdn.com/sd/facebook_icon_large.png\"></a>\n\n\n\n</div></p><p><a href=\"https://science.slashdot.org/story/25/01/06/1819206/why-computer-scientists-consult-oracles?utm_source=rss1.0moreanon&amp;utm_medium=feed\">Read more of this story</a> at Slashdot.</p><iframe src=\"https://slashdot.org/slashdot-it.pl?op=discuss&amp;id=23570723&amp;smallembed=1\" style=\"height: 300px; width: 100%; border: none;\"></iframe>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Concurrency management in DDD","url":"https://hackernoon.com/concurrency-management-in-ddd?source=rss","date":1736194429,"author":"Anton Musatov","unread":true,"content":"<p>In several <a href=\"https://hackernoon.com/transforming-legacy-with-domain-driven-design-v-insights\">previous articles</a>, I described in detail various nuances of organizing code in a large, complex legacy project using the Domain-Driven Design methodology. Today, I want to discuss another issue I encountered while developing this system - managing concurrency issues.</p>\n<p>\\\nTo recap, our project automated the procurement processes of companies in the B2B segment. The system supported multiple types of trading procedures that organizers could conduct online using flexible configurations. Participants submitted their bids and offers, and the organizer analyzed them to choose the best option and sign a contract with the winner. This approach not only simplified the procurement process but also significantly increased its efficiency through automation and heightened competition.</p>\n<p>\\\nThe project architecture was organized according to DDD principles and included four layers:</p>\n<ol>\n<li><strong>Client Code</strong> - framework, external API controllers, views</li>\n<li><strong>Application Layer</strong> - internal API for working with the domain, organized based on the Command pattern</li>\n<li><strong>Domain</strong> - all business logic of the application, isolated from other layers</li>\n<li><strong>Infrastructure</strong> - supporting code ensuring the functionality of the above layers: persistent data storage, queues, integration events</li>\n</ol>\n<p>\\\nThe primary entity in the system was the trading procedure - <strong>TradeEntity</strong>. The business required us to address the issue of managing concurrent access. This included preventing simple collisions, such as parallel editing of a procedure by different users from the organizer's side, and handling more complex scenarios.</p>\n<p>\\\nFor instance, an organizer might change the key conditions of a procedure while a participant was submitting a bid. As a result, the bid might no longer meet the updated conditions, leading to risks of errors and disputes. Another example was multiple participants submitting bids simultaneously. The first bid might change the state of the procedure by extending it, recalculating rankings, or otherwise affecting the subsequent processing of other bids.</p>\n<p>\\\nAfter discussing various scenarios with the business, I proposed implementing a unified locking mechanism for the trading procedure. This mechanism ensured control over critical actions by both organizers and participants. Whenever a state change occurred, the system checked and acquired a lock to prevent potential conflicts.</p>\n<p>\\\nThe technical aspects of implementing the locking mechanism are not part of the business logic of trading procedures. Thus, the first step was to create a simple interface for working with locks at the domain level:</p>\n<pre><code class=\"php language-php\">interface ILockService\n{\n    public function getLock(name: string, timeout: int): bool\n\n    public function releaseLock(name: string): bool\n\n    public function isUsedLock(name: string): bool\n}\n</code></pre>\n<p>\\\nI placed the implementation of this interface at the infrastructure level. In this project, the locking mechanism was based on MySQL, but other tools could be used in different projects.</p>\n<pre><code class=\"php language-php\">final class LockService implements ILockService\n{\n    public function __construct(private dbConnection: DbConnection) {}\n\n    public function getLock(name: string, timeout: int): bool\n    {\n        return (bool) this-&gt;dbConnection\n            -&gt;query(\"SELECT GET_LOCK('\" . name . \"', \" . timeout . \")\")\n            -&gt;fetchFirstFromFirstRow()\n    }\n\n    public function releaseLock(name: string): bool\n    {\n        return (bool) this-&gt;dbConnection\n            -&gt;query(\"SELECT RELEASE_LOCK('\" . name . \"')\")\n            -&gt;fetchFirstFromFirstRow()\n    }\n\n    public function isUsedLock(name: string): bool\n    {\n        return (bool) this-&gt;dbConnection\n            -&gt;query(\"SELECT IS_USED_LOCK('\" . name . \"')\")\n            -&gt;fetchFirstFromFirstRow()\n    }\n}\n</code></pre>\n<p>\\\nFor convenient unit testing, a Null implementation of the service was also created:</p>\n<pre><code class=\"php language-php\">final class NullLockService implements ILockService\n{\n    public function getLock(name: string, timeout: int): bool\n    {\n        return true\n    }\n\n    public function releaseLock(name: string): bool\n    {\n        return true\n    }\n\n    public function isUsedLock(name: string): bool\n    {\n        return false\n    }\n}\n</code></pre>\n<p>\\\nThe <code>ILockService</code> interface provides basic methods for managing locks. Next, it was necessary to determine what exactly should be locked and how. This logic relates to business rules, so I created a separate service at the domain level:</p>\n<pre><code class=\"php language-php\">final class TradeLockService\n{\n    private const LOCK_TIMEOUT = 5\n\n    public function __construct(\n        private lockService: ILockService,\n        private tradeRepository: ITradeRepository,\n    ) {}\n\n    public function lockTrade(tradeId: TradeId): bool\n    {\n        lockName = this-&gt;getLockName(tradeId)\n\n        if (null === lockName) {\n            return true\n        }\n\n        return this-&gt;lockService-&gt;getLock(lockName, self::LOCK_TIMEOUT)\n    }\n\n    public function releaseTradeLock(tradeId: TradeId): void\n    {\n        lockName = this-&gt;getLockName(tradeId)\n\n        if (null === lockName) {\n            return\n        }\n\n        $this-&gt;lockService-&gt;releaseLock(lockName)\n    }\n\n    private function getLockName(tradeId: TradeId): ?string\n    {\n        if (tradeId-&gt;isNull()) {\n            return null\n        }\n\n        trade = this-&gt;tradeRepository-&gt;findBySpec(new TradeIdSpec(tradeId))\n        if (trade-&gt;isNull()) {\n            return null\n        }\n\n        lockName = 'trade_lock_';\n        if (trade instanceof ITradeLotEntity) {\n            return lockName . trade-&gt;getContainerId()\n        }\n\n        return lockName . trade-&gt;getId()\n    }\n}\n</code></pre>\n<p>\\\nThe <code>TradeLockService</code> applies locks at the procedure level. If the procedure is a lot, the container it belongs to is locked. The lock timeout is 5 seconds.</p>\n<p>\\\nThe next step was to integrate this service into the Application layer commands. To avoid duplicating logic, I created a command decorator responsible for lock management:</p>\n<pre><code class=\"php language-php\">final class TradeConcurrencyCommand extends AbstractCommand\n{\n    public function __construct(\n        private tradeId: TradeIdDTO,\n        private command: ICommand,\n    ) {}\n\n    public function execute(): mixed\n    {\n        tradeIdMapper = this-&gt;getDIContainer()-&gt;get(ITradeIdMapper::class)\n        tradeId = tradeIdMapper-&gt;mapTradeIdDTO(this-&gt;tradeId)\n\n        tradeLockService = this-&gt;getDIContainer()-&gt;make(TradeLockService::class)\n        if (! tradeLockService-&gt;lockTrade(tradeId)) {\n            throw new ConcurrencyException()\n        }\n\n        try {\n            result = this-&gt;command-&gt;execute()\n            tradeLockService-&gt;releaseTradeLock(tradeId)\n            return result\n        }\n        catch (AbstractAppException exception) {\n            tradeLockService-&gt;releaseTradeLock(tradeId)\n            throw exception\n        }\n    }\n}\n</code></pre>\n<p>\\\nWhen incorporating it into another command, a static constructor was added, and the regular constructor was marked private:</p>\n<pre><code class=\"php language-php\">final class PublishTradeCommand extends AbstractCommand\n{\n    private function __construct(\n        private userId: int,\n        private tradeId: TradeIdDTO,\n    ) { }\n\n    public static function get(\n        userId: int,\n        tradeId: TradeIdDTO,\n    ): TradeConcurrencyCommand\n    {\n        return new TradeConcurrencyCommand(\n            tradeId,\n            new self(userId, tradeId),\n        );\n    }\n\n\n    public function execute(): void\n    {\n        ...\n    }\n}\n</code></pre>\n<p>\\\nThus, the <code>TradeConcurrencyCommand</code> checks the possibility of acquiring a lock with a 5-second timeout for each call. In case of failure, a <code>ConcurrencyException</code> is thrown. If the lock is successfully acquired, the provided command is executed, and then the lock is released. This approach became a crucial part of the project architecture, ensuring data reliability and reducing collision risks.</p>\n<p>\\\nThis method provided comprehensive locking for various critical actions involving the procedure entity and other related entities. However, it did not always solve the issue of using outdated data during edits.</p>\n<p>\\\nFor example, if two users simultaneously edited a trading procedure (User A and User B), they could both load the initial data, make changes to different fields, and then attempt to save. User A might acquire a lock and save their data, and then User B might also successfully acquire a lock and overwrite some of the changes made by User A.</p>\n<p>\\\nTo address this issue, entity versioning can be used. When saving changes, the entity's version is incremented. If the version saved in the database does not match the current entity version, the save attempt should fail.</p>\n<p>\\\nAt the domain level, the trading procedure entity can include a version:</p>\n<pre><code class=\"php language-php\">abstract class AbstractTradeEntity extends AbstractEntity implements ITradeEntity\n{\n    protected version: int\n}\n</code></pre>\n<p>\\\nThe version is populated when mapping data from the database model to the entity. Users cannot modify the version at the Application Layer level. During repository save operations, the version's validity is checked:</p>\n<pre><code class=\"php language-php\">final class TradePersistentRepository extends AbstractRepository implements ITradeRepository\n{\n    public function save(trade: ITradeEntity): void\n    {\n        DbModel = (new TradeMapper())-&gt;mapTradeToDbModel(trade)\n        DbModel-&gt;saveWithVersionCheck()\n        ...\n    }\n}\n\nfinal class TradeDbModel extends DbModel\n{\n    public function saveWithVersionCheck(): void\n    {\n        if (this-&gt;getIsNew()) {\n            this-&gt;save()\n            return\n        }\n\n        transactionId = 'save_trade_with_version_check_' . this-&gt;id\n        dbConnection = this-&gt;getDbConnection()\n        dbConnection-&gt;startTransaction(transactionId)\n        version = this-&gt;rawQuery(\"\n            SELECT\n                version\n            FROM\n                %%TABLE_NAME%%\n            WHERE\n                id = \" . this-&gt;id . \"\n            FOR UPDATE\n        \")\n        -&gt;fetchFirstFromFirstRow()\n\n        if ((int) version !== this-&gt;data['version']) {\n            dbConnection-&gt;commitTransaction(transactionId)\n            throw new VersionException()\n        }\n\n        this-&gt;data['version']++\n        this-&gt;save()\n        dbConnection-&gt;commitTransaction(transactionId)\n    }\n}\n</code></pre>\n<p>\\\nIn this case, I used a MySQL transaction and a SELECT FOR UPDATE query. Such a query locks the table row, preventing simultaneous data modifications by other queries until the current transaction is completed. If the version from the database does not match the entity version, an exception is thrown. On successful save, the version is incremented.</p>\n<p>\\\nThis versioning approach should be implemented for all entities requiring safe concurrent editing.</p>\n<h3 id=\"summary\">Summary</h3>\n<p>The mechanisms described above are justified if:</p>\n<ul>\n<li>The system is actively used by many users simultaneously.</li>\n<li>Conflicts due to concurrent access can lead to critical errors or data loss.</li>\n</ul>\n<p>\\\nHowever, it is important to consider the complexity of implementing and maintaining such solutions. If the system is not highly loaded or concurrency is unlikely, these changes may be excessive.</p>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Flying Flea electric motorcycles will feature connected services powered by Qualcomm","url":"https://techcrunch.com/2025/01/06/flying-flea-electric-motorcycles-will-feature-connected-services-powered-by-qualcomm/","date":1736193868,"author":"Rebecca Bellan","unread":true,"content":"<p>Flying Flea is the latest electric two-wheeler manufacturer to embrace the connected vehicle trend. At CES 2025, Flying Flea shared plans to integrate some of Qualcomm’s Snapdragon products into its upcoming line of motorcycles, bringing connected capabilities like voice assistance, smartphone-enabled keys, and customizable ride modes.  Indian motorcycle manufacturer Royal Enfield introduced the Flying Flea [&#8230;]</p>\n<p>© 2024 TechCrunch. All rights reserved. For personal use only.</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"CISA says ‘no indication’ of wider government hack beyond Treasury","url":"https://techcrunch.com/2025/01/06/cisa-says-no-indication-of-wider-government-hack-beyond-treasury/","date":1736193742,"author":"Zack Whittaker","unread":true,"content":"<p>U.S. Treasury officials confirmed a cyberattack on its systems in early December 2024.</p>\n<p>© 2024 TechCrunch. All rights reserved. For personal use only.</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Hundreds of US Locations Had Their Hottest Year On Record","url":"https://news.slashdot.org/story/25/01/06/1838245/hundreds-of-us-locations-had-their-hottest-year-on-record?utm_source=rss1.0mainlinkanon&utm_medium=feed","date":1736193720,"author":"msmash","unread":true,"content":"Communities across the U.S. experienced unprecedented warmth in 2024, with numerous cities breaking temperature records set just a year earlier. Phoenix recorded an average temperature of 90.5F and endured 70 days with highs at or above 110F, surpassing its previous record of 55 days. \n\nMajor metropolitan areas including Chicago, Nashville, Washington, Pittsburgh, Philadelphia, and Burlington, Vermont, all registered their warmest year. Even northern Maine cities like Caribou and Houlton saw record-breaking temperatures, reflecting broader global warming trends that made 2024 the hottest year on record worldwide.<p><div class=\"share_submission\" style=\"position:relative;\">\n<a class=\"slashpop\" href=\"http://twitter.com/home?status=Hundreds+of+US+Locations+Had+Their+Hottest+Year+On+Record%3A+https%3A%2F%2Fnews.slashdot.org%2Fstory%2F25%2F01%2F06%2F1838245%2F%3Futm_source%3Dtwitter%26utm_medium%3Dtwitter\"><img src=\"https://a.fsdn.com/sd/twitter_icon_large.png\"></a>\n<a class=\"slashpop\" href=\"http://www.facebook.com/sharer.php?u=https%3A%2F%2Fnews.slashdot.org%2Fstory%2F25%2F01%2F06%2F1838245%2Fhundreds-of-us-locations-had-their-hottest-year-on-record%3Futm_source%3Dslashdot%26utm_medium%3Dfacebook\"><img src=\"https://a.fsdn.com/sd/facebook_icon_large.png\"></a>\n\n\n\n</div></p><p><a href=\"https://news.slashdot.org/story/25/01/06/1838245/hundreds-of-us-locations-had-their-hottest-year-on-record?utm_source=rss1.0moreanon&amp;utm_medium=feed\">Read more of this story</a> at Slashdot.</p><iframe src=\"https://slashdot.org/slashdot-it.pl?op=discuss&amp;id=23570745&amp;smallembed=1\" style=\"height: 300px; width: 100%; border: none;\"></iframe>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Fire TV Stick vs Onn Streaming Box: Which is Best for Streaming?","url":"https://hackernoon.com/fire-tv-stick-vs-onn-streaming-box-which-is-best-for-streaming?source=rss","date":1736192911,"author":"Black Joseph","unread":true,"content":"<p>For all streaming fanatics like me, the hunt for the next device that is able to stream in 4k is probably a never-ending one. With so many options to choose from, it’s easy to get confused about which device to go with. In this comparison, I’ll be discussing the <strong>Fire TV Stick 4K Max</strong> and the <strong>Onn Google TV 4K Streaming Box</strong>, two of the most popular choices.</p>\n<p>\\\nBoth offer 4K streaming, but they come with their own unique features. Let me walk you through my experience with these devices, so you can decide which one might be a better fit for you.</p>\n<p>\\\nHere’s the comparison in table format. I will discuss these points in detail later.</p>\n<p>| <strong>Feature</strong> | <strong>Fire TV Stick 4K Max</strong> | <strong>Onn Google TV 4K Streaming Box</strong> |\n|----|----|----|\n| <strong>Design and Build</strong> | Stick design, compact, HDMI   extension cable included; easy to hide | Box design, sturdier build;   connects via HDMI and USB-C power |\n| <strong>Operating System</strong> | Fire OS | Google TV |\n| <strong>Processor</strong> | 1.8 GHz quad-core | 4-core Cortex-A55 |\n| <strong>RAM</strong> | 2 GB | 3 GB |\n| <strong>Internal Storage</strong> | 16 GB | 32 GB |\n| <strong>Video Quality</strong> | 4K Ultra HD, supports Dolby   Vision, HDR10+, HLG | 4K Ultra HD, supports Dolby   Vision, HDR10, HDR10+ |\n| <strong>Audio Quality</strong> | Dolby Atmos | Dolby Atmos |\n| <strong>Virtual Assistant</strong> | Alexa | Google Assistant |\n| <strong>Voice Control</strong> | Alexa Voice Remote | Google Assistant remote |\n| <strong>Remote Control</strong> | Alexa integration, dedicated app   buttons for Prime Video, Netflix, Disney+, Amazon Music | Google Assistant integration,   dedicated app buttons for YouTube, Netflix, Disney+, Paramount+ |\n| <strong>App Compatibility</strong> | Supports major streaming apps   (Netflix, Disney+, Hulu, Prime Video) | Supports major streaming apps   (Netflix, Disney+, Hulu, YouTube) |\n| <strong>Extra Features</strong> | Amazon ecosystem integration | USB-A port for external storage or   Ethernet connection |\n| <strong>Connectivity</strong> | Bluetooth 5.2 + BLE, Wi-Fi 6 | Wi-Fi 5 |\n| <strong>Available Ports</strong> | HDMI, Micro-USB | HDMI, USB-C |\n| <strong>Price</strong> | Around $79.99 | Around $32.99 |</p>\n<h2 id=\"1designandbuild\">1. Design and Build</h2>\n<p><img src=\"https://cdn.hackernoon.com/images/M5pEHjrJ4aN6a0jzngeRJ9tc5pu2-0z033l6.jpeg\" alt=\"\" />Let's start with the design. The <strong>Fire TV Stick 4K Max</strong> is, as expected, a stick. It’s super compact, small enough to plug directly into your TV’s HDMI port. I love how easy it is to <strong>hide behind the TV</strong>, out of sight, yet still get full functionality. Plus, if you need a little extra room, it comes with an extension cable. For me, it’s super convenient, and honestly, you can’t beat its <strong>slim design</strong>.</p>\n<p>\\\nThen there’s the <strong>Onn Google TV 4K Streaming Box</strong>. It’s not a stick; <strong>it’s a box</strong>, so it’s a little bulkier. But don’t let that put you off—it feels sturdy and reliable. You’ll need to plug it into your TV’s HDMI port and connect it to a power source, which comes through a USB-C cable. It’s not as sleek and subtle as the Fire TV Stick, but I actually like the solid build of the Onn box.</p>\n<h2 id=\"2performanceandhardware\">2. Performance and Hardware</h2>\n<p><img src=\"https://cdn.hackernoon.com/images/M5pEHjrJ4aN6a0jzngeRJ9tc5pu2-3y133cm.jpeg\" alt=\"\" />Performance-wise, both of these devices hold up well, but there are some key differences. The <strong>Fire TV Stick 4K Max</strong> comes with a <strong>1.8 GHz quad-core processor</strong>, <strong>2 GB of RAM</strong>, and <strong>16 GB of storage</strong>. This combination handles streaming 4K content without breaking a sweat. Honestly, I’ve used it for hours on end and haven’t run into any lag or buffering. The 16 GB of storage is decent enough, but you can fill it up if you’re downloading a lot of apps or games.</p>\n<p>\\\nThe <strong>Onn Google TV 4K</strong>, on the other hand, has a <strong>4-core Cortex-A55 processor</strong>, <strong>3 GB of RAM</strong>, and a whopping <strong>32 GB of storage</strong>. For multitaskers like me who enjoy switching between apps or even downloading media, this extra RAM and storage really make a difference. Plus, it’s great to know you won’t run out of space any time soon, unlike the Fire TV Stick.</p>\n<h2 id=\"3remotecontrolandadditionalfeatures\">3. Remote Control and Additional Features</h2>\n<p>\\\n <img src=\"https://cdn.hackernoon.com/images/M5pEHjrJ4aN6a0jzngeRJ9tc5pu2-so43307.jpeg\" alt=\"\" /></p>\n<p>\\\n\\\nThe <strong>Fire TV Stick 4K Max</strong> comes with the <a href=\"https://firestickhacks.com/amazon-firestick-remote-control-keys-and-shortcuts/\">Alexa Voice Remote</a>, which is great. You can control playback, search for content, and even manage smart home devices—all with your voice. It also has dedicated buttons for Prime Video, Netflix, Disney+, and Amazon Music, which makes accessing your favorite apps even easier.</p>\n<p>\\\nThe <strong>Onn Google TV 4K</strong> remote <strong>features Google Assistant</strong>, volume control, and shortcuts for YouTube, Netflix, Disney+, and Paramount+. There is also an added bonus of a USB-A port on the Onn device which is perfect if you want to connect an external storage device or use an Ethernet connection for faster streaming.</p>\n<h2 id=\"4videoandaudioquality\">4. Video and Audio Quality</h2>\n<p><img src=\"https://cdn.hackernoon.com/images/M5pEHjrJ4aN6a0jzngeRJ9tc5pu2-vy233r3.png\" alt=\"\" /></p>\n<p>Both devices shine when it comes to video quality, and you’ll get stunning 4K Ultra HD content from both. The <strong>Fire TV Stick 4K Max</strong> supports <strong>Dolby Vision, HDR10+, and HLG,</strong> which makes a huge difference when watching shows and movies that are meant to pop. The colors are vibrant, the contrast is sharp, and it feels like you’re getting every bit of clarity from your TV.</p>\n<p>\\\nThe <strong>Onn Google TV 4K</strong> also supports <strong>Dolby Vision, HDR10, and HDR10+</strong>, so you won’t miss out on any of the eye-popping visuals either. In terms of audio, both devices support Dolby Atmos, which makes for an immersive sound experience if you have a surround sound system or compatible speakers. Watching movies or playing games feels more real and cinematic with that extra depth.</p>\n<h2 id=\"5appcompatibilityandstreamingservices\">5. App Compatibility and Streaming Services</h2>\n<p>When it comes to app compatibility, both devices are solid. The <strong>Fire TV Stick 4K Max</strong> gives you <strong>access to pretty much every major streaming service</strong>, including Netflix, Disney+, Hulu, and Amazon Prime Video. What I like about it is how well it <strong>integrates with the Amazon ecosystem</strong>, so if you’re into Alexa or already have other Amazon devices, it’s a no-brainer.</p>\n<p>\\\nThe <strong>Onn Google TV 4K</strong> also supports Netflix, Disney+, Hulu, and YouTube, so you’ll have all your streaming bases covered. One thing I really like about the Google TV interface is how it brings together everything I watch and <strong>offers <a href=\"https://blog.google/products/google-tv/tailor-your-recommendations/\">tailored recommendations</a></strong>, regardless of the service. I feel like it’s much easier to discover new content, thanks to Google’s search capabilities.</p>\n<h2 id=\"6softwareanduserinterface\">6. Software and User Interface</h2>\n<p><img src=\"https://cdn.hackernoon.com/images/M5pEHjrJ4aN6a0jzngeRJ9tc5pu2-yp333pe.jpeg\" alt=\"\" /></p>\n<p>If you’re already a fan of Amazon, the <strong>Fire TV Stick 4K Max</strong> runs on <strong>Fire OS</strong>, and it’s built around Amazon’s ecosystem. Personally, I find the interface easy to navigate, and since I use Prime Video regularly, it’s nice that it gets front-and-center attention. However, the downside is that the <strong>recommendations are Amazon-centric</strong>. But if you’re already plugged into Amazon’s world, you’ll find it familiar and easy to use.</p>\n<p>\\\nOn the other hand, the <strong>Onn Google TV 4K</strong> runs on Google TV, which I find to be one of the most polished and user-friendly interfaces out there. It <strong>pulls in recommendations from all your services</strong>, which I appreciate. It doesn’t matter if I’ve been watching Netflix, Hulu, or YouTube—Google TV gives me recommendations based on what I’ve been watching across all platforms, which makes it super convenient.</p>\n<h2 id=\"7pricingandvalue\">7. Pricing and Value</h2>\n<p>Price-wise, the <strong>Fire TV Stick 4K Max</strong> can be a little high at an average price of <strong>$79.99</strong>. Still, for what you get, seamless integration with Amazon services, solid performance, and Alexa voice control is worth the extra money, at least for anyone already using Amazon services.</p>\n<p>\\\nThe <strong>Onn Google TV 4K</strong> is cheaper, a little bit, at <strong>$32.99</strong>. For the additional storage alone, not to mention the upgraded RAM and features courtesy of Google Assistant, this is a great value for someone looking for a great 4K streaming device on a budget.</p>\n<h2 id=\"conclusion\">Conclusion</h2>\n<p>So, which one is the better option for you? If you’re already immersed in the Amazon ecosystem and value Alexa control, the Fire TV Stick 4K Max is a solid choice. However, if you’re looking for a more affordable, Google-centric device with better multitasking features, more storage, and a sleek interface, then the Onn Google TV 4K is hard to beat.</p>\n<p>\\\nFor me, both devices deliver excellent streaming experiences, so it really depends on what ecosystem you’re more invested in and what features matter most to you. Either way, you’ll be streaming your favorite shows in 4K in no time!</p>\n<p>\\n </p>\n<p>\\</p>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"AMD unveils new chips for laptops, desktops, and gaming handhelds at CES 2025","url":"https://techcrunch.com/2025/01/06/amd-unveils-new-chips-for-laptops-desktops-and-gaming-handhelds/","date":1736192700,"author":"Kyle Wiggers","unread":true,"content":"<p>At CES 2025 in Las Vegas, AMD unveiled a slew of new chips destined for devices ranging from desktops to gaming handhelds. AMD is riding high coming into this year&#8217;s CES. The company commanded a 28.7% share of the desktop CPU segment in Q3 2024, up 9.6 percentage points compared to the same quarter the [&#8230;]</p>\n<p>© 2024 TechCrunch. All rights reserved. For personal use only.</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"AMD Announces Ryzen 9 9950X3D & Ryzen AI Max, Previews AMD RDNA 4 Graphics","url":"https://www.phoronix.com/review/amd-ryzen-9950x3d-rdna4-ai-max","date":1736192700,"author":"Michael Larabel","unread":true,"content":"AMD's CES 2025 keynote was used to announce a slew of new products. They are just announcements today without any immediate availability or any hardware reviews to publish, but a look ahead for what is on the horizon for AMD in the consumer space in 2025.","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Bluesky bump from X exodus is slowing down, data shows","url":"https://techcrunch.com/2025/01/06/bluesky-bump-from-x-exodus-is-slowing-down-data-shows/","date":1736192532,"author":"Sarah Perez","unread":true,"content":"<p>Social network and X competitor Bluesky&#8217;s massive growth slowed in December in the U.S., after having surged from 9+ million in September to north of 20 million users in November. The slowdown is based on an analysis of web traffic and mobile app daily active users by analytics firm Similarweb, which found that Bluesky grew [&#8230;]</p>\n<p>© 2024 TechCrunch. All rights reserved. For personal use only.</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Intel Says New Laptop Chips Will Extend Computer Battery Life","url":"https://hardware.slashdot.org/story/25/01/06/1830247/intel-says-new-laptop-chips-will-extend-computer-battery-life?utm_source=rss1.0mainlinkanon&utm_medium=feed","date":1736191500,"author":"msmash","unread":true,"content":"Intel, which has been fending off mounting competition in notebook processors, says a new range of chips will help enable the longest battery life available in laptops. From a report: New computers based on the latest version of its Core Ultra processors will go on sale starting this month, the company said Monday at CES, an annual consumer electronics show. \n\nIntel was for decades the world's largest chipmaker thanks to its dominance of the computer processor market. Production technology stumbles and slow product introductions have opened the door to both long-time rivals and firms just entering the space. The company's board last month ousted its chief executive officer, citing the need to improve its offerings. \n\nThe new chips, intended for corporate PCs and high-end consumer devices, are aimed at boosting performance in two areas the company considers key selling points: battery life and the ability to run artificial intelligence functions. According to Intel, an HP laptop that uses one of the new processors can run Microsoft's Teams software for as long as 10.5 hours on a single charge. It can go 20.3 hours between charges when the user is running Microsoft's cloud-based 365 suite, Intel added. By comparison, Intel says a Dell device using a Qualcomm Snapdragon processor can last as long as 9.2 hours and 18.5 hours, respectively, under those conditions.<p><div class=\"share_submission\" style=\"position:relative;\">\n<a class=\"slashpop\" href=\"http://twitter.com/home?status=Intel+Says+New+Laptop+Chips+Will+Extend+Computer+Battery+Life%3A+https%3A%2F%2Fhardware.slashdot.org%2Fstory%2F25%2F01%2F06%2F1830247%2F%3Futm_source%3Dtwitter%26utm_medium%3Dtwitter\"><img src=\"https://a.fsdn.com/sd/twitter_icon_large.png\"></a>\n<a class=\"slashpop\" href=\"http://www.facebook.com/sharer.php?u=https%3A%2F%2Fhardware.slashdot.org%2Fstory%2F25%2F01%2F06%2F1830247%2Fintel-says-new-laptop-chips-will-extend-computer-battery-life%3Futm_source%3Dslashdot%26utm_medium%3Dfacebook\"><img src=\"https://a.fsdn.com/sd/facebook_icon_large.png\"></a>\n\n\n\n</div></p><p><a href=\"https://hardware.slashdot.org/story/25/01/06/1830247/intel-says-new-laptop-chips-will-extend-computer-battery-life?utm_source=rss1.0moreanon&amp;utm_medium=feed\">Read more of this story</a> at Slashdot.</p><iframe src=\"https://slashdot.org/slashdot-it.pl?op=discuss&amp;id=23570727&amp;smallembed=1\" style=\"height: 300px; width: 100%; border: none;\"></iframe>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Easy Audio Transcription With Whisper Over GraphQL","url":"https://hackernoon.com/easy-audio-transcription-with-whisper-over-graphql?source=rss","date":1736190997,"author":"Sophia Willows","unread":true,"content":"<p>So long, point-and-click. Generative AI is upending traditional UX and all kinds of new and exciting design patterns are emerging. The proliferation of LLMs has transformed the once-annoying <a href=\"https://hackernoon.com/openais-whisper-paving-the-way-for-the-voice-interface-revolution\">voice-based interface</a> into something that’s truly engaging and a bar-raiser for user connection to your app. <a href=\"https://sophiabits.com/blog/do-you-need-an-llm-for-that\">You don’t need an LLM for </a><em><a href=\"https://sophiabits.com/blog/do-you-need-an-llm-for-that\">everything</a></em>, but I <em>do</em> highly recommend them for voice assistants.</p>\n<p>\\\nBut even with great AI, audio is still hard. When building audio recording functionality on the frontend, you’ll quickly run into a few common challenges: capturing audio from the user, processing it for server-side use, and integrating that with a backend like GraphQL. In this post I’ll walk you through a simple approach to recording and sending audio for transcription using a combination of JavaScript's&nbsp;<code>MediaRecorder</code>&nbsp;API and OpenAI's Whisper model.</p>\n<p>\\\nThe method I’m showing here is not ideal for production-scale applications, but it <em>is</em> the quickest and most effective way to prototype audio features for your next MVP.</p>\n<h1 id=\"somedefinitions\">Some definitions</h1>\n<p>There are two key objects to understand when recording audio from a browser:</p>\n<ol>\n<li><p>A <strong>MediaStream</strong> represents a stream of media content coming from a device like a microphone, webcam, or remote content coming in over a network cable. It supports all kinds of media content in addition to plain audio, and is used to get real-time access to the underlying media.</p></li>\n<li><p>A <strong>MediaRecorder</strong> is responsible for actually capturing data from a <code>MediaStream</code>. A <code>MediaStream</code> on its own is good enough if all you need to do is transmit or display the media as it arrives, but in order to record media for later use--like sending it off to Whisper--you need to buffer the stream and save it to a file, which is what <code>MediaRecorder</code> does.</p>\n<p>\\</p></li>\n</ol>\n<p>Understanding these two objects and how they relate to each other is half the battle.</p>\n<p>\\</p>\n<h1 id=\"settingupafrontendforaudiorecording\">Setting up a frontend for audio recording</h1>\n<p>With our knowledge of the browser media APIs, we’re now ready to start writing some code. The first step is to get hold of a <code>MediaStream</code> that’s connected to a device that can record audio:</p>\n<pre><code class=\"typescript language-typescript\">// Obtain a reference ot a `MediaStream` which supports\n// audio capture. Calling this method will cause the\n// browser to ask for the user's consent for your app\n// to record audio.\n\nlet mediaStream: MediaStream;\ntry {\n  // Calling this method will cause the browser to ask for the user's consent to let your app record audio!\n  mediaStream = await navigator.mediaDevices.getUserMedia({\n    audio: true,\n  });\n} catch (error) {\n  // If the user declines to give consent, an exception is thrown.\n  alert('Cannot record without permission!');\n  return;\n}\n</code></pre>\n<p>\\\nWith a <code>MediaStream</code> in hand, it’s now possible to construct a <code>MediaRecorder</code> that will buffer the incoming audio content. <a href=\"https://hackernoon.com/wtf-is-a-codec\">Audio codecs are a bit tricky</a> here as OpenAI are picky about the formats their API will accept. The <code>MediaRecorder</code> class has a static method called <code>isTypeSupported</code> which tells me whether a given MIME type is supported by my user’s browser. Modern browsers should all support WebM which is a pretty good format, but it’s possible to check a few different MIME types and settle on the first one that’s supported by the user’s browser:</p>\n<pre><code class=\"javascript language-javascript\">// Find a MIME type supported by the user's browser\nconst mimeType = ['audio/webm', 'audio/mpeg', 'audio/wav'].find((it) =&gt; MediaRecorder.isTypeSupported(it));\nif (!mimeType) {\n  alert('Your browser does not support a suitable recording format.');\n  return;\n}\n\n// Create a `MediaRecorder` that's attached to the `MediaStream` we just obtained.\n// Record in the codec we just found.\nconst recorder = new MediaRecorder(mediaStream, {\n  mimeType,\n});\n</code></pre>\n<p>\\\nThe <code>MediaRecorder</code> won’t do anything until it’s told to start recording, and even when it <em>is</em> told to start recording we won’t be able to get anything out of it. Like many other browser APIs, <code>MediaRecorder</code> is event-based. Specifically, it will emit an event called <code>dataavailable</code> whenever it finishes recording a chunk of audio.</p>\n<p>\\\nThe audio chunk is sent to the event handler as a <code>Blob</code> instance--a bunch of arbitrary binary data--which cannot be natively sent to a GraphQL backend. Fortunately, it’s possible to convert this data into a more usable format like a <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URLs\">data URL</a>.</p>\n<p>\\\nData URLs are just strings, which means they can <em>easily</em> be sent to a GraphQL backend as an input argument. This is great for prototyping, but bear in mind they’re not the most appropriate solution for a production use case. Converting the binary blob into a data URL expands its size by about 33% which increases the amount of data transferred quite significantly.</p>\n<p>\\\nThe general format of a data URL looks like this:</p>\n<pre><code>data:[&lt;mediatype&gt;][;base64],&lt;data&gt;\n</code></pre>\n<p>\\\nAnd here is an excerpt of a webm audio clip I recorded while writing this post:</p>\n<pre><code>data:audio/webm;codecs=opus;base64,GkXfo59Ch...\n</code></pre>\n<p>\\\nIt’s important to note that <strong>data URLs cannot be directly passed to OpenAI for transcription</strong>. After the server receives the data URL, it’s necessary to parse it <em>back</em> to a binary format that OpenAI’s API <em>does</em> recognize. More on that later.</p>\n<p>\\\nHere’s the last bit of frontend code needed:</p>\n<pre><code class=\"typescript language-typescript\">// This function takes a blob of audio data and turns it to a data URL\nfunction dataUrlFromBlob(\n  blob: Blob,\n): Promise&lt;string&gt; {\n  return new Promise((resolve, reject) =&gt; {\n    const reader = new FileReader();\n    reader.onabort = reject;\n    reader.onerror = reject;\n    reader.onload = () =&gt;\n      resolve(reader.result as string);\n\n    reader.readAsDataURL(blob);\n  });\n}\n\n// Add an event handler to process audio chunks as they come in\nrecorder.ondataavailable = async (event) =&gt; {\n  // We can't send raw binary to our GraphQL server,\n  // so we encode the audio as a data URL.\n  const dataUrl = await dataUrlFromBlob(event.data);\n  await sendAudioToGraphQL({\n    input: { dataUrl },\n  });\n};\n\n// Start recording!\nrecorder.start();\n</code></pre>\n<p>\\\nThe <code>MediaRecorder</code>’s <code>start</code> method also takes an optional <code>timeslice</code> parameter. If you don’t provide it--like me--then the <code>MediaRecorder</code> will keep buffering audio until its <code>stop</code> method is called, and then the event handler will receive the <em>entire</em> batch of audio in one go. This isn’t always desirable, so <code>timeslice</code> can be used to tell the <code>MediaRecorder</code> to record in smaller chunks and send them to the <code>dataavailable</code> handler as they come in. A <code>timeslice</code> of <code>2000</code> means the event handler will receive an audio chunk for every 2 seconds of recording--great for if you want to show the user a transcript of what they’re saying in real-time!</p>\n<p>\\</p>\n<h1 id=\"parsingdataurlsonthebackend\">Parsing data URLs on the backend</h1>\n<p>Of course, the most robust solution to parsing data URLs is to pull in an off-the-shelf library such as <code>data-urls</code>. This isn’t as fun or efficient as rolling your own, however, so we’re going to write our own. Data URLs in general can come in a variety of different formats, but for our purposes they only come in one simple format that’s easy enough to handle.</p>\n<p>\\\nRolling our own saves a lot of code from the final application. The <code>data-urls</code> library is <a href=\"https://bundlephobia.com/package/data-urls@5.0.0\">~260.1 kB after minification</a>, which is a decent amount of additional heft in a serverless context. Bundle size matters a lot for <a href=\"https://hackernoon.com/how-to-make-your-lambda-functions-run-faster-and-cheaper-gp2034jl\">cold start time</a>.</p>\n<p>\\\nIn fact if your use case is <em>purely</em> to do transcription of the audio and you don’t care about retaining the data for future use, all you <em>really</em> need is the stuff after the <code>base64,</code> separator. OpenAI’s audio APIs are smart enough to automatically infer the content type of any audio data you send—so it’s <em>theoretically</em> possible to completely ignore the media type portion of the data URL.</p>\n<p>\\\nIn practice you generally <em>do</em> want to store a copy of the raw data somewhere, which requires knowledge of the content type. Unlike OpenAI, object stores like S3 are generally <em>not</em> intelligent enough to infer the MIME type of your uploaded objects.</p>\n<p>\\\nThe code for parsing data URLs looks like this:</p>\n<pre><code class=\"typescript language-typescript\">import { toFile } from 'openai';\nimport type { FileLike } from 'openai/uploads';\n\nasync function parseAudioDataUrl(\n  dataUrl: string,\n): Promise&lt;FileLike&gt; {\n  const [header, base64String] = dataUrl.split('base64,');\n\n  const mimeType = header.split(':')[1].split(',')[0];\n  const buffer = Buffer.from(base64String, 'base64');\n  const file = await toFile(buffer, 'audio.webm', {\n    type: mimeType,\n  });\n\n  return file;\n}\n</code></pre>\n<p>\\\nNote that I’ve passed a hardcoded <code>audio.webm</code> value as the name of my file. Mapping the <code>mimeType</code> to the correct file extension, but it’s unnecessary because OpenAI will infer the type of the file anyway. It’s even possible to skip passing the <code>type</code> option—I’m just doing it so that later on I can access <code>file.type</code> when uploading the audio to S3. The only requirement here is that you parse out the base64 string correctly and load it into a <code>Buffer</code>, and that the name you pass to <code>toFile</code> ends with an extension that the OpenAI client is amenable to.</p>\n<p>\\\nCalling <code>toFile</code> with a file name that’s missing an extension, or has an extension the client doesn’t like will yield the following error message:</p>\n<pre><code>Invalid file format. Supported formats: ['flac', 'm4a', 'mp3', 'mp4', 'mpeg', 'mpga', 'oga', 'ogg', 'wav', 'webm']\n</code></pre>\n<p>\\</p>\n<h1 id=\"puttingitalltogether\">Putting it all together</h1>\n<p>With this helper function in hand, it’s now possible to parse the incoming data URL and transcribe it. Here’s an example <a href=\"https://pothos-graphql.dev/\">Pothos</a> resolver which does exactly that:</p>\n<pre><code class=\"typescript language-typescript\">builder.mutationField('audioFragmentSubmit', (t) =&gt;\n  t.field({\n    type: AudioFragment,\n    nullable: false,\n    args: {\n      input: t.arg({\n        type: AudioFragmentSubmitInput,\n        required: true,\n      }),\n    },\n    resolve: async (_, args, ctx) =&gt; {\n      const file = await parseAudioDataUrl(args.input.dataUrl);\n      const t = await ctx.openai.audio.transcriptions.create({\n        file,\n        language: 'en',\n        model: 'whisper-1',\n      });\n\n      return {\n          // ...\n          transcript: t.text,\n        };\n    },\n  }),\n);\n</code></pre>\n<p>\\\nThis solution is not appropriate for production environments, but it’ll get you off the ground without needing to spin up any additional infrastructure or dealing with any external resources. <a href=\"https://hackernoon.com/a-fast-and-easy-example-showing-how-to-use-aws-nodejs-sdk-v3-for-signed-urls\">Uploading audio straight to object storage</a> from the frontend is a much more scalable solution once you’ve shipped and won some customers.</p>\n<p>\\\nBut for simple MVPs—it doesn’t get much easier than this.</p>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"DisplayPort 2.1b Arriving This Spring With DP80LL Cables","url":"https://www.phoronix.com/news/DisplayPort-2.1b-Coming","date":1736190749,"author":"Michael Larabel","unread":true,"content":"In addition to the HDMI Forum announcing the HDMI 2.2 specification for release in the first half of this year, VESA also took to CES 2025 to announce their forthcoming DisplayPort 2.1b standard...","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"35 Product Management Books You’ll Actually Learn From","url":"https://hackernoon.com/35-product-management-books-youll-actually-learn-from?source=rss","date":1736190003,"author":"James Effarah","unread":true,"content":"<h2 id=\"tldr\">TL;DR</h2>\n<p>I have a photographic memory and have read over 50 product management and business books in 2024.</p>\n<p>\\\nHere’s a list of my favorite.</p>\n<hr />\n<p><em>So basically, I hate all these generic <strong>“best of” product management</strong> lists because we all KNOW the writer hadn’t actually read them AND/OR isn’t a product manager.</em></p>\n<p>\\\n<em>These lists always feel generic, as if it is the same 10 books recommended but in different orders.</em></p>\n<p>\\\n<em>Well, yes, I will have some of those same product management books in here because, yeah, they actually are good, but</em> <em>I also have some great books that I bet you hadn’t considered.</em></p>\n<p>\\\n<em>This is basically a curated list from my personal Kindle library, so, you’re welcome.</em></p>\n<h2 id=\"bestproductmanagementbooks2024\">Best Product Management Books (2024)</h2>\n<p>2024 has been a banner year for groundbreaking product management literature. These books, hot off the press (2023 or later), tackle emerging product trends, provide actionable frameworks, and inspire fresh ways of thinking. Whether you’re reimagining your leadership style or scaling product operations, these titles will help you level up.</p>\n<h3 id=\"1transformedmovingtotheproductoperatingmodel\">1. Transformed: Moving to the Product Operating Model</h3>\n<p><em>By Silicon Valley Product Group</em></p>\n<p><img src=\"https://cdn.hackernoon.com/images/OU582BtFnvdXLAg1E9gbjnbmEEx1-qn335hu.jpeg\" alt=\"\" /></p>\n<p>\\\n<em>Transformed</em> dives deep into the transition to a product-centric operating model. Drawing from years of industry experience, the authors unpack the strategies and challenges of adopting this game-changing approach (<em>Trust me, it’s good, and this is coming from someone who completely disagrees with Marty Cagan’s product philosophies</em>).</p>\n<p>\\</p>\n<ul>\n<li>Practical steps for moving away from project-based thinking.</li>\n<li>Stories from companies that successfully transitioned to a product operating model.</li>\n<li>Tools and frameworks for implementing product operations at scale.</li>\n</ul>\n<p>\\</p>\n<p>:::tip</p>\n<ul>\n<li><a href=\"https://www.svpg.com/team/marty-cagan/\">Support Marty Cagan</a></li>\n<li><a href=\"https://open.spotify.com/show/0IWx0D5suvn2zATdeCqYOj?si=5c5a0dd6db9b493e\">Listen on Spotify</a></li>\n</ul>\n<p>:::</p>\n<h3 id=\"2evidenceguidedcreatinghighimpactproductsinthefaceofuncertainty\">2. Evidence-Guided: Creating High Impact Products in the Face of Uncertainty</h3>\n<p><em>By Itamar Gilad</em></p>\n<p><img src=\"https://cdn.hackernoon.com/images/OU582BtFnvdXLAg1E9gbjnbmEEx1-h05355y.jpeg\" alt=\"\" /></p>\n<p>\\\nThis book is a guide to making bold product decisions when the stakes are high, using evidence and data to reduce risk.</p>\n<p>\\</p>\n<ul>\n<li>Frameworks for navigating uncertainty with confidence.</li>\n<li>Insights into leveraging customer feedback to drive innovation.</li>\n<li>Case studies of successful data-driven product launches.</li>\n</ul>\n<p>:::tip</p>\n<ul>\n<li><a href=\"https://itamargilad.com/\">Support Iatmar Gilad</a></li>\n</ul>\n<p>:::</p>\n<h3 id=\"3elonmusk\">3. Elon Musk</h3>\n<p><em>By Walter Isaacson</em></p>\n<p><img src=\"https://cdn.hackernoon.com/images/OU582BtFnvdXLAg1E9gbjnbmEEx1-yl6359i.jpeg\" alt=\"\" /></p>\n<p>\\\nThis biography of Elon Musk delves into the mind of one of the most innovative product thinkers of our time. Musk’s first principles approach to building visionary products offers profound lessons for PMs.</p>\n<p>\\</p>\n<ul>\n<li><p>Deep insights into Musk’s iterative design philosophy (<em>how the hell do you iterate hardware?</em>).</p></li>\n<li><p>Lessons from Tesla, SpaceX, and Twitter on relentless product innovation.</p></li>\n<li><p>Behind-the-scenes stories of how Musk inspires teams to achieve the impossible.</p>\n<p>\\</p></li>\n</ul>\n<p>:::tip</p>\n<ul>\n<li><a href=\"https://open.spotify.com/show/4EkVuhbvmrXCMnC6h0XRF4?si=8052f280835d4202\">Listen on Spotify</a></li>\n</ul>\n<p>:::</p>\n<h3 id=\"4theproductmomentumgap\">4. The Product Momentum Gap</h3>\n<p><em>By Dave Martin and Andrea Saez</em></p>\n<p><img src=\"https://cdn.hackernoon.com/images/OU582BtFnvdXLAg1E9gbjnbmEEx1-il735w1.jpeg\" alt=\"\" /></p>\n<p>\\\n<em>The Product Momentum Gap</em> addresses the pitfalls that cause products to lose their edge. It provides actionable advice to keep your products innovative and competitive.</p>\n<p>\\</p>\n<ul>\n<li>Strategies for bridging the gap between product strategy and execution.</li>\n<li>Techniques to maintain momentum throughout a product’s lifecycle.</li>\n<li>Frameworks for adapting to shifting market conditions.</li>\n</ul>\n<p>\\</p>\n<p>:::tip</p>\n<ul>\n<li><a href=\"https://open.spotify.com/show/7hIAirraQvBOyhYLrT5k8P?si=288ae8b25ab940e2\">Listen on Spotify</a></li>\n<li><a href=\"https://www.dreasaez.com/\">Support Dr. Andrea Saez</a></li>\n</ul>\n<p>:::</p>\n<h3 id=\"5productoperationshowsuccessfulcompaniesbuildbetterproductsatscale\">5. Product Operations: How Successful Companies Build Better Products at Scale</h3>\n<p><em>By Melissa Perri</em></p>\n<p><img src=\"https://cdn.hackernoon.com/images/OU582BtFnvdXLAg1E9gbjnbmEEx1-ie9357a.jpeg\" alt=\"\" /></p>\n<p>\\\nMelissa Perri explains the critical role of product operations in scaling a successful product organization.</p>\n<p>\\</p>\n<ul>\n<li>Practical advice for setting up a product ops function.</li>\n<li>Tools for optimizing processes, communication, and data flow.</li>\n<li>Real-world examples from companies that nailed product ops.</li>\n</ul>\n<p>\\</p>\n<p>:::tip</p>\n<ul>\n<li><a href=\"https://open.spotify.com/episode/7J24420puF4hqjQGRBksyo?si=5b2e006c481348d1\">Listen to Melissa Perri on Lenny’s Podcast</a></li>\n<li><a href=\"https://melissaperri.com/\">Support Melissa Perri</a></li>\n</ul>\n<p>:::</p>\n<h3 id=\"6theleadersjourneytransformingyourleadershiptoachievetheextraordinary\">6. The Leader’s Journey: Transforming Your Leadership to Achieve the Extraordinary</h3>\n<p><em>By Donna Lichaw</em></p>\n<p><img src=\"https://cdn.hackernoon.com/images/OU582BtFnvdXLAg1E9gbjnbmEEx1-jza35s0.jpeg\" alt=\"\" /></p>\n<p>\\\nDonna Lichaw combines storytelling with leadership transformation in this powerful book for PMs aspiring to lead with impact.</p>\n<p>\\</p>\n<ul>\n<li>Insights into using storytelling to inspire and guide teams.</li>\n<li>Techniques to overcome leadership challenges and inspire change.</li>\n<li>Exercises for developing a leadership style tailored to your strengths.</li>\n</ul>\n<p>\\</p>\n<p>:::tip</p>\n<ul>\n<li><a href=\"https://open.spotify.com/episode/1zB4P6Gzj1z34cbi3KbeYG?si=d74edd4e428d4b83\">Listen to Donna Lichaw on Lenny’s Podcast</a></li>\n<li><a href=\"https://www.donnalichaw.com/\">Support Donna Lichaw</a></li>\n</ul>\n<p>:::</p>\n<h3 id=\"7fartherfasterandfarlessdramahowtoreducestressandmakeextraordinaryprogresswhereveryoulead\">7. Farther, Faster, and Far Less Drama: How to Reduce Stress and Make Extraordinary Progress Wherever You Lead</h3>\n<p><em>By Janice Fraser and Jason Fraser</em></p>\n<p><img src=\"https://cdn.hackernoon.com/images/OU582BtFnvdXLAg1E9gbjnbmEEx1-yrb354l.jpeg\" alt=\"\" /></p>\n<p>\\\nThis book offers pragmatic advice for leaders who want to achieve ambitious goals without burnout.</p>\n<p>\\</p>\n<ul>\n<li>Frameworks for making steady progress under pressure.</li>\n<li>Methods for reducing stress and increasing focus in teams.</li>\n<li>Lessons on building resilience and adaptability in leadership.</li>\n</ul>\n<p>\\</p>\n<p>:::tip</p>\n<ul>\n<li><a href=\"https://janicefraser.com/farther-faster-book\">Support Janice & Jason Fraser</a></li>\n<li><a href=\"https://open.spotify.com/episode/0enDJtNqHuilrnx7iQLqol?si=mNF6kBmbTSCMUINoE2Vniw\">Listen to Jason Fraser on Product Coffee Podcast</a></li>\n</ul>\n<p>:::</p>\n<h2 id=\"top10bestproductmanagementbooks\">Top 10 Best Product Management Books</h2>\n<h3 id=\"1productmanagementinpractice\">1. Product Management in Practice</h3>\n<p><em>By Matt LeMay</em></p>\n<p><img src=\"https://cdn.hackernoon.com/images/OU582BtFnvdXLAg1E9gbjnbmEEx1-wgc353f.jpeg\" alt=\"\" /></p>\n<p>\\\nThis isn’t just a book—it’s like sitting down with a no-BS product manager who’s been in the trenches. Forget abstract frameworks; this book is pure PM survival skills.</p>\n<p>\\</p>\n<ul>\n<li><p>“Saying ‘I’m too busy’ is the fastest way to lose your team’s trust.”</p></li>\n<li><p>Packed with real-world advice, like how to communicate through “back channels” and avoid failures that don’t need to happen.</p></li>\n<li><p>If you only read one chapter, make it the one that mentions the legal department rejecting a product for a <em>stupidly simple reason</em> that was fixed with a 5-minute conversation.</p>\n<p>\\</p></li>\n</ul>\n<p>:::tip</p>\n<ul>\n<li><a href=\"https://mattlemay.com/\">Support Matt LeMay</a></li>\n<li><a href=\"https://open.spotify.com/episode/2YjahLJVpGSmRjEr7p0WWh?si=2ce89f8e5bbb4b6e\">Listen to Matt LeMay on Product Coffee Podcast</a></li>\n<li><a href=\"https://open.spotify.com/show/3EYiaEcvNWbwxROHnGoh9G?si=a7199475493747a3\">Listen on Spotify</a></li>\n</ul>\n<p>:::</p>\n<h3 id=\"2thinkinginsystems\">2. Thinking in Systems</h3>\n<p><em>By Donella H. Meadows</em></p>\n<p><img src=\"https://cdn.hackernoon.com/images/OU582BtFnvdXLAg1E9gbjnbmEEx1-y7d35kt.png\" alt=\"\" /></p>\n<p>\\\nThis book rewires your brain. Once you read it, you’ll stop seeing products (and the world) as standalone ideas and start seeing them as parts of interconnected systems.</p>\n<p>\\</p>\n<ul>\n<li>It’s not just about products; you’ll find yourself thinking about <em>how cities are really just beehives for humans.</em></li>\n<li>Systems thinking is foundational for tackling big-picture PM challenges.</li>\n<li>You’ll be the person in meetings who can say, “Actually, this is the result of a feedback loop” and sound <em>dangerously intelligent</em>.</li>\n</ul>\n<p>\\</p>\n<p>:::tip</p>\n<ul>\n<li><a href=\"https://donellameadows.org/\">Support the late Donella Meadows’ legacy</a></li>\n<li><a href=\"https://open.spotify.com/show/0mNlCYF84KUGBE07UlueLO?si=055d0b6ad70f42a4\">Listen on Spotify</a></li>\n</ul>\n<p>:::</p>\n<h3 id=\"3samwaltonmadeinamerica\">3. Sam Walton: Made in America</h3>\n<p><em>By Sam Walton</em></p>\n<p><img src=\"https://cdn.hackernoon.com/images/OU582BtFnvdXLAg1E9gbjnbmEEx1-s8e35us.jpeg\" alt=\"\" /></p>\n<p>\\\nNot a traditional PM book, but this autobiography is basically a masterclass in MVPs, customer obsession, and scalability.</p>\n<p>\\</p>\n<ul>\n<li>Walmart’s early strategy was <em>“stack it high, sell it cheap”</em>—the MVP before MVPs were cool.</li>\n<li>It’s a roadmap for PMs looking to balance scrappiness with vision.</li>\n<li>If you ever feel lost, just remember Walmart started in a small town selling hula hoops.</li>\n</ul>\n<p>\\</p>\n<p>:::tip</p>\n<ul>\n<li>The Walton family probably doesn’t need your support, but you can <a href=\"https://open.spotify.com/show/7x2KvPRmkE8S9WYNaSAVxR?si=949749b379094ae8\">listen to the audiobook on Spotify</a>.</li>\n</ul>\n<p>:::</p>\n<h3 id=\"4wiredforstory\">4. Wired for Story</h3>\n<p><em>By Lisa Cron</em></p>\n<p><img src=\"https://cdn.hackernoon.com/images/OU582BtFnvdXLAg1E9gbjnbmEEx1-ruf358m.jpeg\" alt=\"\" /></p>\n<p>\\\nThe PM job is storytelling—whether you’re convincing stakeholders or crafting customer journeys. This book teaches you how to hack the human brain’s addiction to stories.</p>\n<p>\\</p>\n<ul>\n<li>People will ignore your Jira ticket, but if you wrap it in a story, they’ll <em>sprint</em> to get it done.</li>\n<li>It transforms how you frame your communication, making you unforgettable.</li>\n<li>Start meetings with, “You’ll never believe what I found in the breakroom…” and watch stakeholders actually <em>pay attention</em>.</li>\n</ul>\n<p>\\</p>\n<p>:::tip</p>\n<ul>\n<li><a href=\"http://wiredforstory.com/\">Support Lisa Cron</a></li>\n<li><a href=\"https://open.spotify.com/show/1iPZwTPOUqs7Dyz1Yvi4uT?si=3d08081b979c45e4\">Listen on Spotify</a></li>\n</ul>\n<p>:::</p>\n<h3 id=\"5crossingthechasm\">5. Crossing the Chasm</h3>\n<p>By Geoffrey A. Moore</p>\n<p><img src=\"https://cdn.hackernoon.com/images/OU582BtFnvdXLAg1E9gbjnbmEEx1-vpg35hm.jpeg\" alt=\"\" /></p>\n<p>\\\nThis is your guide to getting products out of the hands of early adopters and into the mainstream.</p>\n<p>\\</p>\n<ul>\n<li>The “chasm” is basically the awkward teenage phase of a product’s life.</li>\n<li>Every product faces the adoption gap, and this book gives you the tools to bridge it.</li>\n<li>You’ll finally understand why your mom still hasn’t downloaded your app (<em>which is crazy because you have an app only a mother would love</em>).</li>\n</ul>\n<p>\\</p>\n<p>:::tip</p>\n<ul>\n<li><a href=\"https://geoffreyamoore.com/\">Support Geoffrey A. Moore</a></li>\n<li><a href=\"https://open.spotify.com/show/6cRJbwKizSYJCJDZmK10Zl?si=5e504cfbdf8041fe\">Listen on Spotify</a></li>\n</ul>\n<p>:::</p>\n<h3 id=\"6inspiredhowtocreateproductscustomerslove\">6. Inspired: How to Create Products Customers Love</h3>\n<p><em>By Marty Cagan</em></p>\n<p><img src=\"https://cdn.hackernoon.com/images/OU582BtFnvdXLAg1E9gbjnbmEEx1-dhh3515.jpeg\" alt=\"\" /></p>\n<p>\\\n<em>SIGH</em>—The PM bible. I hate this theory trap of a book, but it’s important… I guess… Cagan lays down the fundamentals of product creation and leadership with unmatched clarity.</p>\n<p>\\</p>\n<ul>\n<li>Stop shipping junk. Seriously, read the chapter about testing ideas before wasting dev time.</li>\n<li>It’s the go-to playbook for building customer-centric products (<em>in theory…</em>)</li>\n<li>Cagan will make you feel guilty for every unvalidated feature you’ve ever shipped—because you’re supposed to live in an ideal PM world apparently.</li>\n</ul>\n<p>\\</p>\n<p>:::tip</p>\n<ul>\n<li><a href=\"https://www.svpg.com/team/marty-cagan/\">Support Marty Cagan (again)</a></li>\n</ul>\n<p>:::</p>\n<h3 id=\"7empoweredordinarypeopleextraordinaryproducts\">7. Empowered: Ordinary People, Extraordinary Products</h3>\n<p><em>By Marty Cagan and Chris Jones</em></p>\n<p><img src=\"https://cdn.hackernoon.com/images/OU582BtFnvdXLAg1E9gbjnbmEEx1-jm435yk.jpeg\" alt=\"\" /></p>\n<p>\\\n<em>SIGH</em>—another one. Think of this as <em>Inspired’s</em> sequel, but for leaders. It’s about empowering your teams to do great work (<em>in theory…).</em></p>\n<p>\\</p>\n<ul>\n<li>Your job isn’t to tell your team what to do—it’s to <em>ask the right questions</em>.</li>\n<li>Leadership lessons are evergreen, and this book teaches you how to lead without micromanaging.</li>\n<li>If your team isn’t “empowered,” you’re just playing whack-a-mole with their morale.</li>\n</ul>\n<p>:::tip</p>\n<ul>\n<li><a href=\"https://www.svpg.com/team/marty-cagan/\">Support Marty Cagan (I swear this is the last time)</a></li>\n</ul>\n<p>:::</p>\n<h3 id=\"8hookedhowtobuildhabitformingproducts\">8. Hooked: How to Build Habit-Forming Products</h3>\n<p><em>By Nir Eyal</em></p>\n<p><img src=\"https://cdn.hackernoon.com/images/OU582BtFnvdXLAg1E9gbjnbmEEx1-l6i35tw.png\" alt=\"\" /></p>\n<p>\\\nThis book explores the psychology behind why we can’t put our phones down. Perfect for PMs in the B2C space (<em>bonus points if you can make an addictive B2B app</em>).</p>\n<p>\\</p>\n<ul>\n<li>The “trigger-action-reward-investment” loop is basically why people binge TikTok.</li>\n<li>Understanding user behavior never goes out of style.</li>\n<li>Use this knowledge for good, not evil—unless you’re building a “guilty pleasure” app.</li>\n</ul>\n<p>\\</p>\n<p>:::tip</p>\n<ul>\n<li><a href=\"https://open.spotify.com/episode/41Z6Rt0d2NBnhQrbV75cMi?si=ift2-DFNTfKN0kv3et-Kbg\">Listen to Nir Eyal on Lenny’s Podcast</a></li>\n<li><a href=\"https://www.nirandfar.com/\">Support Nir Eyal</a></li>\n<li><a href=\"https://open.spotify.com/show/3p6GEO8MetDwINTd1ePocE?si=8edeac08ffc64921\">Listen on Spotify</a></li>\n</ul>\n<p>:::</p>\n<h3 id=\"9dontmakemethink\">9. Don’t Make Me Think</h3>\n<p><em>By Steve Krug</em></p>\n<p><img src=\"https://cdn.hackernoon.com/images/OU582BtFnvdXLAg1E9gbjnbmEEx1-b0j352e.jpeg\" alt=\"\" /></p>\n<p>\\\nThe ultimate UX guide, this book is all about simplicity and user-centric design.</p>\n<p>\\</p>\n<ul>\n<li>If your product makes users think, they’re already clicking away.</li>\n<li>Usability is everything, and this book teaches you how to nail it.</li>\n<li>Every PM should read this and ask themselves, “Am I making users work harder than they need to?”</li>\n</ul>\n<p>\\</p>\n<p>:::tip</p>\n<ul>\n<li>Be <em>Sensible</em> and <a href=\"https://sensible.com/\">support Steve Krug</a></li>\n</ul>\n<p>:::</p>\n<h3 id=\"10zerotoone\">10. Zero to One</h3>\n<p><em>By Peter Thiel</em></p>\n<p><img src=\"https://cdn.hackernoon.com/images/OU582BtFnvdXLAg1E9gbjnbmEEx1-cbk35lk.jpeg\" alt=\"\" /></p>\n<p>\\\nA thought-provoking book that challenges you to build unique, revolutionary products.</p>\n<p>\\</p>\n<ul>\n<li>“Competition is for losers” might be the most controversial (and useful) advice you’ll ever read.</li>\n<li>It inspires PMs to aim higher and think bigger.</li>\n<li>You’ll feel both inspired and slightly like you’re in a Bond villain’s lair while reading this.</li>\n</ul>\n<p>\\</p>\n<p>:::tip</p>\n<ul>\n<li>Sorry Peter, your book is great but no support for you, mate.</li>\n<li>BUT—you can support <em>me</em> by reading my 4 step framework to becoming a <a href=\"https://hackernoon.com/the-4-step-framework-can-help-you-go-from-pound0-to-pound1-million-arr-within-a-year\">0-to-1 product manager</a> 😉</li>\n</ul>\n<p>:::</p>\n<h2 id=\"bestproductmanagementbooksreddit\">Best Product Management Books (Reddit)</h2>\n<p>Lists like this are always an SEO ploy written by some 22 year old marketing intern at an overpriced digital marketing agency.</p>\n<p>\\\nThey’re not PMs, nor have they read any of these books.</p>\n<p>\\\nThat’s why, in addition to my curated list from my personal Kindle library, I will be supplementing this list with none other than the oracle itself.</p>\n<p>\\\nWhen it comes to no-BS recommendations, where else can PMs look other than the internet’s singular source of truth?</p>\n<p>\\\n<em>Reddit!</em></p>\n<p>\\\nThese are the books that <a href=\"https://hackernoon.com/10-steps-for-landing-a-job-at-a-startup-e490c98fe529\">r/ProductManagement</a> has been buzzing about—fresh, insightful, and full of actionable wisdom for today’s product challenges.</p>\n<h3 id=\"1productleadershiphowtopproductmanagerslaunchawesomeproductsandbuildsuccessfulteams\">1. Product Leadership: How Top Product Managers Launch Awesome Products and Build Successful Teams</h3>\n<p><em>By Richard Banfield, Martin Eriksson, and Nate Walkingshaw</em></p>\n<p><img src=\"https://cdn.hackernoon.com/images/OU582BtFnvdXLAg1E9gbjnbmEEx1-4zl35kf.jpeg\" alt=\"\" /></p>\n<p>\\\nRedditors rave about this book for its real-world take on what makes great product leaders. It’s part leadership handbook, part “how-to” for navigating team dynamics.</p>\n<p>\\</p>\n<ul>\n<li>Offers a mix of practical advice and interviews with top PMs to give you a well-rounded perspective.</li>\n<li>Focuses on the <em>people side</em> of product management—how to build, motivate, and lead teams effectively.</li>\n<li>If you’re struggling to balance strategy and execution, this book’s got your back.</li>\n</ul>\n<p>\\</p>\n<p>:::tip</p>\n<ul>\n<li><a href=\"https://www.richardbanfield.com/\">Support Richard Banfield</a></li>\n<li><a href=\"https://open.spotify.com/show/2ATXX9SmM2FwF6Z9MqgFRW?si=ebf215891b364547\">Listen on Spotify</a></li>\n</ul>\n<p>:::</p>\n<h3 id=\"2escapingthebuildtraphoweffectiveproductmanagementcreatesrealvalue\">2. Escaping the Build Trap: How Effective Product Management Creates Real Value</h3>\n<p><em>By Melissa Perri</em></p>\n<p><img src=\"https://cdn.hackernoon.com/images/OU582BtFnvdXLAg1E9gbjnbmEEx1-2em3561.jpeg\" alt=\"\" /></p>\n<p>\\\nThis one gets Reddit love for tackling one of the biggest PM traps: focusing on shipping features instead of creating value.</p>\n<p>\\</p>\n<ul>\n<li>Helps you identify if you’re stuck in the “build trap” and how to escape it with customer-focused strategies.</li>\n<li>Includes frameworks to shift from feature obsession to delivering true product impact.</li>\n<li>You’ll never look at your backlog the same way again.</li>\n</ul>\n<p>\\</p>\n<p>:::tip</p>\n<ul>\n<li><a href=\"https://open.spotify.com/episode/7J24420puF4hqjQGRBksyo?si=5b2e006c481348d1\">Listen to Melissa Perri on Lenny’s Podcast</a> (again)</li>\n<li><a href=\"https://melissaperri.com/\">Support Melissa Perri</a> (again)</li>\n</ul>\n<p>:::</p>\n<h3 id=\"3leanstartup\">3. Lean Startup</h3>\n<p><em>By Eric Reis</em></p>\n<p><img src=\"https://cdn.hackernoon.com/images/OU582BtFnvdXLAg1E9gbjnbmEEx1-xsn35x2.jpeg\" alt=\"\" /></p>\n<p>\\\nIf you’re looking for a detailed guide to applying lean principles, this book is Reddit-approved for its practical frameworks and clear examples.</p>\n<p>\\</p>\n<ul>\n<li>Breaks down the process of defining, testing, and iterating MVPs in a way that’s easy to follow.</li>\n<li>Packed with charts, diagrams, and actionable templates.</li>\n<li>Guaranteed to make you an iteration and experimentation mastermind.</li>\n</ul>\n<p>\\</p>\n<p>:::tip</p>\n<ul>\n<li><a href=\"https://open.spotify.com/episode/5HL7JCO45D6RKC7HMi80zt?si=sXG0sDFzSR6oi-aR7K0n4Q\">Listen to Eric Reis in one of the best episodes of Lenny’s Podcast</a></li>\n</ul>\n<p>:::</p>\n<h3 id=\"4productroadmapsrelaunchedhowtosetdirectionwhileembracinguncertainty\">4. Product Roadmaps Relaunched: How to Set Direction while Embracing Uncertainty</h3>\n<p><em>By C. Todd Lombardo, Bruce McCarthy, Evan Ryan, and Michael Connors</em></p>\n<p><img src=\"https://cdn.hackernoon.com/images/OU582BtFnvdXLAg1E9gbjnbmEEx1-z1o35os.jpeg\" alt=\"\" /></p>\n<p>\\\nRoadmaps can be a PM’s best friend—or worst enemy. Redditors love this book for its modern, flexible take on roadmap creation.</p>\n<p>\\</p>\n<ul>\n<li>Teaches you how to build roadmaps that are collaborative, adaptable, and actually useful.</li>\n<li>Includes tips for communicating roadmaps to stakeholders without creating chaos.</li>\n<li>A lifesaver if you’ve ever been stuck explaining why “we can’t promise this feature by next Tuesday.”</li>\n</ul>\n<p>\\</p>\n<p>:::tip</p>\n<ul>\n<li><a href=\"https://ctodd.com/\">Support Todd Lombardo</a></li>\n<li><a href=\"https://open.spotify.com/show/5ydJrjNXesoqgrCxNGEjWr?si=b46e99b4feca40a0\">Listen on Spotify</a></li>\n</ul>\n<p>:::</p>\n<h3 id=\"5themakingofamanagerwhattodowheneveryonelookstoyou\">5. The Making of a Manager: What to Do When Everyone Looks to You</h3>\n<p><em>By Julie Zhuo</em></p>\n<p><img src=\"https://cdn.hackernoon.com/images/OU582BtFnvdXLAg1E9gbjnbmEEx1-6qp35wt.jpeg\" alt=\"\" /></p>\n<p>\\\nJulie Zhuo’s candid and relatable guide to stepping into leadership is a Reddit favorite, especially for new managers.</p>\n<p>\\</p>\n<ul>\n<li>Perfect for PMs transitioning into leadership roles or managing cross-functional teams.</li>\n<li>Packed with advice on giving feedback, setting team goals, and staying sane as a manager.</li>\n<li>You’ll finish this book feeling like Julie’s been your mentor all along.</li>\n</ul>\n<p>\\</p>\n<p>:::tip</p>\n<ul>\n<li><a href=\"https://www.juliezhuo.com/\">Support Julie Zhuo</a></li>\n<li><a href=\"https://open.spotify.com/show/4KowaGmiwcnkckVAcyyA8w?si=733986afbd724468\">Listen on Spotify</a></li>\n</ul>\n<p>:::</p>\n<h2 id=\"forproductmanagementinterviews\">For Product Management Interviews</h2>\n<p>The pressure of a product management interview is enough to make anyone sweat—luckily, the right books can prepare you to crush it. These aren’t just theory-filled tomes (<em>*cough* Marty Cagan *cough*</em>). They're packed with real examples to help you stand out. If you’re gearing up for that dream PM role, this list is your secret weapon.</p>\n<h3 id=\"1crackingthepminterview\">1. Cracking the PM Interview</h3>\n<p><em>By Gayle Laakmann McDowell and Jackie Bavaro</em></p>\n<p><img src=\"https://cdn.hackernoon.com/images/OU582BtFnvdXLAg1E9gbjnbmEEx1-l3q35mb.jpeg\" alt=\"\" /></p>\n<p>\\\nThe holy grail for PM interview prep, this book has been a go-to for years and continues to hold its ground.</p>\n<p>\\</p>\n<ul>\n<li>Covers everything from behavioral questions to technical problem-solving.</li>\n<li>Includes frameworks for crafting answers that showcase your product sense and strategy.</li>\n<li>Bonus: The section on breaking into PM from non-traditional backgrounds is gold.</li>\n</ul>\n<p>:::tip</p>\n<ul>\n<li><a href=\"https://www.gayle.com/\">Support Gayle Laakmann McDowell</a></li>\n</ul>\n<p>:::</p>\n<h3 id=\"2decodeandconquer\">2. Decode and Conquer</h3>\n<p><em>By Lewis C. Lin</em></p>\n<p><img src=\"https://cdn.hackernoon.com/images/OU582BtFnvdXLAg1E9gbjnbmEEx1-rrr359f.jpeg\" alt=\"\" /></p>\n<p>\\\nThis book goes beyond the basics, diving into the nitty-gritty of how to tackle the most challenging PM interview questions.</p>\n<p>\\</p>\n<ul>\n<li>Features sample answers and breakdowns for questions like “Design a feature for LinkedIn.”</li>\n<li>Provides insights into what interviewers are <em>actually</em> looking for.</li>\n<li>You’ll leave feeling like a storytelling pro, ready to wow with your “tell me about a time” anecdotes.</li>\n</ul>\n<p>:::tip</p>\n<ul>\n<li><a href=\"https://www.lewis-lin.com/\">Support Lewis Lin</a></li>\n</ul>\n<p>:::</p>\n<h3 id=\"3theleanproductplaybook\">3. The Lean Product Playbook</h3>\n<p><em>By Dan Olsen</em></p>\n<p><img src=\"https://cdn.hackernoon.com/images/OU582BtFnvdXLAg1E9gbjnbmEEx1-i5s351b.png\" alt=\"\" /></p>\n<p>\\\nYes, it’s more than just an interview book, but the frameworks here are insanely useful for case studies and product strategy questions.</p>\n<p>\\</p>\n<ul>\n<li>Helps you articulate your approach to defining MVPs and solving customer pain points.</li>\n<li>Great for showing off your structured thinking during whiteboard exercises.</li>\n<li>Pro tip: Practice explaining the book’s frameworks as if you’re presenting to a stakeholder—it’s interview gold.</li>\n</ul>\n<p>\\</p>\n<p>:::tip</p>\n<ul>\n<li><a href=\"https://open.spotify.com/episode/21K1nniGU7tVS3acGWppcq?si=bn9A7bNEQ3-PAZ_epoHI2A\">Listen to Dan Olsen on the Product Podcast</a></li>\n<li><a href=\"https://open.spotify.com/show/4DzCNkJdj2WlB2peXskgGP?si=9e82fa57ca634e2a\">Listen on Spotify</a></li>\n</ul>\n<p>:::</p>\n<h3 id=\"4thinklikearocketscientist\">4. Think Like a Rocket Scientist</h3>\n<p><em>By Ozan Varol</em></p>\n<p><img src=\"https://cdn.hackernoon.com/images/OU582BtFnvdXLAg1E9gbjnbmEEx1-6pt3587.png\" alt=\"\" /></p>\n<p>\\\nNot a traditional PM book, but a killer resource for demonstrating creative problem-solving and critical thinking.</p>\n<p>\\</p>\n<ul>\n<li>Packed with unconventional strategies to approach big, ambiguous problems.</li>\n<li>Helps you shine in hypothetical interview scenarios or “moonshot” product questions.</li>\n<li>You’ll learn how to channel your inner Elon (without being, you know, <em>too</em> Musky).</li>\n</ul>\n<p>:::tip</p>\n<ul>\n<li><a href=\"https://open.spotify.com/episode/5uoNvrK2avvydDVOtWFIXH?si=CLlK32lSTouceY9T18Mgjg\">Listen to Ozan Varol on the Jordan Harbinger Show</a></li>\n<li><a href=\"https://ozanvarol.com/about\">Support Ozan Varol</a></li>\n<li><a href=\"https://open.spotify.com/show/0k5aawMp2TTjG4BbBzzEWp?si=829dee9a51b643e5\">Listen on Spotify</a></li>\n</ul>\n<p>:::</p>\n<h3 id=\"5interviewingusers\">5. Interviewing Users</h3>\n<p><em>By Steve Portigal</em></p>\n<p><img src=\"https://cdn.hackernoon.com/images/OU582BtFnvdXLAg1E9gbjnbmEEx1-mcu35b2.jpeg\" alt=\"\" /></p>\n<p>\\\nA standout for roles that emphasize customer discovery or user research, this book sharpens your ability to discuss customer insights in interviews (trust me, they <em>will</em> ask you UX research questions, and you <em>will fail</em> them without this book—speaking from experience).</p>\n<p>\\</p>\n<ul>\n<li>Shows you how to frame questions and synthesize user feedback.</li>\n<li>Helps you turn anecdotal data into actionable insights—a skill PM interviewers love.</li>\n<li>If a panel asks, “How would you approach understanding customer needs?” This book has your answer.</li>\n</ul>\n<p>:::tip</p>\n<ul>\n<li><a href=\"https://open.spotify.com/episode/5lu85Gl2XPjMduUd6m89xo?si=WZZDF8neSHuUM6HSD8Y0xw\">Listen to Steve Portigal on the Design Better Podcast</a></li>\n<li><a href=\"https://portigal.com/\">Support Steve Portigal</a></li>\n<li><a href=\"https://open.spotify.com/show/0RWy2QZTt8jGDaL4ZTd0aI?si=733635384b964544\">Listen on Spotify</a></li>\n</ul>\n<p>:::</p>\n<h2 id=\"bestproductmanagementbooksforbeginners\">Best Product Management Books For Beginners</h2>\n<p>Starting out in product management SUCKS—new jargon, countless frameworks, and wondering why every product management role is so different, yet no one prepared you for any of it. These books cut through the noise Founder-Mode CEO sounds and give beginners the foundation they need to thrive.</p>\n<h3 id=\"1theproductbookhowtobecomeagreatproductmanager\">1. The Product Book: How to Become a Great Product Manager</h3>\n<p><em>By Josh Anon and Carlos González de Villaumbrosia</em></p>\n<p><img src=\"https://cdn.hackernoon.com/images/OU582BtFnvdXLAg1E9gbjnbmEEx1-52v35uh.png\" alt=\"\" /></p>\n<p>\\\nThis book is a comprehensive crash course for aspiring PMs. Written by two seasoned professionals, it covers everything from landing your first PM role to navigating the day-to-day challenges of the job.</p>\n<p>\\</p>\n<ul>\n<li>Includes actionable advice for acing PM interviews and transitioning into the role.</li>\n<li>Packed with practical frameworks for product strategy, execution, and iteration.</li>\n<li>Written in an approachable style, making it perfect for those starting from scratch.</li>\n</ul>\n<p>:::tip</p>\n<ul>\n<li>In addition to Product Management, <a href=\"https://www.joshanon.com/\">Josh Anon</a> is an exceptional wildlife photographer.</li>\n</ul>\n<p>:::</p>\n<h3 id=\"2theinfluentialproductmanager\">2. The Influential Product Manager</h3>\n<p><em>By Ken Sandy</em></p>\n<p><img src=\"https://cdn.hackernoon.com/images/OU582BtFnvdXLAg1E9gbjnbmEEx1-wtw359t.jpeg\" alt=\"\" /></p>\n<p>\\\nThis book focuses on the soft skills and organizational dynamics that every PM needs to master. It’s not just about building products—it’s about building trust and influence.</p>\n<p>\\</p>\n<ul>\n<li>Offers tools and techniques to navigate stakeholder relationships and drive alignment.</li>\n<li>Tailored advice for thriving in different company environments, from startups to large enterprises.</li>\n<li>A must-read for anyone looking to hone their leadership and communication skills as a beginner PM.</li>\n</ul>\n<p>:::tip</p>\n<ul>\n<li><a href=\"https://influentialpm.com/\">Support Ken Sandy</a></li>\n<li><a href=\"https://open.spotify.com/show/5ADVhEztb3NyiWw300nvcN?si=4074b96c17444f80\">Listen on Spotify</a></li>\n</ul>\n<p>:::</p>\n<h3 id=\"3pivottoproductmanager\">3. Pivot to Product Manager</h3>\n<p><em>By Irving Malcom</em></p>\n<p><img src=\"https://cdn.hackernoon.com/images/OU582BtFnvdXLAg1E9gbjnbmEEx1-7xx355u.jpeg\" alt=\"\" /></p>\n<p>\\\nDesigned specifically for career-changers, this book is a step-by-step guide to transitioning into product management.</p>\n<p>\\</p>\n<ul>\n<li>Covers everything from PM fundamentals to creating a standout portfolio.</li>\n<li>Includes interview preparation tips and practice questions tailored to entry-level roles.</li>\n<li>A great resource if you’re pivoting from a different career and need help navigating the shift.</li>\n</ul>\n<p>:::tip</p>\n<ul>\n<li><a href=\"https://irvingmalcolm.com/\">Support Irving Malcom</a></li>\n</ul>\n<p>:::</p>\n<h2 id=\"productleadershipbooks\">Product Leadership Books</h2>\n<p>For IC PMs stepping into leadership roles, these books offer powerful insights into motivating teams, fostering collaboration, and driving impactful outcomes. Whether you’re leading a product team or a cross-functional squad, these reads will equip you with the tools to inspire and excel.</p>\n<h3 id=\"1multipliershowthebestleadersmakeeveryonesmarter\">1. Multipliers: How the Best Leaders Make Everyone Smarter</h3>\n<p><em>By Liz Wiseman</em></p>\n<p><img src=\"https://cdn.hackernoon.com/images/OU582BtFnvdXLAg1E9gbjnbmEEx1-cyy352y.jpeg\" alt=\"\" /></p>\n<p>\\\nThis book reveals the transformative power of leaders who amplify the talents of those around them.</p>\n<p>\\</p>\n<ul>\n<li>Explains how to identify behaviors that either multiply or diminish team potential.</li>\n<li>Includes actionable strategies for becoming a Multiplier, from asking better questions to empowering decision-making.</li>\n<li>You’ll rethink your leadership style and learn to unlock the full potential of your team.</li>\n</ul>\n<p>:::tip</p>\n<ul>\n<li><a href=\"https://open.spotify.com/episode/3DUXemFbKXo1zTTxtI0nnJ?si=8kNmlDD1TX-n6_fuFAYnXw\">Listen to Liz Wiseman on the Dare to Lead with Berné Brown Podcast</a></li>\n<li><a href=\"https://open.spotify.com/show/66eb0o9MQSXgRSXapp7Wrf?si=0dbfaa8a42ab420b\">Listen on Spotify</a></li>\n</ul>\n<p>:::</p>\n<h3 id=\"2drivethesurprisingtruthaboutwhatmotivatesus\">2. Drive: The Surprising Truth About What Motivates Us</h3>\n<p><em>By Daniel H. Pink</em></p>\n<p><img src=\"https://cdn.hackernoon.com/images/OU582BtFnvdXLAg1E9gbjnbmEEx1-5pz35zt.jpeg\" alt=\"\" /></p>\n<p>\\\nPink explores the science of motivation, debunking myths about carrots and sticks in favor of autonomy, mastery, and purpose.</p>\n<p>\\</p>\n<ul>\n<li>Offers practical advice for creating an environment where teams feel intrinsically motivated.</li>\n<li>Discusses the importance of aligning work with personal values and goals.</li>\n<li>Perfect for PMs trying to inspire teams beyond simple metrics like deadlines and KPIs.</li>\n</ul>\n<p>:::tip</p>\n<ul>\n<li><a href=\"https://www.danpink.com/\">Support Daniel H. Pink</a></li>\n<li><a href=\"https://open.spotify.com/show/1NsyeDzzHLUX9YTQZqXhGn?si=54bbf1ea025f41dd\">Listen on Spotify</a></li>\n</ul>\n<p>:::</p>\n<h3 id=\"3theculturecode\">3. The Culture Code</h3>\n<p><em>By Daniel Coyle</em></p>\n<p><img src=\"https://cdn.hackernoon.com/images/OU582BtFnvdXLAg1E9gbjnbmEEx1-yh10356e.jpeg\" alt=\"\" /></p>\n<p>\\\nThis book uncovers the secrets of building strong, high-performing teams through connection and culture.</p>\n<p>\\</p>\n<ul>\n<li>Uses examples from teams like Pixar and the Navy SEALs to show how belonging drives success.</li>\n<li>Provides actionable steps to foster trust, vulnerability, and collaboration.</li>\n<li>Great for PMs looking to build a cohesive and resilient team culture.</li>\n</ul>\n<p>:::tip</p>\n<ul>\n<li><a href=\"https://danielcoyle.com/\">Support Daniel Coyle</a></li>\n<li><a href=\"https://open.spotify.com/show/2DiE4R1Qvs7LWQxZAdVoAH?si=452c870f7a08436b\">Listen on Spotify</a></li>\n</ul>\n<p>:::</p>\n<h3 id=\"4radicalproductthinkingthenewmindsetforinnovatingsmarter\">4. Radical Product Thinking: The New Mindset for Innovating Smarter</h3>\n<p><em>By Radhika Dutt</em></p>\n<p><img src=\"https://cdn.hackernoon.com/images/OU582BtFnvdXLAg1E9gbjnbmEEx1-u31135f9.jpeg\" alt=\"\" /></p>\n<p>\\\nThis book challenges leaders to move away from chasing short-term wins and focus on building vision-driven products.</p>\n<p>\\</p>\n<ul>\n<li>Introduces a step-by-step framework for crafting a strong product vision.</li>\n<li>Teaches leaders how to make tough prioritization decisions and avoid feature bloat.</li>\n<li>Ideal for PMs aiming to lead their teams with clarity and long-term purpose.</li>\n</ul>\n<p>:::tip</p>\n<ul>\n<li><a href=\"https://open.spotify.com/episode/7eZN90JKOpugfU12621i1G?si=iuhFqSPoSCGgHMjOFQD9dw\">Listen to Radhika Dutt on the Diary of a CLO Podcast</a></li>\n<li><a href=\"https://www.radicalproduct.com/about/\">Support Radhika Dutt</a></li>\n</ul>\n<p>:::</p>\n<h3 id=\"5extremeownershiphowusnavysealsleadandwin\">5. Extreme Ownership: How U.S. Navy SEALs Lead and Win</h3>\n<p><em>By Jocko Willink and Leif Babin</em></p>\n<p><img src=\"https://cdn.hackernoon.com/images/OU582BtFnvdXLAg1E9gbjnbmEEx1-p61235b8.jpeg\" alt=\"\" /></p>\n<p>\\\nWritten by two former Navy SEALs, this book applies military leadership principles to the business world.</p>\n<ul>\n<li>Emphasizes taking responsibility for every aspect of your team’s success.</li>\n<li>Explains how to balance competing priorities and maintain discipline under pressure.</li>\n</ul>\n<p>\\\nA must-read for PMs navigating high-stakes projects and complex team dynamics.</p>\n<p>:::tip</p>\n<ul>\n<li><a href=\"https://open.spotify.com/episode/1rFWYAIFQdipW2hgFcFobd?si=MLchZ4edRbKd5_s14CCkeA\">Listen to Jocko Willink on the Huberman Lab Podcast</a></li>\n<li><a href=\"https://open.spotify.com/show/4VFiiDr8KGhW2lU713lPkJ?si=42eddadc09d144da\">Listen on Spotify</a></li>\n</ul>\n<p>:::</p>\n<h2 id=\"bottomline\">Bottom Line</h2>\n<p>Product management isn’t about memorizing frameworks, reading self-congratulatory blogs, or pretending you’ve got it all figured out.</p>\n<p>\\\nIt’s about rolling up your sleeves, embracing the chaos, and maybe crying a little into your morning coffee before you get to work (We’ve all been there).</p>\n<p>\\\nThis list?</p>\n<p>\\\nIt’s not some SEO-fueled nonsense.</p>\n<p>\\\nThese books are here to actually help you—whether you’re trying to stop micromanaging your team into oblivion (<em>Multipliers</em>), escape the dreaded “build trap” (plot twist: <em>Radical Product Thinking has a lot to say about escaping “build traps” too</em>), or just figure out why Karen from design still hates your guts (<em>The Culture Code</em>).</p>\n<p>\\\nHere’s the kicker: no book is going to magically make you a great product manager.</p>\n<p>\\\nBut these will give you tools—real, practical ones—to cut through the BS, solve actual problems, and maybe even lead your team without looking like a total amateur.</p>\n<p>\\\nSo pick a book, get reading, and start building something that doesn’t suck.</p>\n<p>\\\nAnd if it still sucks, congrats—you’re officially a product manager now.</p>\n<p>\\\nK bye.</p>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Microsoft's Bing Deploys Google-Mimicking Interface To Retain Search Users","url":"https://it.slashdot.org/story/25/01/06/1848229/microsofts-bing-deploys-google-mimicking-interface-to-retain-search-users?utm_source=rss1.0mainlinkanon&utm_medium=feed","date":1736189280,"author":"msmash","unread":true,"content":"Microsoft's Bing search engine has deployed a controversial interface change that mimics Google's appearance when users search for \"Google\" or \"Google.com\" while logged out, blog WindowsLatest reports. \n\nThe new design adjusts the page layout to conceal Bing's search bar and navigation, displaying instead a Google-like interface with a central search box that redirects queries to Bing's results.<p><div class=\"share_submission\" style=\"position:relative;\">\n<a class=\"slashpop\" href=\"http://twitter.com/home?status=Microsoft's+Bing+Deploys+Google-Mimicking+Interface+To+Retain+Search+Users%3A+https%3A%2F%2Fit.slashdot.org%2Fstory%2F25%2F01%2F06%2F1848229%2F%3Futm_source%3Dtwitter%26utm_medium%3Dtwitter\"><img src=\"https://a.fsdn.com/sd/twitter_icon_large.png\"></a>\n<a class=\"slashpop\" href=\"http://www.facebook.com/sharer.php?u=https%3A%2F%2Fit.slashdot.org%2Fstory%2F25%2F01%2F06%2F1848229%2Fmicrosofts-bing-deploys-google-mimicking-interface-to-retain-search-users%3Futm_source%3Dslashdot%26utm_medium%3Dfacebook\"><img src=\"https://a.fsdn.com/sd/facebook_icon_large.png\"></a>\n\n\n\n</div></p><p><a href=\"https://it.slashdot.org/story/25/01/06/1848229/microsofts-bing-deploys-google-mimicking-interface-to-retain-search-users?utm_source=rss1.0moreanon&amp;utm_medium=feed\">Read more of this story</a> at Slashdot.</p><iframe src=\"https://slashdot.org/slashdot-it.pl?op=discuss&amp;id=23570747&amp;smallembed=1\" style=\"height: 300px; width: 100%; border: none;\"></iframe>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"HDMI 2.2 Announced With 96 Gbps Bandwidth - Still With Restricted Licensing","url":"https://www.phoronix.com/news/HDMI-2.2-Announced","date":1736187043,"author":"Michael Larabel","unread":true,"content":"The HDMI Forum used CES for today announcing the HDMI 2.2 specification that will be available to HDMI 2.x adopters in the first half of the calendar year...","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"A New Electricity Supercycle is Under Way","url":"https://hardware.slashdot.org/story/25/01/06/1810211/a-new-electricity-supercycle-is-under-way?utm_source=rss1.0mainlinkanon&utm_medium=feed","date":1736187000,"author":"msmash","unread":true,"content":"Global investment in electrical grid infrastructure is surging amid rising demand for power and the shift to renewable energy, reaching nearly $400 billion in 2024 from just over $300 billion in 2020. The International Energy Agency forecasts spending will hit $600 billion annually by 2030, driven by decarbonization efforts, electrification of transport and heating, and growing power needs from data centers and developing economies. \n\nMajor equipment manufacturers including Schneider Electric, Hitachi, and Siemens Energy are expanding production capacity to address severe supply chain bottlenecks, with transformer prices up 60-80% since 2020 and wait times extending to five years.<p><div class=\"share_submission\" style=\"position:relative;\">\n<a class=\"slashpop\" href=\"http://twitter.com/home?status=A+New+Electricity+Supercycle+is+Under+Way%3A+https%3A%2F%2Fhardware.slashdot.org%2Fstory%2F25%2F01%2F06%2F1810211%2F%3Futm_source%3Dtwitter%26utm_medium%3Dtwitter\"><img src=\"https://a.fsdn.com/sd/twitter_icon_large.png\"></a>\n<a class=\"slashpop\" href=\"http://www.facebook.com/sharer.php?u=https%3A%2F%2Fhardware.slashdot.org%2Fstory%2F25%2F01%2F06%2F1810211%2Fa-new-electricity-supercycle-is-under-way%3Futm_source%3Dslashdot%26utm_medium%3Dfacebook\"><img src=\"https://a.fsdn.com/sd/facebook_icon_large.png\"></a>\n\n\n\n</div></p><p><a href=\"https://hardware.slashdot.org/story/25/01/06/1810211/a-new-electricity-supercycle-is-under-way?utm_source=rss1.0moreanon&amp;utm_medium=feed\">Read more of this story</a> at Slashdot.</p><iframe src=\"https://slashdot.org/slashdot-it.pl?op=discuss&amp;id=23570701&amp;smallembed=1\" style=\"height: 300px; width: 100%; border: none;\"></iframe>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Microsoft Would Really Like You To Stop Using Windows 10 This Year","url":"https://tech.slashdot.org/story/25/01/06/1713234/microsoft-would-really-like-you-to-stop-using-windows-10-this-year?utm_source=rss1.0mainlinkanon&utm_medium=feed","date":1736184300,"author":"msmash","unread":true,"content":"Microsoft is pushing users to upgrade from Windows 10 to Windows 11 ahead of the operating system's end of support in October 2025. The company's consumer chief marketing officer Yusuf Mehdi declared 2025 \"the year of the Windows 11 PC refresh,\" positioning PC upgrades as more crucial than TV or phone purchases. The Verge adds: Mehdi believes that \"Windows 11 is available at a time when the world needs it most\" and that \"the forefront of AI innovation will be realized on Windows.\"<p><div class=\"share_submission\" style=\"position:relative;\">\n<a class=\"slashpop\" href=\"http://twitter.com/home?status=Microsoft+Would+Really+Like+You+To+Stop+Using+Windows+10+This+Year%3A+https%3A%2F%2Ftech.slashdot.org%2Fstory%2F25%2F01%2F06%2F1713234%2F%3Futm_source%3Dtwitter%26utm_medium%3Dtwitter\"><img src=\"https://a.fsdn.com/sd/twitter_icon_large.png\"></a>\n<a class=\"slashpop\" href=\"http://www.facebook.com/sharer.php?u=https%3A%2F%2Ftech.slashdot.org%2Fstory%2F25%2F01%2F06%2F1713234%2Fmicrosoft-would-really-like-you-to-stop-using-windows-10-this-year%3Futm_source%3Dslashdot%26utm_medium%3Dfacebook\"><img src=\"https://a.fsdn.com/sd/facebook_icon_large.png\"></a>\n\n\n\n</div></p><p><a href=\"https://tech.slashdot.org/story/25/01/06/1713234/microsoft-would-really-like-you-to-stop-using-windows-10-this-year?utm_source=rss1.0moreanon&amp;utm_medium=feed\">Read more of this story</a> at Slashdot.</p><iframe src=\"https://slashdot.org/slashdot-it.pl?op=discuss&amp;id=23570657&amp;smallembed=1\" style=\"height: 300px; width: 100%; border: none;\"></iframe>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Sam Altman says “we are now confident we know how to build AGI”","url":"https://arstechnica.com/information-technology/2025/01/sam-altman-says-we-are-now-confident-we-know-how-to-build-agi/","date":1736183881,"author":"Benj Edwards","unread":true,"content":"\n              <p>On Sunday, OpenAI CEO Sam Altman offered two eye-catching predictions about the near-future of artificial intelligence. In a post titled \"Reflections\" on his personal blog, Altman <a href=\"https://blog.samaltman.com/reflections\">wrote</a>, \"We are now confident we know how to build AGI as we have traditionally understood it.\" He added, \"We believe that, in 2025, we may see the first AI agents 'join the workforce' and materially change the output of companies.\"</p>\n<p>Both statements are notable coming from Altman, who has served as the leader of OpenAI during the rise of mainstream generative AI products such as <a href=\"https://arstechnica.com/information-technology/2023/11/chatgpt-was-the-spark-that-lit-the-fire-under-generative-ai-one-year-ago-today/\">ChatGPT</a>. AI agents are the <a href=\"https://arstechnica.com/information-technology/2024/12/google-goes-agentic-with-gemini-2-0s-ambitious-ai-agent-features/\">latest marketing trend</a> in AI, allowing AI models to take action on a user's behalf. However, critics of the company and Altman immediately took aim at the statements on social media.</p>\n<p>\"<span class=\"css-1jxf684 r-bcqeeo r-1ttztb7 r-qvutc0 r-poiln3\">We are now confident that we can spin bullshit at unprecedented levels, and get away with it,\" <a href=\"https://x.com/GaryMarcus/status/1876098456022106266\">wrote</a> frequent OpenAI critic Gary Marcus in response to Altman's post. \"So we now aspire to aim beyond that, to hype in purest sense of that word. We love our products, but we are here for the glorious next rounds of funding. With infinite funding, we can control the universe.\"</span></p><p><a href=\"https://arstechnica.com/information-technology/2025/01/sam-altman-says-we-are-now-confident-we-know-how-to-build-agi/\">Read full article</a></p>\n<p><a href=\"https://arstechnica.com/information-technology/2025/01/sam-altman-says-we-are-now-confident-we-know-how-to-build-agi/#comments\">Comments</a></p>\n\n            ","flags":null,"enclosureUrl":"https://cdn.arstechnica.net/wp-content/uploads/2025/01/GettyImages-2188228027-scaled-1152x648-1736173390.jpg","enclosureMime":""},{"title":"Unlocking Data Excellence: Nithin Gadicharla’s Insights into SQL Server Innovation","url":"https://hackernoon.com/unlocking-data-excellence-nithin-gadicharlas-insights-into-sql-server-innovation?source=rss","date":1736183703,"author":"Jon Stojan Media","unread":true,"content":"<p>\\\nIn today’s data-driven world, organizations are no longer limited to structured data alone. With the rise of modern data collection methods, semi-structured and unstructured data have emerged as invaluable assets, requiring advanced expertise to manage effectively. Semi-structured formats like JSON and XML bridge the gap between rigid data models and free-form data, enabling flexibility for dynamic applications. At the same time, spatial data, which focuses on geographical information, has become increasingly critical for industries relying on mapping and real-time analytics.</p>\n<p>\\\nManaging these diverse data types demands specialized skills, and few professionals are as adept at this as Nithin Gadicharla, a highly experienced SQL Server Database Administrator. With nearly a decade of experience across industries such as banking, insurance, and network design, Nithin has proven his ability to tackle complex data challenges. His expertise spans high availability solutions, performance tuning, and the design and support of large, intricate databases.</p>\n<p>\\\nBeyond structured data, Nithin has mastered SQL Server’s capabilities for handling JSON, XML, and spatial data. From streamlining API integrations with JSON to ensuring efficient querying and indexing of XML and optimizing spatial data with advanced geospatial functions, his technical finesse is both broad and deep. Coupled with his proficiency in Azure services like Azure Data Factory and Azure Data Lake Store, Nithin brings a modern, scalable approach to database management.</p>\n<h3 id=\"tacklingjsonxmlandspatialdata\"><strong>Tackling JSON, XML, and Spatial Data</strong></h3>\n<p>Working with JSON, XML, and spatial data in SQL Server presents unique challenges, requiring targeted strategies to handle their complexities. JSON, with its flexible but schema-less nature, demands careful handling. Nithin explains, “Extracting and querying nested elements requires specific tools and methods.” To address this, he stores JSON data in NVARCHAR columns and uses functions like JSON<em>VALUE for scalar values, JSON</em>QUERY for nested data, and OPENJSON to convert arrays into relational tables. He also emphasizes validation with ISJSON and non-destructive updates using JSON_MODIFY, ensuring data integrity while improving performance with indexed computed columns.</p>\n<p>\\\nFor XML, Nithin leverages its hierarchical nature by using the XML data type for efficient storage and direct manipulation. To extract data, he employs methods such as .value() for scalar values, .query() for fragments, and .nodes() to break down XML into tabular form. He highlights the importance of primary and secondary XML indexes to optimize queries and schema validation through XML Schema Collections to enforce structural integrity. Similarly, spatial data requires specialized approaches, particularly for non-tabular types like GEOMETRY and GEOGRAPHY. Nithin notes, “Create spatial indexes to enhance the performance of spatial queries,” and uses functions like .STDistance(), .STIntersects(), and .STContains() for tasks involving distance measurements, overlaps, and containment. By integrating spatial data with GIS tools, he ensures precise mapping and visualization, enabling effective analysis for complex geospatial operations.</p>\n<h3 id=\"sqlserversevolutionformoderndata\"><strong>SQL server’s Evolution for Modern Data</strong></h3>\n<p>SQL Server has evolved significantly to support semi-structured data formats like JSON and XML, offering robust tools that balance flexibility and performance. Nithin highlights the introduction of JSON support in SQL Server 2016 as a major advancement, explaining how functions like JSON<em>VALUE and JSON</em>QUERY simplify data extraction, while OPENJSON converts JSON arrays into relational tables for easier analysis. He adds, “ISJSON validates the structure of JSON data, ensuring its integrity, and JSON_MODIFY allows updates without overwriting the entire object,” making these features invaluable for real-time applications and API integrations.</p>\n<p>\\\nFor XML, which has been supported since SQL Server 2005, Nithin leverages its powerful tools for hierarchical data management. The XML data type enables efficient storage and manipulation, while methods such as .value(), .query(), and .nodes() provide granular control over data extraction and transformation. He also emphasizes the importance of schema validation through XML Schema Collections and the use of XML indexes to optimize performance for complex queries on large datasets. Together, these advancements allow organizations to seamlessly integrate semi-structured data, streamline interoperability with external systems, and maintain data integrity without sacrificing performance. As Nithin notes, “SQL Server’s evolving capabilities make it a versatile platform for modern data management.”</p>\n<h3 id=\"realworldsolutionsandoptimizations\"><strong>Real-world Solutions and Optimizations</strong></h3>\n<p>At Elan Technologies, Nithin applied his expertise in spatial data to develop a dynamic tolling system that optimized traffic flow and improved toll calculations in real-time. Using SQL Server’s GEOGRAPHY data type, he managed complex geospatial data, including toll booth locations, road networks, and traffic zones. To accelerate queries for vehicle path analysis and toll zone identification, he implemented spatial indexing, ensuring the system could efficiently handle large volumes of real-time vehicle data. Nithin explains how SQL Server’s spatial functions played a critical role: “.STIntersects() and .STDistance() were employed to detect vehicles entering or exiting toll zones,” enabling the system to dynamically monitor vehicle movement.</p>\n<p>\\\nBeyond analysis, Nithin leveraged buffer zones created with the .STBuffer() function to adjust toll areas dynamically based on traffic congestion and peak hours. This level of adaptability ensured precise toll calculations. He shares, “A combination of spatial data and transactional data enabled real-time toll computation based on distance traveled within specified zones,” with GPS feeds providing accurate tracking of vehicle movements. By integrating the system with GIS tools, stakeholders gained valuable visual insights into traffic density and tolling performance, empowering them to make informed decisions about traffic management and pricing adjustments.</p>\n<p>\\\nTo further optimize the performance of spatial queries, Nithin relied on best practices, including monitoring index fragmentation and query execution plans. By utilizing GEOMETRY and GEOGRAPHY data types and enhancing efficiency with spatial indexes, he ensured the system maintained high performance even with complex data loads. His innovative approach combined precision and scalability, demonstrating how spatial data can deliver impactful, real-world solutions for industries requiring accurate geospatial analysis and optimization.</p>\n<h3 id=\"breakingbarriersindataintegration\"><strong>Breaking Barriers in Data Integration</strong></h3>\n<p>Integrating JSON and XML data into systems often brings challenges such as schema mismatches, performance bottlenecks, and compatibility issues. Nithin has successfully tackled these hurdles using a combination of tools and optimization strategies. He highlights the importance of SQL Server’s OPENJSON for transforming JSON data into relational tables and leveraging XML schema validation to enforce structure and ensure data integrity. By optimizing indexes and standardizing data formats, Nithin enabled seamless interoperability and efficient querying across diverse systems. These methods streamlined data exchange processes and resolved the common obstacles that arise when working with semi-structured data formats.</p>\n<p>\\\nIn one notable project, Nithin applied OPENJSON to automate the parsing and transformation of large API response datasets into relational tables. This approach replaced manual data mapping, which had been both time-consuming and error-prone. “This automation reduced processing time by 70%, ensuring real-time updates and enhancing system scalability to handle growing data volumes without performance degradation,” he explains. By addressing these challenges head-on, Nithin not only improved system efficiency but also ensured that the solution could scale effortlessly as data demands increased. His work demonstrates how thoughtful integration and optimization of JSON and XML can have a transformative impact on performance and maintainability.</p>\n<h3 id=\"excitingtrendsinsqlserver\"><strong>Exciting Trends in SQL Server</strong></h3>\n<p>Nithin sees exciting opportunities in the evolving capabilities of SQL Server, particularly in its handling of JSON, XML, and spatial data. He highlights advancements like improved JSON querying functions, such as JSON_MODIFY and OPENJSON, which allow for more efficient data storage and performance optimization of semi-structured data. These enhancements are particularly valuable as businesses increasingly rely on flexible, real-time data integration for modern applications.</p>\n<p>\\\nFor spatial data, Nithin emphasizes the importance of enhanced geospatial functions and spatial indexing techniques, which are critical for industries like logistics and mapping that depend on real-time analytics. He explains, “The growing capabilities in spatial data, such as enhanced geospatial functions and indexing techniques, are crucial for real-time analytics in industries like logistics and mapping.” These advancements not only improve performance but also promise more scalable solutions for managing complex data workloads. By continuing to refine its support for unstructured and semi-structured data, SQL Server is positioning itself as a robust platform capable of meeting the demands of modern data-driven organizations.</p>\n<p>\\\nAs organizations increasingly rely on diverse data types, professionals like Nithin demonstrate the expertise needed to transform complex data challenges into practical solutions. By mastering JSON, XML, and spatial data within SQL Server, Nithin streamlines integration, enhances performance, and solves real-world problems like real-time analytics and geospatial optimization. His work highlights the power of thoughtful optimization and technical precision, enabling businesses to scale efficiently while addressing modern data demands. With SQL Server’s evolving capabilities, Nithin’s insights serve as a blueprint for unlocking the full potential of today’s dynamic data systems.</p>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Comms 101 for New Founders: 9 Essential Lessons from Mentoring 3000+ Entrepreneurs","url":"https://hackernoon.com/comms-101-for-new-founders-9-essential-lessons-from-mentoring-3000-entrepreneurs?source=rss","date":1736182803,"author":"Jon Stojan Media","unread":true,"content":"<p>\\\nGood communication is the fuel for the growth of any emerging business. Without spreading the word about your startup, you won’t be able to accumulate new investors or clients. In a loud world full of people trying to make a name for themselves, it can be difficult to send the right message that will set your brand apart from the crowd.</p>\n<p>\\\n<strong><a href=\"https://www.linkedin.com/in/suffiyanmalik/\">Suffiyan Malik</a></strong>, investor at DraperU Ventures, an early-stage fund dedicated to emerging tech startups, and Vice President of Programs &amp; Growth at Draper University, offers his expertise for new founders. Having grown DraperU from 1,200 alumni to 4,000 in the space of four years, he has helped to establish a new generation of resilient startup leaders.</p>\n<p>\\\nHis insights provide the tools for founders to establish themselves, grow their networks, and position their startups for success in a market that’s more competitive than ever.</p>\n<h2 id=\"amasterofnetworkgrowth\"><strong>A Master of Network Growth</strong></h2>\n<p>Through his work with DraperU, Suffiyan Malik has mentored over 3,000 entrepreneurs and helped them develop sound communication strategies. He has built a community in frontier tech and hosted events for more than 6,000 technologists, such as the Building Atoms Summit, which featured speakers such as David Friedberg, Professor Alex Filippenko, and Trevor Martin.</p>\n<p>\\\nMalik has used his deep understanding of communication and business development to define core skills for aspiring entrepreneurs and startup founders. Without effective networking, fundraising, and business development, new founders will struggle to position their brand in the market.</p>\n<p>\\\nBelow are nine key lessons from Malik that are essential for founders.</p>\n<h3 id=\"1buildrelationshipsbeforeyouneedthem\">1. Build Relationships Before You Need Them</h3>\n<p>It’s no good asking for handouts before a relationship has been established. To anticipate your startup’s needs, it is important to nurture early relationships. Make a showing wherever you can, be it at networking events, conferences, or even incidental meetings at a coffee shop.</p>\n<h3 id=\"2researchlikeajournalist\">2. Research Like a Journalist</h3>\n<p>Before a startup can thrive, the founder will need to know the nature of the market it’s entering. To gain a thorough understanding of potential competitors and the audience for your business, founders should adopt an effective research strategy.</p>\n<p>\\\nLike a journalist, you can accumulate research through multiple sources, including financial websites, analysis tools, and word of mouth.</p>\n<h3 id=\"3wordofmouthisthebestbaselinestrategy\">3. Word of Mouth is the Best Baseline Strategy</h3>\n<p>Founders shouldn’t underestimate the power of word-of-mouth networking; it’s the strongest go-to-market strategy because it builds trust and credibility through personal recommendations, which people value more than traditional marketing. It’s also cost-effective and scalable, allowing startups to grow their customer base organically while garnering loyalty and social proof.</p>\n<p>\\\n<strong><a href=\"https://www.forbes.com/sites/kimberlywhitler/2014/07/17/why-word-of-mouth-marketing-is-the-most-important-social-media/\">Forbes</a></strong> has listed historically successful word-of-mouth strategies, highlighting the Kimberly-Clark campaign run by Marina Maher Communications, which earned the business the WOMMY in the influencer category.</p>\n<h3 id=\"4podcastsarethenewbusinessdevelopmentmedium\">4. Podcasts Are the New Business Development Medium</h3>\n<p>Podcasts are emerging as a scalable method for founders to build relationships. They offer a platform for sharing expertise, engaging with audiences, and connecting with influential guests. A successful podcast opens up opportunities for networking and trust-building. This generates leads through authentic conversations and content that resonates with listeners.</p>\n<h3 id=\"5newsletterscanbeusedforbusinessdevelopment\">5. Newsletters Can be Used for Business Development</h3>\n<p>Newsletters are a long-standing tool for businesses for a good reason. A newsletter creates value by building long-term relationships and business development. Good newsletters strengthen the relationship between the business and clients by keeping them informed of its goals and growth measures.</p>\n<h3 id=\"6everyonelovesanaudience\">6. Everyone Loves an Audience</h3>\n<p>When a startup enters the market, it is entering a public stage. Every move it makes has the potential to draw attention from clients and investors. Cultivating an audience does more than just set you apart from the crowd; it can help to establish credibility and trust. Communication strategies should go beyond spreading awareness of your brand.</p>\n<p>\\\nBy showing the world who you are and what you believe in as a startup, you can grow an audience of fans and believers.</p>\n<h3 id=\"7positioningyourselfmatters\">7. Positioning Yourself Matters</h3>\n<p>When entering a market, it is crucial to carve out your own space. A founder should define and communicate a unique value proposition that they bring to the table. Consider what niche you fill in the market, how you intend to fill it, and why you are the optimal choice for this strategy.</p>\n<h3 id=\"8designyourcategory\">8. Design Your Category</h3>\n<p>When performing preliminary market research, it is easy to find existing categories to emulate. However, instead of trying to compete in existing categories, founders should design and create a novel category they can inhabit.</p>\n<p>\\\nOne example of a company breaking out by designing a new category is Salesforce differentiating itself from Siebel in 1999. As detailed in this article by <strong><a href=\"https://medium.com/craft-ventures/the-one-who-defines-the-category-wins-the-category-245fee85bfbb\">Medium</a></strong>, Siebel was a leader in CRM (Customer Relationship Management).</p>\n<p>\\\nBy introducing the concept of “Cloud CRM,” Salesforce defined a category it could use to enter the market and stand apart from competitors.</p>\n<h3 id=\"9practicecoldoutreachreligiously\">9. Practice Cold Outreach Religiously</h3>\n<p>Cold outreach is a core skill for every founder. Sometimes, the strongest and most valuable relationships are formed from the ground level. You never know who might be your next biggest network opportunity, so cold outreach should be performed constantly and consistently.</p>\n<p>\\\n“Practice cold outreach like going to church on Sundays,” Suffiyan Malik asserts. He recommends sending at least twenty emails to the highest-value potential advisors, investors, hires, and customers on a weekly basis.</p>\n<h2 id=\"afoundationforstartupgrowth\">A Foundation for Startup Growth</h2>\n<p>With these nine lessons from Suffiyan Malik, founders now hold the keys to growing a startup that will hold its own against the competition.&nbsp;</p>\n<p>\\\nBy building early relationships, performing thorough market research, communicating through word of mouth, podcasts, and newsletters, growing an audience, positioning yourself in the market, defining your own category, and practicing consistent cold outreach, you can develop a robust network that will help carry your business to success.</p>\n<p>\\\nAs a guru of communication strategies, Suffiyan Malik has helped thousands of founders build their business dreams. For aspiring entrepreneurs, he has another word of advice: “Technical ability is key, storytelling ability is consequential. Making comms your superpower is the most fundamental muscle you have to build as an entrepreneur.”</p>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"WLTech’s AI Agent Scores Big in $1 Million Challenge","url":"https://hackernoon.com/wltechs-ai-agent-scores-big-in-$1-million-challenge?source=rss","date":1736182511,"author":"WLTech.AI (WebLab Technology)","unread":true,"content":"<p>\\\nLet’s take a moment to think about learning to drive. Any one of us can learn the basic principles of driving from just a few demonstrations, and once we understand concepts like steering, acceleration, and braking, we can apply those skills to any car — from a compact sedan to a large truck. With these skills, we can also quickly adapt to different road conditions, weather, and traffic situations, even if we have never encountered them before. However, current AI will need thousands of hours of training data for each specific vehicle and condition, while AGI would be able to grasp the fundamental principles of driving and apply them broadly.</p>\n<p>\\\nAGI aims to create AI systems that can truly generalize knowledge and skills — learning fundamental principles that can be applied to completely new situations. Driving a car, playing cheese, go, Minecraft, etc. This differs markedly from today’s AI systems, including LLMs, which primarily operate through sophisticated pattern matching across vast training datasets.</p>\n<p>\\\nWhile modern LLMs can engage in seemingly intelligent conversation and solve complex problems, they fundamentally work by recognizing and recombining patterns they’ve encountered during training. This is more akin to extremely advanced memorization and statistical correlation than true understanding and generalization, as they don’t build genuine causal models or abstract representations of the world. When they do appear to generalize, they’re usually just finding subtle statistical patterns in their training data rather than understanding deeper principles.</p>\n<h2 id=\"whyisarcimportant\"><strong>Why is ARC Important?</strong></h2>\n<p>ARC addresses a crucial measurement problem in AI research — how do we actually test if an AI system can generalize?</p>\n<p>\\\nTraditional benchmarks typically measure performance on specific tasks with large training datasets, but high scores do not necessarily indicate true generalization ability. An AI might perform well simply by memorizing patterns in the training data rather than developing a genuine understanding.</p>\n<p>\\\nAs F. Chollet writes: “To the best of our knowledge, ARC does not appear to be approachable by any existing machine learning technique (including Deep Learning)”.</p>\n<p>\\\nThe main difficulties are the following:</p>\n<p>– The expected output is not a label or even a set of labels, but a colored grid with sizes up to 30x30 and with up to 10 different colors. Therefore, it falls in the domain of structured prediction.</p>\n<p>– The predicted output has to match the expected output exactly. If a single cell is wrong, the task is considered as failed. To compensate for that, three attempts are allowed for each input grid.</p>\n<p>– In each task, there are generally between two and four training instances (input grid + output grid), and one or two test instances for which a prediction must be made.</p>\n<p>– Each task relies on a distinct transformation from the input grid to the output grid. In particular, no evaluation task can be solved by reusing a transformation learned on the training tasks. Each task is a distinct learning problem, and what ARC evaluates is a broad generalization and few-shot learning.</p>\n<p>\\\nARC offers a more rigorous test of generalization by presenting each puzzle with only 3–5 samples, few-shot only. This minimal training data means the AI can’t rely on extensive pattern matching — it must extract the underlying principles and apply them to new situations, just as humans do. The puzzles are also deliberately designed to resist shortcut solutions or memorization strategies.</p>\n<p>\\\nWhat makes ARC particularly valuable is that it provides a quantifiable measure of generalization ability. Rather than debating whether an AI system truly “understands” in some philosophical sense, we can measure concrete performance on these carefully designed reasoning tasks. This gives researchers a clear benchmark for progress toward artificial general intelligence.</p>\n<p>\\\n <img src=\"https://cdn.hackernoon.com/images/aOK0H0pt6fSTfIZ4hV2y2VIGae72-dm0319h.png\" alt=\"\" /></p>\n<p>If you want to know more about the ARC benchmark and what it means for AI development, this video is a great place to start: </p>\n<p><a href=\"https://youtu.be/2W5D6J8om0c?embedable=true\">https://youtu.be/2W5D6J8om0c?embedable=true</a></p>\n<h2 id=\"approachestosolvingarc\"><strong>Approaches to Solving ARC</strong></h2>\n<ol>\n<li><strong>==Brute-Force Approaches==</strong></li>\n</ol>\n<p>The 2020 Kaggle competition revealed one of the first approaches to solving ARC — brute-force search through a space of predefined transformations. The winning solution constructed a domain-specific language (DSL) containing 142 hand-crafted grid operations. By systematically searching through combinations of these operations, it achieved 20% accuracy on private evaluation tasks. Another similar solution using grammatical evolution to guide the transformation search reached 3–7.68% accuracy.</p>\n<p>\\\nWhile notable for their initial success, these solutions highlighted a key limitation: they relied on an exhaustive search of pre-programmed rules rather than developing any real understanding or ability to generalize. This gap between programmatic search and true intelligence demonstrates why ARC remains a challenging benchmark for measuring generalization capabilities.</p>\n<p>\\</p>\n<ol start=\"2\">\n<li><strong>==Minimum Description Length (MDL)==</strong></li>\n</ol>\n<p>The current approach (<a href=\"https://github.com/sebferre/ARC-MDL/tree/master\">https://github.com/sebferre/ARC-MDL/tree/master</a>) is based on a fundamental principle used to discover patterns and build models that best explain data in the most concise way possible. At its core, MDL states that “the best model for some data is the one that compresses the most of the data.”</p>\n<p>\\\nThe solution uses a specialized modeling language to describe grid patterns efficiently. This language provides a structured way to represent both input and output grids as combinations of basic elements:</p>\n<p>\\\nAt the highest level, each puzzle is represented as a pair and contains two grids:</p>\n<p>● An input grid (in)</p>\n<p>● An output grid (out)</p>\n<p>\\\nEach grid is defined by three components:</p>\n<ol>\n<li>A size vector (defining height and width)</li>\n<li>A background color</li>\n<li>A list of layers containing objects</li>\n</ol>\n<p>\\\nObjects are positioned shapes, where each shape can be either:</p>\n<p>● A single-colored point</p>\n<p>● A rectangle with a specified size, color, and mask</p>\n<p>\\\nThe mask system is particularly powerful, allowing rectangles to take various forms:</p>\n<p>● Full (solid rectangle)</p>\n<p>● Border (outline only)</p>\n<p>● Checkboard patterns (even or odd)</p>\n<p>● Cross patterns (plus or times shape)</p>\n<p>● Custom bitmap patterns</p>\n<p>\\\nThis language allows the system to describe complex grid patterns compactly. For example, instead of storing a 10x10 grid pixel by pixel (100 values), it might store it as “a black background with a 3x3 red rectangle at position (2,2)” — using far fewer values while capturing the essential structure.</p>\n<p>\\\nWhen searching for patterns, the system tries to find the most concise description of both input and output grids using this language. Good solutions tend to reuse elements between input and output (like taking a shape from the input and transforming it in the output), which leads to shorter descriptions and better compression.</p>\n<p>\\\nThe success of this approach (94/400 training tasks solved) suggests that this language captures many of the key patterns present in ARC puzzles while being constrained enough to avoid overfitting to specific examples.</p>\n<p>\\</p>\n<ol start=\"3\">\n<li><strong>==Direct Output Prediction with Basic LLMs==</strong></li>\n</ol>\n<p>While LLMs have shown impressive capabilities across many domains, using them directly to solve ARC presents both opportunities and challenges. The naive approach involves providing the LLM with input-output examples and asking it to predict the answer for new inputs. However, this method has significant limitations. LLMs demonstrate very limited spatial reasoning capabilities in this context and are highly prone to hallucinations when attempting to predict grid transformations.</p>\n<p>\\</p>\n<ol start=\"4\">\n<li><strong>==Chain of Thought Enhancement for LLM Problem-Solving==</strong></li>\n</ol>\n<p>This approach builds upon the direct prediction method by first asking the LLM to analyze and describe the patterns it observes in the input-output pairs. While this additional reasoning step yields better results by helping the LLM decompose the problem, it still has the same fundamental limitations. The model continues to exhibit a high rate of hallucinations when attempting to predict final outputs, even after identifying potential patterns. This suggests that adding explicit reasoning steps alone is insufficient to overcome LLM’s spatial reasoning limitations in solving ARC challenges.</p>\n<h2 id=\"aiagentsandtheirroleinagi\"><strong>AI Agents and Their Role in AGI</strong></h2>\n<p>At <a href=\"http://WLTech.AI\">WLTech.AI</a>, we see the huge role of AI Agents in the pursuit of AGI is of great importance. They’re designed to interact with their settings dynamically, adapt based on what they learn, and learn on their own. Unlike static models trained only once, AI agents can learn from ongoing interactions and adapt to changing circumstances, making them a vital component in the development of AGI.</p>\n<p>\\\nAI agents are the brains of the operation, coordinating a range of techniques that are adapted to the specific demands of a task. Symbolic systems are great at precise, rule-based reasoning, which makes them perfect for tasks that require understanding transformations such as rotations or reflections. Neural networks are great at recognizing patterns and generalizing from data, which is really useful for identifying the underlying structures in ARC tasks.</p>\n<p>\\\nHowever, ARC’s challenges don’t end with symbolic manipulation or pattern recognition. Many tasks require a more advanced level of abstraction, including the ability to create new rules, make connections, and adapt to new situations. Language models are useful here, as they can be used for things like program synthesis and abstract reasoning. Search algorithms are another tool in the box as they can explore possible transformations efficiently to identify solutions. Planning systems, on the other hand, provide the framework to break down and tackle complex problems one step at a time.</p>\n<p>\\\nWhat makes AI agents so clever is that they can bring all these different approaches together. They don’t just use one method at a time. They evaluate and deploy the best combination of techniques to address each unique problem. This ability to adapt on the fly is what sets humans apart and is an important part of advancing AGI.</p>\n<p>At their core, AI agents are basically intelligent coordinators. They keep a running record of what works and what doesn’t, so that they can learn from past experiences.</p>\n<p>\\\nOur Agentic AI solution You can find our solution here: <a href=\"https://colab.research.google.com/drive/1-rQoqrGRGQE6M8bMpfzqf6tV3TnUi-Mp?usp=sharing\">https://colab.research.google.com/drive/1-rQoqrGRGQE6M8bMpfzqf6tV3TnUi-Mp?usp=sharing</a> or on Github: <a href=\"https://github.com/weblab-technology/arc-challenge-2024-10\">https://github.com/weblab-technology/arc-challenge-2024-10</a></p>\n<p>\\\n <img src=\"https://cdn.hackernoon.com/images/aOK0H0pt6fSTfIZ4hV2y2VIGae72-hl131cr.png\" alt=\"\" /></p>\n<p>\\\nOur breakthrough came from mimicking human problem-solving behavior: analyzing examples, hypothesizing rules, testing, and refining. Instead of brute force, our AI focuses on writing generation functions — Python code that defines transformations — and immediately testing them on the training data.</p>\n<h3 id=\"keysteps\"><strong>Key Steps:</strong></h3>\n<ol>\n<li>==Analyze Patterns:== The AI identifies relationships in input-output pairs.</li>\n<li>==Generate Function:== It writes a transform(input): output function based on observed patterns.</li>\n<li>==Immediate Testing:== The function is tested on the training inputs. If outputs match exactly, the solution is assumed valid and applied to test inputs.</li>\n<li>==Iterate:== If tests fail, the function is refined and re-tested.</li>\n</ol>\n<p>\\\nA surprising discovery in our approach was that iterative improvements often hinder progress rather than helping. If the initial assumption behind a generation function is flawed, attempting to refine it typically amplifies the error instead of correcting it. This realization fundamentally reshaped our methodology.</p>\n<h2 id=\"freshideasoverrefinement\"><strong>Fresh Ideas Over Refinement</strong></h2>\n<p>Instead of refining incorrect assumptions, we found it more effective to:</p>\n<ol>\n<li>==Discard the flawed approach entirely.==</li>\n<li>==Generate a new hypothesis from scratch based on fresh insights from the training data.==</li>\n</ol>\n<p>\\\nThis mirrors human behavior of resetting and rethinking when a solution path proves unproductive, rather than patching a broken strategy.</p>\n<h2 id=\"whygeneticalgorithmsdidntwork\"><strong>Why Genetic Algorithms Didn’t Work</strong></h2>\n<p>This insight also explains why genetic algorithms failed to improve results. By design, genetic algorithms evolve solutions incrementally, refining them over generations. However, when the foundational assumptions are wrong, incremental changes lead to convoluted solutions that stray further from the correct transformation.</p>\n<p>\\\n<strong>LLM Evaluation: Claude 3.5 Sonnet Outperforms Competitors</strong></p>\n<p>To tackle the ARC challenge, we extensively tested multiple large language models (LLMs) to assist in writing generation functions. Among them, Claude 3.5 Sonnet emerged as the most capable, significantly outperforming its competitors.</p>\n<p>\\\n<strong>Key Findings:</strong></p>\n<p><strong>Claude 3.5 Sonnet vs. GPT-4o:</strong></p>\n<p>● ==Performance:== Claude 3.5 Sonnet identified more patterns than GPT-4o, achieving nearly double the accuracy in pattern recognition.</p>\n<p>● ==Efficiency:== Claude achieved the same results as OpenAI’s GPT-4o in 1/7 of the execution time, making it not only more effective but also faster.</p>\n<p>\\\n<strong>GPT-4o’s Decline:</strong></p>\n<p>● We observed a noticeable decline in GPT-4o’s performance over time. The initial version of GPT-4o was far more capable for ARC tasks than subsequent versions, indicating a potential shift in its optimization that hindered pattern recognition and reasoning for this challenge.</p>\n<p>\\\n<strong>Why Claude 3.5 Sonnet Stands Out</strong></p>\n<p>\\\nClaude’s edge lies in its ability to generalize and identify subtle transformations, which is crucial for ARC’s few-shot nature. Its consistent performance and efficiency made it the clear choice for integrating into our AI agent framework, setting a new standard for LLM-driven reasoning in structured problem-solving.</p>\n<h2 id=\"results\"><strong>Results</strong></h2>\n<p>Our approach ==achieved close to 30% accuracy on the ARC evaluation set==, significantly outperforming baseline methods. This result highlights the strength of mimicking human problem-solving behavior, leveraging fresh hypotheses over iterative refinements, and utilizing the most capable LLMs like Claude 3.5 Sonnet. While there is still substantial room for improvement, this milestone demonstrates meaningful progress in addressing ARC’s challenges and advancing toward broader generalization in AI.</p>\n<h2 id=\"futuredirectionsforarc\"><strong>Future Directions for ARC</strong></h2>\n<p>At <a href=\"http://WLTech.AI\">WLTech.AI</a> we believe the future of solving ARC lies in the continued growth of LLM capabilities combined with higher-level reasoning frameworks like Minimum Description Length (MDL) or similar approaches for concise pattern explanation. These advancements could enable models to better abstract and generalize transformations. Additionally, integrating a self-refining prompt system based on a growing solutions bank would allow models to iteratively improve their reasoning and draw from past successes, creating a more adaptive and efficient problem-solving pipeline. This synergy between advanced LLMs, structured explanations, and adaptive learning holds the potential to unlock new milestones in ARC and AGI development.</p>\n<h2 id=\"notablearcsolvers\"><strong>Notable ARC Solvers</strong></h2>\n<p>The Abstraction and Reasoning Corpus (ARC) benchmark has been key to testing how well AI can apply general rules and think in a more abstract way. Over the years, we’ve seen a number of standout solvers come along, each adding something different to the field.</p>\n<p>\\\n● Ryan Greenblatt’s Approach</p>\n<p>In 2024, Ryan Greenblatt, an engineer at Redwood Research, reached a major milestone by scoring 42% on the ARC-AGI public evaluation set, with a verification score of 43%. His approach involved using GPT-4o to generate and refine several Python programs and selecting the best ones for submission. This shows how we can use large language models with program synthesis to tackle complex reasoning tasks.</p>\n<p>\\\n● Icecuber 2020</p>\n<p>The “icecuber 2020” solution, a previous competition winner, got a public evaluation score of 39% and a verification score of 17%. While we don’t have all the details about the methodology, this solution has been really important in setting the bar for subsequent ARC solvers.</p>\n<h2 id=\"arcprize2024leaderboard\"><strong>ARC Prize 2024 Leaderboard</strong></h2>\n<p>The <a href=\"https://arcprize.org/blog/introducing-arc-agi-public-leaderboard?utm_source=chatgpt.com\">ARC Prize 2024 leaderboard</a> features the following <a href=\"https://www.kaggle.com/competitions/arc-prize-2024/leaderboard\">top performers</a>:</p>\n<p>\\\n● MindsAI are in the lead with a score of 55.5%.</p>\n<p>● The ARChitects are close behind with a score of 53.5%.</p>\n<p>● Guillermo Barbadillo in third with a score of 40%.</p>\n<p>● Alijs in fourth, also at 40%.</p>\n<p>● TuMinhDang fifth with a score of 38%.</p>\n<p>\\\nThese scores show how everyone’s working hard and coming up with new ways to tackle the ARC benchmark. They also show how different teams are using different strategies.</p>\n<h2 id=\"theroleofarcininspiringairesearchers\"><strong>The Role of ARC in Inspiring AI Researchers</strong></h2>\n<p>The ARC benchmark is still a great way to test how well AI systems can reason and generalize. Even though there have been some great advances, no model has got to grips with ARC completely, demonstrating how tricky it is to achieve artificial general intelligence. Researchers and practitioners are always looking for ways to combine different approaches, using symbolic reasoning with neural networks, to get closer to solving problems.</p>\n<p>\\\nBenchmarks like ARC give us a sneak peek into what the future holds for AI research. They’re moving the field toward systems that can think and adapt like humans. While we’re still making slow progress, ARC has already set out a clear path to achieving AGI.</p>\n<p>\\\n● ==The focus is moving towards generalization.== (<a href=\"https://arxiv.org/abs/2305.07141?utm_source=chatgpt.com\">https://arxiv.org/abs/2305.07141?utm_source=chatgpt.com</a>)</p>\n<p>In the future, AI systems will be designed to generalize rather than specialize. As the ARC tasks show, being able to solve new problems without having to retrain is a key sign of true intelligence. It seems likely that researchers will develop models that are great at few-shot or zero-shot learning, taking inspiration from how our brains work.</p>\n<p>\\\n● ==Hybrid models are going to be the norm.==</p>\n<p>The success of ARC solvers has already shown us that single-approach systems have their limits. The future of AI is going to be hybrid models that integrate neural networks, symbolic systems, and probabilistic reasoning. These models will do well on ARC, but they’ll also be able to handle real-world problems where flexibility and adaptability are key.</p>\n<p>\\\n● ==There’s a new focus on cognitive architecture.==</p>\n<p>ARC has got people thinking about cognitive architectures that copy the human brain’s ability to combine different ways of reasoning. We’ll see more research into working memory, meta-learning, and multi-agent systems, which will help pave the way for AI that can reason, learn, and adapt on the fly.</p>\n<p>\\\nAs AI systems get smarter, they’ll start working with us rather than just doing our jobs for us. Benchmarks like ARC are helping to develop AI systems that work alongside humans, offering insights and solutions in complex areas like scientific discovery and creative problem-solving.</p>\n<p>\\\nCompetitions like these have really inspired the AI community. With a reward of over $1,000,000, the ARC Prize is a great incentive for researchers to come up with open-source solutions that can beat the current benchmarks.</p>\n<p>\\\nAt <a href=\"http://WLTech.AI\">WLTech.AI</a>, we recognize that the value of such solutions far exceeds $1,000,000, and we are excited to participate in the challenge again next year to continue advancing the field.</p>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"HDMI 2.2 Debuts, With an 'Ultra96' Cable For Tomorrow's Displays","url":"https://it.slashdot.org/story/25/01/06/1653246/hdmi-22-debuts-with-an-ultra96-cable-for-tomorrows-displays?utm_source=rss1.0mainlinkanon&utm_medium=feed","date":1736182380,"author":"msmash","unread":true,"content":"The HDMI Forum has announced HDMI 2.2, doubling data bandwidth to 96Gbps through new \"Ultra96\" cables while maintaining compatibility with existing connectors. The specification, scheduled for release to industry adopters in first-half 2025, promises higher resolutions and refresh rates, including 4K at 480Hz and 8K at 240Hz. \n\nA new Latency Indication Protocol aims to improve audio-video synchronization in multi-device setups. The Forum emphasized applications in AR/VR, medical imaging, and digital signage. Implementation requires both new Ultra96-certified cables and compatible devices, with anti-counterfeit measures included in packaging.<p><div class=\"share_submission\" style=\"position:relative;\">\n<a class=\"slashpop\" href=\"http://twitter.com/home?status=HDMI+2.2+Debuts%2C+With+an+'Ultra96'+Cable+For+Tomorrow's+Displays%3A+https%3A%2F%2Fit.slashdot.org%2Fstory%2F25%2F01%2F06%2F1653246%2F%3Futm_source%3Dtwitter%26utm_medium%3Dtwitter\"><img src=\"https://a.fsdn.com/sd/twitter_icon_large.png\"></a>\n<a class=\"slashpop\" href=\"http://www.facebook.com/sharer.php?u=https%3A%2F%2Fit.slashdot.org%2Fstory%2F25%2F01%2F06%2F1653246%2Fhdmi-22-debuts-with-an-ultra96-cable-for-tomorrows-displays%3Futm_source%3Dslashdot%26utm_medium%3Dfacebook\"><img src=\"https://a.fsdn.com/sd/facebook_icon_large.png\"></a>\n\n\n\n</div></p><p><a href=\"https://it.slashdot.org/story/25/01/06/1653246/hdmi-22-debuts-with-an-ultra96-cable-for-tomorrows-displays?utm_source=rss1.0moreanon&amp;utm_medium=feed\">Read more of this story</a> at Slashdot.</p><iframe src=\"https://slashdot.org/slashdot-it.pl?op=discuss&amp;id=23570643&amp;smallembed=1\" style=\"height: 300px; width: 100%; border: none;\"></iframe>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"The One Aspect of JavaScript That Doesn't Get Enough Attention","url":"https://hackernoon.com/the-one-aspect-of-javascript-that-doesnt-get-enough-attention?source=rss","date":1736181785,"author":"Eduard Dykman","unread":true,"content":"<p>JavaScript is currently one of the most popular programming languages, according to many platforms. However, does popularity equate to being the most advanced or beloved language? It lacks certain constructs that are considered integral parts of other languages, such as an extensive standard library, immutability, and macros. But there is one detail that, in my opinion, doesn't receive enough attention - generators.</p>\n<p>\\\nIn this article, I want to explain possible use cases for iterators and generators and how they improve the verbosity of one's code. I hope that after reading this article, the following piece of code will make all sense:</p>\n<p>```javascript \nwhile (true) {\n    const data = yield getNextChunk();\n    const processed = processData(data);\n    try {\n        yield sendProcessedData(processed);\n        showOkResult();\n    } catch (err) {\n        showError();\n    }\n}</p>\n<pre><code>\\\nThis is the first part of a series: Iterators and Generators.\n\n## Iterators\n\nSo, an iterator is an interface that provides sequential access to data.\n\n\\\nAs you can see, the definition doesn't mention anything about data structures or memory. Indeed, a sequence of null values can be represented as an iterator without occupying any memory space.\n\n\\\nLet's have a few examples:\n\n\\\nArray is probably the first thing that comes to mind when you think about iterators. It's a data structure that stores a sequence of values in memory. It's also an iterator because it provides sequential access to its elements.\n</code></pre>\n<p>javascript\nconst arr = [1, 2, 3];\nfor (const item of arr) {\n    console.log(item);\n}</p>\n<pre><code>\\\nThe same goes for strings. They are stored in memory as a sequence of characters and provide sequential access to them.\n</code></pre>\n<p>javascript\nconst str = 'abc';\nfor (const char of str) {\n    console.log(char);\n}</p>\n<pre><code>\\\nLet's look at the following function example:\n</code></pre>\n<p>javascript\nconst fn = () =&gt; Math.random();</p>\n<pre><code>\\\nThis function can be considered an iterator because it provides sequential access to random numbers.\n\n\\\nOkay, why do we need iterators at all if arrays, one of the language's basic data structures, allow us to work with data both sequentially and in arbitrary order?\n\n\\\nLet's imagine that we need an iterator that implements a sequence of natural numbers, Fibonacci numbers, or any other infinite sequence. It would be difficult to store an infinite sequence in an array. We would need a mechanism for gradually populating the array with data and removing old data to prevent filling up the entire memory of the process. This unnecessary complexity adds extra implementation and maintenance overhead, whereas a solution without an array can be achieved in just a few lines of code:\n\n\\\n</code></pre>\n<p>javascript\nconst getNaturalRow = () =&gt; {\n    let current = 0;\n    return () =&gt; ++current;\n};</p>\n<pre><code>\\\nIterators can also be used to represent data retrieved from an external channel, such as a WebSocket.\n\n\\\nIn JavaScript, any object that has a next() method, which returns a structure with value (the current iterator value) and done (a flag indicating the end of the sequence), is considered an iterator. This convention is described in the [ECMAScript language standard](https://tc39.es/ecma262/multipage/control-abstraction-objects.html#sec-iteration). Such an object implements the Iterator interface. Let's rewrite the previous example in this format:\n\n\\\n</code></pre>\n<p>javascript\nconst getNaturalRow = () =&gt; {\n    let current = 0;\n    return {\n        next: () =&gt; ({ value: ++current, done: false }),\n    };\n};</p>\n<pre><code>\\\nIn JavaScript, there is also the **Iterable** interface. It represents an object that has an `@@iterator` method (accessible via `Symbol.iterator` constant) that returns an iterator. Objects that implement this interface can be iterated using the `for..of` loop. Let's rewrite our example once again, this time as an Iterable implementation:\n\n\\\n</code></pre>\n<p>javascript\nconst naturalRowIterator = {\n    [Symbol.iterator]: () =&gt; ({\n        <em>current: 0,\n        next() { return {\n            value: ++this.</em>current,\n            done: this._current &gt; 3,\n       }},\n   }),\n}</p>\n<p>for (num of naturalRowIterator) {\n    console.log(num);\n}\n// output: 1, 2, 3</p>\n<pre><code>\\\nAs you can see, we had to make flag \"done\" to change at some point, otherwise the loop would be infinite.\n\n## Generators\n\nThe next stage in the evolution of iterators was the introduction of generators. They provide syntactic sugar that allows values of an iterator to be returned as if they were the result of a function. A generator is a function declared with an asterisk `function*` and returns an iterator. The iterator itself is not explicitly returned; instead, the function yields values of the iterator using the `yield` keyword. When the function completes its execution, the iterator is considered done (subsequent `next` method calls will return `{ done: true, value: undefined }`.\n\n\\\n</code></pre>\n<p>javascript\nfunction* naturalRowGenerator() {\n    let current = 1;\n    while (current &lt;= 3) {\n        yield current;\n        current++;\n    }\n}</p>\n<p>for (num of naturalRowGenerator()) {\n    console.log(num);\n}\n// output: 1, 2, 3</p>\n<pre><code>\\\nEven in this simple example, the main nuance of generators is apparent: the code inside a generator function **does not execute synchronously**. The execution of a generator code occurs incrementally as a result of `next` method calls on the corresponding iterator. Let's examine how the generator code executes using the previous example. We will use a special cursor to mark where the execution of the generator is paused.\n\n\\\nAt the moment of calling naturalRowGenerator, an iterator is created.\n</code></pre>\n<p>javascript\nfunction* naturalRowGenerator() {\n    ▷let current = 1;\n    while (current &lt;= 3) {\n        yield current;\n        current++;\n    }\n}</p>\n<pre><code>\\\nNext, when we call the `next` method three times, or in our case, iterate through the loop three times, the cursor is positioned after the yield statement.\n</code></pre>\n<p>javascript\nfunction* naturalRowGenerator() {\n    let current = 1;\n    while (current &lt;= 3) {\n        yield current; ▷\n        current++;\n    }\n}</p>\n<pre><code>\\\nFor all subsequent `next` calls, as well as after exiting the loop, the generator completes its execution. The result of subsequent `next` calls will be `{ value: undefined, done: true }`.\n\n## Passing parameters to iterators\n\nLet's imagine that we need to add the functionality to reset the current counter and start counting from the beginning in our iterator of natural numbers.\n</code></pre>\n<p>javascript\nnaturalRowIterator.next() // 1\nnaturalRowIterator.next() // 2\nnaturalRowIterator.next(true) // 1\nnaturalRowIterator.next() // 2</p>\n<pre><code>\\\nIt's clear, how to handle such a parameter in a custom iterator, but what about generators? It turns out that generators support parameter passing!\n</code></pre>\n<p>javascript\nfunction* naturalRowGenerator() {\n    let current = 1;\n    while (true) {\n        const reset = yield current;\n        if (reset) {\n          current = 1;\n        } else {\n          current++;\n        }\n    }\n}</p>\n<pre><code>\\\nThe passed parameter becomes available as the result of the yield operator. Let's try to clarify this using the cursor approach. At the moment of creating the iterator, nothing has changed. Now, let's stop after the first `next` method call:\n</code></pre>\n<p>javascript\nfunction* naturalRowGenerator() {\n    let current = 1;\n    while (true) {\n        const reset = ▷yield current;\n        if (reset) {\n          current = 1;\n        } else {\n          current++;\n        }\n    }\n}</p>\n<pre><code>\\\nThe cursor is positioned after returning from the yield operator. With the next `next` call, the value passed into the function will set the value of the `reset` variable. But what happens to the value passed in the very first `next` call? It goes nowhere! If you need to pass an initial value to the generator, you can do so through the generator's arguments. Here's an example:\n\n\\\n</code></pre>\n<p>javascript\nfunction* naturalRowGenerator(start = 1) {\n    let current = start;\n    while (true) {\n        const reset = yield current;\n        if (reset) {\n          current = start;\n        } else {\n          current++;\n        }\n    }\n}</p>\n<p>const iterator = naturalRowGenerator(10);\niterator.next() // 10\niterator.next() // 11\niterator.next(true) // 10\n```</p>\n<h2 id=\"conclusion\">Conclusion</h2>\n<p>We have explored the concept of iterators and their implementation in JavaScript. Additionally, we have learned about generators, a syntactic construct for conveniently implementing iterators.</p>\n<p>\\\nAlthough I provided examples in this article with numeric sequences, iterators in JavaScript can solve a wide range of tasks. They can represent any data sequence and even many finite-state machines. In the next article, I would like to discuss how generators can be used to build asynchronous processes (coroutines, goroutines, CSP, etc.).</p>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Qualcomm Bringing Snapdragon X Series To Mini PCs For As Little As ~$600 USD","url":"https://www.phoronix.com/news/Qualcomm-Snapdragon-X1-Mini-PCs","date":1736181181,"author":"Michael Larabel","unread":true,"content":"Following last year's launch of Qualcomm Snapdragon X1 powered laptops, Qualcomm is using CES 2025 this week in Las Vegas for promoting the Snapdragon X Series for mini desktop form factor PCs. But the Linux support and performance out of these forthcoming Snapdragon X Platform mini PCs remain to be seen...","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Ambitious Projects Could Reshape Geopolitics","url":"https://spectrum.ieee.org/geopolitics-and-technology","date":1736181052,"author":"Harry Goldstein","unread":true,"content":"<p>This year’s technological milestones could determine long-term outcomes</p>","flags":null,"enclosureUrl":"https://spectrum.ieee.org/media-library/eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpbWFnZSI6Imh0dHBzOi8vYXNzZXRzLnJibC5tcy81NTM4NDA2OS9vcmlnaW4ucG5nIiwiZXhwaXJlc19hdCI6MTczNzk0NjAwNn0.oQS2Z-k2Yz8i-7E0VFdF0PFZ4CDmeL1ZYib3wfSymCg/image.png?width=600","enclosureMime":""},{"title":"Can WebFlux Be Better Than Spring MVC? What You Need to Know","url":"https://hackernoon.com/can-webflux-be-better-than-spring-mvc-what-you-need-to-know?source=rss","date":1736180714,"author":"João Esperancinha","unread":true,"content":"<h2 id=\"1introduction\">1. Introduction</h2>\n<p>Many times, we need to back up certain claims we make in software development. More often than not, we need to show it very clearly to stakeholders, businesses, and management, the value of our claims. Many times we see a true value in changing some technology, and we see long-term benefits in doing so. Whether the improvements we see are performance-related, code readability, maintainability, or modularity, what actually matters to business are other parameters. These can be anything like fast delivery, feature enabling, image, user experience, profits and business growth. In this way, if we need to make an argument on why we should make a step towards a new technology, we need to be able to justify that. Many times this is not an easy task. We have to clearly identify the business goals and make it clear that our suggestions will make remarkable improvements.For some time I’ve seen talks about reactive programming and my focus has always been WebFlux. RxJava is on the horizon but that will be the subject of another article.In this article, I assume a few things about the readers. Experience and knowledge about MVC and reactive architectures are very important. Therefore the basics are very important. We will go through the implementation of two Spring boot services. One follows a blocking Spring MVC architecture and the other one follows a Spring WebFlux Reactive implementation in MVC. For the purpose of simplifying semantics, I’ll be using MVC to refer to the blocking MVC model and WebFlux to refer to the reactive MVC model. These implementations are all built with Kotlin. The unit tests are implemented with Spock and the language used is Groovy. These languages are very similar to Java and so if you don’t know them, but you do know Java, then you can be very much assured that you can fully understand what’s happening.To keep matters simple, in this article, although we are going to look at some differences between the implementation of a WebFlux application and an MVC application, our tests will only be focused on the artist table. As a follow up to this article I will further explain the rest of the application and further expand the example. For now let’s focus on version 1.0.0.Let’s imagine that we have to present a case in favour of Reactive Programming. We want to suggest migrating our old blocking MVC application to a reactive non-blocking MVC WebFlux application. We explain everything we know about non-blocking applications. We explain the magic of not blocking the main thread. We explain how this will in the end improve performance and how wonderful it will be to be able to process more requests. In our project there are different players and very often, the gap between the engineers and business needs adjustment. This is where benchmarking comes in. What we need to do in these cases is to clearly show business the benefits of changing to WebFlux. Talking about the servlet thread, multithreading, the subscriber pattern, the spawning of different threads per subscriber, vertical scaling, and JVM, can be a good approach. However, most of the time, what we need is to actually be able to point out in the shortest time possible the benefits of doing this. How do we do this? That’s what we are going to see in this article. Just before we continue, please consider the difference between thinking about how many requests we can get per minute and how long a request takes. We will see later on, why is this so important to keep in mind just now.Reactive programming with WebFlux allows us to scale vertically up, from within the VM with small independent threads. Another very important aspect of this kind of application is that its producers don’t overwhelm consumers. In other words, given that it’s all event-driven, the small threads that are created by the publishers will trigger the subscriber when needed. Finally, it’s important to note that with Webflux, our programming style is declarative and not imperative. This means that our code doesn’t get executed in the main thread which normally allows us to debug our code sequentially.</p>\n<h2 id=\"2development\">2. Development</h2>\n<h3 id=\"21environmentsetup\">2.1. Environment setup</h3>\n<p>In order to be able to run this application and perform the benchmarking tests. Aside from the basic setup, we need to have JMeter installed. We will go through that in this article.We will be looking at the implementation of two Spring boot applications. One will be implemented with the old MVC model and the other with a new WebFlux model. This is how it looks after running docker-compose:</p>\n<p><a href=\"https://github.com/jesperancinha/sea-shell-archiver/\">   <img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fu5xxijsckqcypqeisrz5.jpg\" alt=\"\" /></a></p>\n<h3 id=\"22structure\">2.2. Structure</h3>\n<p>Let’s now have a look at the root modules and folders of the main project we will be looking at:</p>\n<ul>\n<li>concert-demos-gui — not available for this project yet. This project will be completed in the follow-up article where we will dive deeper into WebFlux and its paradigms.</li>\n<li>concert-demos-rest-service-mvc — Our Spring Boot MVC application.</li>\n<li>concert-demos-rest-service-webflux — Our WebFlux application.</li>\n<li>concerts-demos-data — Data repo where our DTO (Data Transfer Objects) reside. This is where our REST contract is defined and its common for both applications.</li>\n<li>docker-psql — The definition and files for our custom Postgres image. Here we will define two databases: concertsdb-mvc and concertsdb-webflux. They are separate in order to make more reliable test results.</li>\n<li>jmeter — All JMeter configuration files location. Here we can also find the test results which will allow us to draw conclusions at the end of this article.</li>\n</ul>\n<h3 id=\"23ermodel\">2.3. ER Model</h3>\n<p>For this article, I’ve created a concert management tool. The features expected are only at least to be able to save an artist on a database. In this case, we will work with two different databases running on our local PostgreSQL server. One database will serve the MVC (Model View Controller) typical architecture and the other database will serve the WebFlux architecture. The latter is one of the many implementations of a reactive programming architecture. Although both databases serve different services, they will share the same model.Let’s start by examining the ER models of both applications:</p>\n<p><a href=\"https://github.com/jesperancinha/sea-shell-archiver/\">   <img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fojzbujean68lkddco65v.jpg\" alt=\"\" /></a></p>\n<p>As you can see, this is a very simple model in which we start out with a concert. Further, we have a number of listings per concert. When doing this, we are saying that our concert will have listings and each listing can be part of many concerts. This is in other words a <code>many to many</code> relation. A concert listing is essentially a set of an artist, a lyric of one music which we should know by heart during the concert, and a complete list of music the artist will play. Music can also be part of different listings and in fact it can also be sung and played by different artists. This is the reason why the relation between the listing and the music is also a <code>many to many</code>.</p>\n<h3 id=\"24springmvcvswebflux\">2.4. Spring MVC vs WebFlux</h3>\n<p>In my previous article Reactive Programming applied to Legacy Services — A WebFlux example, I explain a few workarounds to make a fully reactive application connected to SOAP services. Although this may have some use to organizations with legacy software, one important step that the article doesn’t have is a reactive data source. Our data source in that article was only a soap service that we, very simply said, wrapped around the Spring WebFlux architecture. In this article, we are going to actually see a completely reactive Web Application using R2DBC.Both architectures can follow an Onion model or a Ports and Adapters architecture. We are going to go through an implementation which uses common rules for both architectures. Also, bear in mind that although the complete applications allow us to save concerts, listings, music and artists, our focus for this article is the Artist table. So we are going to focus on the creation and retrieval of artists for both applications.Perhaps the best way to begin this is just to have a look at the repository layer. Let’s have a look at the MVC implementation (I’m purposely excluding the hashCode and the equals methods because of how long they are. They are also not relevant for this article).</p>\n<h3 id=\"241datamodel\">2.4.1 Data Model</h3>\n<p>First, let’s look at the artist data model :</p>\n<pre><code>@Entity\ndata class Artist(\n\n        @Id @GeneratedValue(strategy = GenerationType.IDENTITY)\n        var id: Long? = null,\n        val name: String? = null,\n        val gender: Gender? = null,\n        val careerStart: Long? = null,\n        val birthDate: String? = null,\n        val birthCity: String? = null,\n        val country: String? = null,\n        val keywords: String? = null\n\n) {}\n</code></pre>\n<p>\\\nIn Spring MVC, we have to identify which parameter is the primary key, how the id’s are going to be generated and of course we have to specify that our POJO (Plain Old Java Object) is properly identified by Spring Data JPA(Hibernate inside). This is done by stereotyping our POJO with @Entity and setting up our id annotated with <a href=\"https://dev.to/id\">@id</a> and @GeneratedValue.Let’s compare this implementation with the WebFlux implementation:import org.jesperancinha.concerts.types.Genderimport org.springframework.data.annotation.Id</p>\n<pre><code>data class Artist(\n        @Id var id: Long? = null,\n        val name: String,\n        val gender: Gender,\n        val careerStart: Long,\n        val birthDate: String,\n        val birthCity: String,\n        val country: String,\n        val keywords: String\n\n) {}\n</code></pre>\n<p>\\\nThe first difference we notice is the absence of the @Entity annotation and we also don’t see any id generation specific annotations. This is just the way R2DBC is currently implemented. In its current state, we will see that many of the annotations we love to use with JPA/Hibernate are just not there. Many reasons can be pointed out to this, but apparently the most important one is that many of the MVC model annotations enter in direct conflict with the Reactive programming principles. We need to make our application as reactive as possible and in this way a couple of important basic things like delegating the id generation to the database native system or not having to specify that our POJO is also an @Entity are important aspects of this. However, probably the most striking difference between the two implementations is how we establish relations between data tables. Next we will have a look at the relation between the Listing and Artist tables. I know I mentioned that the focus of this article was the Artist table only. However, given that this article is also about making a fully reactive application, it is important to understand how we can make ER relations work.</p>\n<h3 id=\"242makingerwork\">2.4.2. Making ER work</h3>\n<p>Let’s compare two implementations side by side. First, let’s look at the MVC implementation of the table Listing:</p>\n<pre><code>@Entity\ndata class Listing(\n        @Id @GeneratedValue(strategy = GenerationType.IDENTITY)\n        var id: Long = 0,\n\n        @OneToOne\n        val artist: Artist? = null,\n\n        @OneToOne\n        val referenceMusic: Music? = null,\n\n        @ManyToMany(cascade = [CascadeType.ALL])\n        @JoinTable(\n                name = \"listing_music\",\n                joinColumns = [JoinColumn(name = \"music_id\")],\n                inverseJoinColumns = [JoinColumn(name = \"listing_id\")]\n        )\n        var musics: MutableSet&lt;Music&gt; = HashSet(),\n\n        @ManyToMany(mappedBy = \"listings\")\n        val concerts: MutableSet&lt;Concert&gt; = HashSet()\n) {}\n</code></pre>\n<p>\\\nLet’s focus on two important annotations @OneToOne and @ManyToMany. And now the WebFlux version:</p>\n<pre><code>data class Listing(\n        @Id var id: Long? = null,\n        val artistId: Long,\n        val referenceMusicId: Long\n) {}\n</code></pre>\n<p>\\\nThis latter implementation looks pretty simple, but we are missing our relations. This is part of the R2JDB architecture concept. If we need to consider relations, then we will have to consider dependencies. Dependent requests increase latency. They also can potentially mean more selects to the database. However, R2JDB does provide interesting ways of making unblocking dependency relationships. It also provides ways of issuing specific database queries, but we will look at these later. For now it’s only important to note that the annotations which define relations like one to many, one to one, <code>many to many</code> and <code>many to one</code> are not available in the reactive R2JDB way. We have to choose between getting this data from JOIN queries, or on the other hand from a complex publisher structurer.</p>\n<h3 id=\"243repository\">2.4.3. Repository</h3>\n<p>Repositories are in either case very simple and straightforward to implement. Let’s have a look at the MVC case:</p>\n<pre><code>interface ArtistRepository : CrudRepository&lt;Artist, Long&gt;\n</code></pre>\n<p>\\\nAnd now, the R2DBC case:</p>\n<pre><code>interface ArtistRepository : ReactiveCrudRepository&lt;Artist, Long&gt;\n</code></pre>\n<p>\\\nWe only see a slight difference here in that one repo is a CrudRepository and the other one is a ReactiveCrudRepository. Also notice that they are coming from different packages.</p>\n<h3 id=\"244service\">2.4.4. Service</h3>\n<p>As before, first a look into the MVC service:</p>\n<pre><code>@Service\nclass ArtistServiceImpl(private val artistRepository: ArtistRepository) : ArtistService {\n\n    override fun getAllArtists(): List&lt;ArtistDto&gt;? {\n        return artistRepository.findAll().map { toArtistDto(it) }\n    }\n\n    override fun createArtist(artist: ArtistDto): ArtistDto {\n        return toArtistDto(artistRepository.save(toArtist(artist)))\n    }\n}\n</code></pre>\n<p>\\\nAnd now the WebFlux case:</p>\n<pre><code>@Service\nclass ArtistServiceImpl(private val artistRepository: ArtistRepository) : ArtistService {\n\n    override fun getAllArtists(): Flux&lt;ArtistDto&gt;? {\n        return artistRepository.findAll().map { toArtistDto(it) }\n    }\n\n    override fun createArtist(artist: ArtistDto): Mono&lt;ArtistDto&gt; {\n        return artistRepository.save(toArtist(artist)).map { toArtistDto(it) }\n    }\n}\n</code></pre>\n<p>\\\nFor the moment let’s keep in mind that ArtistDto is a class that is being shared between both app implementations. In the WebFlux implementation we see that instead of returning objects or a list of objects, we are returning Flux and Mono. These are known as publishers. In WebFlux, publishers are also called the event handlers. Before diving into this, let’s look at how controllers are implemented.</p>\n<h3 id=\"245controllers\">2.4.5. Controllers</h3>\n<p>Finally let’s look at the controllers. First, let’s look at the controller implementation for the MVC case:</p>\n<pre><code>@RestController\n@RequestMapping(\"/concerts/data/artists\")\nclass ArtistControllerImpl(private val artistService: ArtistService) : ArtistController {\n\n    override fun getAllArtists(): List&lt;ArtistDto&gt;? {\n        return artistService.getAllArtists()\n    }\n\n    override fun createArtist(@RequestBody artistDto: ArtistDto): ArtistDto {\n        return artistService.createArtist(artistDto)\n    }\n}\n</code></pre>\n<p>\\\nAnd the implementation for the WebFlux case:</p>\n<pre><code>@RestController\n@RequestMapping(\"/concerts/data/artists\")\nclass ArtistControllerImpl(private val artistService: ArtistService) : ArtistController {\n\n    override fun getAllArtists(): Flux&lt;ArtistDto&gt;? {\n        return artistService.getAllArtists()\n    }\n\n    override fun createArtist(@RequestBody artistDto: ArtistDto): Mono&lt;ArtistDto&gt; {\n        return artistService.createArtist(artistDto)\n    }\n}\n</code></pre>\n<p>\\\nGiven that there is minimal business logic in our service layer, we don’t find anything to be different in our controller implementation. Considering this, we still need to understand how in WebFlux the data is finally sent back to the user. After making a call, the callback method of the controller, sends a publisher back to netty, instead of the plain DTO (Data Transfer Object). We then have netty which subscribes to these publishers and returns the callback data to the user. Our subscribers are Flux and Mono. They get executed after the callback has been made. The point here is to make this process independent of the main thread which normally handles requests in an MVC architecture. It is this difference we are going to explore in this article.</p>\n<h3 id=\"246dtos\">2.4.6 Dtos</h3>\n<p>Both applications use the same REST contract. The project. For our artist POST and GET endpoints, our REST contract is very simple and it is compatible with messages like the one in the following example:</p>\n<pre><code>{\n  \"name\": \"The singing sparrow Lursi\",\n  \"gender\": \"FEMALE\",\n  \"careerStart\": 1000,\n  \"birthDate\": \"a date\",\n  \"birthCity\": \"The Forrest\",\n  \"country\": \"The Kingdom Land\",\n  \"keywords\": \"Rap\"\n}\n</code></pre>\n<p>\\</p>\n<h2 id=\"3testingandbenchmarking\">3. Testing and benchmarking</h2>\n<h3 id=\"31jmeterinanutshell\">3.1. JMeter in a nutshell</h3>\n<p>JMeter is very easy to use. It’s available on a standalone version and its main purpose is to perform benchmarking tests. Many companies use it and the most interested parties are usually banks and companies which deal with sensitive information. Banks usually deal with an endless number of transactions worldwide. Fintech technologies very easily have to deal with large amounts of data in their AI (Artificial Intelligence) and ML (Machine Learning) systems. Companies that deal with data from sensors need also to be especially sharp when it comes to performance. We JMeter we can very easily make tests out of the box.In our case, we are going to create multiple artists and get them at the same time. In other words, our tests will consist of POST requests and GET requests.Let’s have a look at how we make this happen. Since JMeter is a very easy to use tool, I will just highlight the main points of my JMeter configuration.First, let’s configure the BlazeMeter Concurrency Thread Group (located in Threads (users)/Concurrency Thread Group):</p>\n<p><a href=\"https://github.com/jesperancinha/concert-demos-root/\">   <img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2F7w5wlpfngrqdwcbjv990.jpg\" alt=\"\" /></a></p>\n<p>What we are doing here is a process configuration. There will be up to 1000 threads generated for 1 whole minute and they will concurrently use each sampler and make requests to our services. The concurrency will linearly increase up to 1000.Let’s now configure our samplers. You can find them in Sampler/Http Request. They are basically all configured in the same way:</p>\n<p><a href=\"https://github.com/jesperancinha/concert-demos-root/\">   <img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fe78928dngzwe62bw0103.jpg\" alt=\"\" /></a></p>\n<p>Once the <code>GET</code> and <code>POST</code> for both MVC and WebFlux are configured (4 samplers), we still have to configure our post requests. Remember that information is being exchanged via JSON formatted messages and JSON is how our REST service contract is defined. We still need to define that in our post requests.For each of our POST samplers lets add Http parameters (find these in Config Element/Http Header Manager):</p>\n<p><a href=\"https://github.com/jesperancinha/concert-demos-root/\">   <img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fhpbgxcmvmfswogf0gxv9.jpg\" alt=\"\" /></a></p>\n<p>In the Body Data tab we’ll fill out the following value:</p>\n<pre><code>{\n  \"name\": \"The singing sparrow Lursi\",\n  \"gender\": \"FEMALE\",\n  \"careerStart\": 1000,\n  \"birthDate\": \"a date\",\n  \"birthCity\": \"The Forrest\",\n  \"country\": \"The Kingdom Land\",\n  \"keywords\": \"Rap\"\n}\n</code></pre>\n<p>\\\nHaving all our POST and GET requests configured, let’s now add graphical and table representations of our results. Let’s have a look at just two of them for now, because they are the ones we need to understand what we can achieve with WebFlux.Let’s configure the Response Time Graph (find this one in Listeners/Response Time Graph):</p>\n<p><a href=\"https://github.com/jesperancinha/concert-demos-root/\">   <img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fof1apk15ih137kwrrmfw.jpg\" alt=\"\" /></a></p>\n<p>With this configuration we will be able to see how long the average request takes.Next, we’ll configure the Summary Report (Listeners/Summary Report):</p>\n<p><a href=\"https://github.com/jesperancinha/concert-demos-root/\">   <img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fvxb6lbtydqd2fi7qa44g.jpg\" alt=\"\" /></a></p>\n<p>This listener will give us a lot of summarized information about our requests, but it will also give us the request count. This will be an indication of how much load our services could process.</p>\n<h3 id=\"32runningourtests\">3.2. Running our tests</h3>\n<p>We are now ready to run our unit tests. We will first run the MVC and the WebFlux tests separately and then we will run them together and see if we can reach any conclusion. For each test let’s make the world a better place and create thousands of <code>The singing sparrow Lursi</code> and see how many we can make and how performant the system actually is.The docker PostgreSQL image is already prepared to run these tests. If we want to run these tests without docker and against another PostgreSQL database we should increase its capacity for 2 important properties:</p>\n<p>\\</p>\n<pre><code>max_connections = 1500\nshared_buffers = 512MB\n</code></pre>\n<p>\\\nAfter this we need to restart our PostgresSQL service.</p>\n<h3 id=\"321mvcresults\">3.2.1. MVC Results</h3>\n<p>Let’s first examine the results of the MVC tests:</p>\n<p><a href=\"https://github.com/jesperancinha/concert-demos-root/\">   <img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Flklwkkpgv4zd0l31v3dy.jpg\" alt=\"\" /></a></p>\n<p>At this point we can notice that our post requests were blocked at some point. We also see that some requests were blocked up to 20 ms. It is still a barely acceptable response time, but still acceptable.Let’s see what the summary report says:</p>\n<p>\\</p>\n<pre><code>| Label            | Samples | Average | Min | Max   | Std. Dev. | Error Per | Throughput | Received KB/sec | Sent KB/sec | Avg. Bytes |\n|------------------|---------|---------|-----|-------|-----------|-----------|------------|-----------------|-------------|------------|\n| MVC Get Artists  | 1149    | 10235   | 78  | 33906 | 6867.42   | 0.261     | 18.86142   | 12214.32        | 2.52        | 663124.1   |\n| MVC Post Artists | 750     | 9812    | 9   | 33294 | 7136.17   | 0.267     | 12.38359   | 4.42            | 4.99        | 365.4      |\n| TOTAL            | 1899    | 10068   | 9   | 33906 | 6977.87   | 0.263     | 31.17305   | 12218.71        | 7.48        | 401371.1   |\n</code></pre>\n<p>\\\nAt this point, we should just take into account that there have been some negligible amount of errors and that we were able to send 1149 GET requests and 750 POST requests in total.</p>\n<h3 id=\"322webfluxresults\">3.2.2.. WebFlux Results</h3>\n<p>In the case of Webflux we get something like the following:</p>\n<p><a href=\"https://github.com/jesperancinha/concert-demos-root/\">   <img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fycoblgj3bm8w7fdjej0o.jpg\" alt=\"\" /></a></p>\n<p>At this point we also see that the load seems to have an effect on increasing latency in response times. However, this is a behavior that is interesting to note and it could be related to PostgreSQL itself or other elements in the pipeline between the request and the response. What is important here to notice in the response times, is that there doesn’t seem to be any difference between the first tests we ran for MVC and the WebFlux tests. One striking difference though is that looking at the graph, at no point were the requests blocked. This is already an achievement in favor of WebFlux. Let’s look at the summary report now:</p>\n<p>\\</p>\n<pre><code>| Label                | Samples | Average | Min | Max   | Std. Dev. | Error Per | Throughput | Received KB/sec | Sent KB/sec | Avg. Bytes |\n|----------------------|---------|---------|-----|-------|-----------|-----------|------------|-----------------|-------------|------------|\n| WebFlux GET artists  | 1444    | 8952    | 62  | 20804 | 6164.03   | 6.440     | 23.85830   | 7209.95         | 2.99        | 309451.4   |\n| WebFlux Post artists | 1013    | 8254    | 6   | 20088 | 6155.44   | 4.837     | 16.75876   | 7.39            | 6.43        | 451.6      |\n| TOTAL                | 2457    | 8664    | 6   | 20804 | 6170.09   | 5.779     | 40.59547   | 7217.33         | 9.41        | 182053.4   |\n</code></pre>\n<p>\\\nWe were able to send 1444 GET requests and 1013 POST requests in total. Let’s make our results more truthful and remove the error resulting requests. In this sense we have 1444–1444 * 0.0644 = 1351 GET Requests and 1013–1013 * 0.0483 = 964 POST requests. If we compare these results with WebFlux we see that for POST requests and for the same case we gained 1351–1149 = 202 GET requests. And finally we got 964–750 = 214/ This is a great gain. Considering that I ran these tests on a very average laptop (Google Chrome Notebook ASUS C302C). This is already an indication of great things to come in a production environment</p>\n<h3 id=\"323mixedresults\">3.2.3. Mixed Results</h3>\n<p>\\\nNow let’s have a look at what could happen when we run both applications in an environment where instead of using separate databases, they are using the same server. In this case I ran these tests with up to 800 concurrent threads to avoid errors.This is our result:</p>\n<p><a href=\"https://github.com/jesperancinha/concert-demos-root/\">   <img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fs0vf5klu58mix731sm3c.jpg\" alt=\"\" /></a></p>\n<p>If we look at our results, we may conclude that the response times of WebFlux are faster. Unfortunately, if we run these tests multiple times we’ll see that performance changes a lot depending on when these tests are run.Since we cannot take a lot of conclusions with this results, let’s have a look at the summary table:</p>\n<p>\\</p>\n<pre><code class=\"javascript language-javascript\">| Label                | Samples | Average | Min | Max   | Std. Dev. | Error Per | Throughput | Received KB/sec | Sent KB/sec | Avg. Bytes |\n|----------------------|---------|---------|-----|-------|-----------|-----------|------------|-----------------|-------------|------------|\n| WebFlux GET artists  | 1818    | 1714    | 7   | 22403 | 2846.73   | 0.000     | 39.69346   | 4512.75         | 5.31        | 116418.6   |\n| MVC Get Artists      | 1510    | 3320    | 7   | 16520 | 3516.68   | 0.066     | 33.09589   | 5812.04         | 4.42        | 179826.8   |\n| WebFlux Post artists | 1394    | 1425    | 4   | 14886 | 2597.78   | 0.000     | 30.97984   | 10.26           | 12.49       | 339.1      |\n| MVC Post Artists     | 1179    | 2813    | 5   | 20344 | 3265.32   | 0.000     | 26.18371   | 8.69            | 10.56       | 340.0      |\n| TOTAL                | 5901    | 2276    | 4   | 22403 | 3160.81   | 0.017     | 128.35795  | 10282.47        | 32.26       | 82030.3    |\n</code></pre>\n<p>\\\nWhat we get from this table is the same as in the individual cases. In this case the error percentage is negligible. For the GET requests we get an increase of 1818–1510 = 308. And finally for the POST requests we get an increase of 1394–1179 = 215.</p>\n<h2 id=\"4conclusion\">4. Conclusion</h2>\n<p>As we have seen through our experiment, determining whether WebFlux is the right option for a potential architectural change, can be difficult to determine. Fortunately we can easily determine the benefits of such a change by measuring performance.In this article we have seen a way to easily build a Reactive application with just one table. We have compared response times and capacity between an MVC architecture and a WebFlux architecture.After measuring the results we couldn’t really defend WebFlux in respect to response times. However, load wise, our WebFlux application was able to process many more requests in one minute.With these results, we no longer need to present our solution in a very technical way. The only thing we need to do is to explain that a reactive application under the same conditions will be able to process many more requests than an MVC application.</p>\n<p>\\\nLet’s go through two examples of running MVC applications:</p>\n<hr />\n<p>Example 1: A banking application is being used by a class of customers that possesses a high volume bank account. It’s an application not very often used, but it means a lot to the bank. It must perform well and it must be available all the time. The average use is about 500 times a week. Would this be an example to use Reactive Programming?</p>\n<h2 id=\"rreactiveprogrammingisalwaysagreatthingtouseinthiscasehowevertheapplicationisalreadyworkingtherewillprobablybenoperformanceimprovementtherearejustnotenoughrequeststochallengetheblockingmvcarchitectureitsalreadyrunningintherearenobenefitsandjustalotofworktodoitwillbeadelighttodevelopersbutanexpensiveprojecttobusinessthereisnoreasontomakethischangehere\">R: Reactive Programming is always a great thing to use. In this case, however, the application is already working. There will probably be no performance improvement. There are just not enough requests to challenge the blocking MVC architecture it’s already running in. There are no benefits and just a lot of work to do. It will be a delight to developers, but an expensive project to business. There is no reason to make this change here.</h2>\n<p>Example 2: A company which receives massive amounts of data from sensors placed around buildings, needs to be as fast as possible. There is a high demand for performance. The application it is running needs to provide time-series data in a way that their equipment reacts as fast as possible to data changes. Can this example be an example to migrate to a Reactive programming model?</p>\n<h2 id=\"rcertainlyifweneedtochoosebetweenstayingmvcorgoingmvcreactivethenweshouldgoreactiveinthiscaseasprovenbyourresultsreactiveapplicationscantakeupmuchmoreloadandstayresponsiveformuchlongerthisisavalidconcernforsuchapplicationsprocesseswhichneedtohandlesomuchloadsimultaneously\">R: Certainly! If we need to choose between staying MVC or going MVC reactive then we should go reactive in this case. As proven by our results, reactive applications can take up much more load and stay responsive for much longer. This is a valid concern for such applications/processes which need to handle so much load simultaneously.</h2>\n<p>In other words, we have seen the three most important pillars of Reactive Applications in action. We have seen that a reactive implementation such as WebFlux can be much more resilient than a blocking MVC architecture implementation. We have seen that in cases of high load, our application was still responsive. We have also seen how the asynchronous nature of WebFlux works in real-time.I have placed all the source code of this application in <a href=\"https://github.com/jesperancinha/concert-demos-root/tree/1.0.0\">GitHub</a>I hope that you have enjoyed this article as much as I enjoyed writing it.I’d love to hear your thoughts on it, so please leave your comments below.Thanks in advance for your help, and thank you for reading!</p>\n<h2 id=\"5resources\">5. Resources</h2>\n<ul>\n<li><a href=\"https://www.reactivemanifesto.org/\">Reactive Manifesto</a></li>\n<li><a href=\"https://spring.io/guides/tutorials/spring-boot-kotlin/\">Spring Boot Kotlin</a></li>\n<li><a href=\"https://dimitr.im/reactive-relational-databases-r2dbc-spring\">Reactive relational databases with R2DBC and Spring</a></li>\n<li><a href=\"https://r2dbc.io/\">R2DBC</a></li>\n<li><a href=\"https://www.ict.social/kotlin/oop/date-and-time-in-kotlin-creating-and-formatting\">Lesson 11 - Date and Time in Kotlin - Creating and formatting</a></li>\n<li><a href=\"https://github.com/spockframework/spock-example\">Spock Example</a></li>\n<li><a href=\"http://jmeter.apache.org/\">JMeter</a></li>\n<li><a href=\"https://jmeter-plugins.org/wiki/ConcurrencyThreadGroup/\">JMeter's Concurrency Thread Group</a></li>\n<li><a href=\"https://jmeter-plugins.org/wiki/PluginsManager/\">JMeter's Plugin Manager</a></li>\n<li><a href=\"http://blazemeter.com/?utm_source=jmplinnerpages&utm_medium=cpc&utm_content=jmpininnerpgs&utm_campaign=JMeter%2BPlug%2BIn%2BWiki\">Blaze Meter</a></li>\n<li><a href=\"https://stackoverflow.com/questions/30778015/how-to-increase-the-max-connections-in-postgres\">How to increase the max connections in postgres?</a></li>\n<li><a href=\"https://stackoverflow.com/questions/3602450/where-are-my-postgres-conf-files\">Where are my postgres *.conf files?</a></li>\n</ul>\n<p>\\</p>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Can You Apply Reactive Programming to Legacy Services? This WebFlux Example Says You Can","url":"https://hackernoon.com/can-you-apply-reactive-programming-to-legacy-services-this-webflux-example-says-you-can?source=rss","date":1736180386,"author":"João Esperancinha","unread":true,"content":"<h2 id=\"1introduction\">1. Introduction</h2>\n<p>The concept of reactive programming can be traced way back to the mid-60s. It’s a declarative programming model or programming paradigm that is mainly concerned with the handling of asynchronous data streams and the propagation of data through transformations with certain determined orders of execution. The term was invented by Erik Meijer probably around 2010. The history of reactive programming isn’t very clear as to where it started. However, we can see references to it when in old literature we find terms like “data flows”. These ended up being what we for a long time have been used to call and refer to as streams. Data flows as such were a part of another programming paradigm then called dataflow programming. This term was invented by Jack Dennis and his graduate students in the 1960s at MIT. Reactive programming is sometimes referred to as Dataflow programming on steroids. If you’d like to know more about the history of Reactive programming, I placed a lot of links in the resource repo of this article. Please have a look at them at the end of this article.</p>\n<h2 id=\"2reactiveprogrammingingeneral\">2. Reactive Programming in General</h2>\n<p>Reactive programming has many implementations, and they are all based on the observer pattern. In reactive programming terms, this is also known as the publisher-subscriber pattern. Before the publisher, there is a producer of events. This essentially is the bridge between the triggered event and the publisher. Once a request comes in, the producer triggers the event handler. The publisher is an implementation of that. It processes and emits data without any knowledge of the receiver. The receiver is the entity that knows that data is coming through via a specific channel. It knows the type of data coming in. The receiver is known as the subscriber of that data and it basically waits for the data to be delivered. A subscriber is subscribed to a publisher.</p>\n<h2 id=\"3casestudy\">3. Case study</h2>\n<h3 id=\"31notes\">3.1. Notes</h3>\n<p>In this article, I’m explaining briefly what Reactive Programming looks like and what it is, before making a deep dive into the code. We will not need any major technological background to understand it. I am going to show an example, and we will try to see and identify the Reactive principles as we go along. In this article, I will go through problems found along with implementing reactive programming and the possible solutions. I will describe the pros and cons of each implementation. At the bottom of this tutorial, we will find the most plausible solution I found for the case I’m presenting.</p>\n<h3 id=\"32introduction\">3.2. Introduction</h3>\n<p>In many current running services across the globe, many companies are still using services from quite a long time ago. Some systems even still use the 8-inch (ca. 20 cm), <code>80Kb</code> disks. For these systems, the software is very outdated, very old, and the implications of changing it grossly outweigh the risks. This usually happens mostly due to economic and workload constraints. Applications for the military, airports, air companies, and banks sometimes are, more often than not, very much outdated. We have seen news of Airports still using Windows 3.11 and banks using <code>COBOL</code>. This is also a reason why software manufacturers are so busy with application transformations and the spread of the 12-factor application philosophy. They are offering other solutions to bring systems up to date to current realities and challenges. Many times this just cannot be done in one step, no matter how inspired we may feel about it.Let’s have a look at bank examples or even telecommunication companies. In my experience with Telecom and Banks, they many times do still work with SOAP services, WSDL service definitions, XSD’s, XLTS’s, and so forth. These are mostly inherited from systems like Siebel and SAP. From a technological perspective SOAP really only has the downside of giving a lot of overhead and package load. For the rest everything is debatable. But this isn’t the problem I want to zoom in. If these SOAP services were efficient, resilient, scalable, responsive, and fast enough, then discussions about them would really just boil down to aesthetics rather than anything else. Truth is that many times their design doesn’t really allow much flexibility and working around them can seriously complicate our development. Not only that, frequently SOAP services are designed with many dependencies in mind, many interdependent keys, different ports and methods, different types with the same name, and many other intricacies also seen in typical REST JSON-based services.In order to avoid any personal relation to any company I’ve worked within in the past, I have decided to make up an unrelated example. Let’s say we have a population where people live in different Shells. We call this our root element. Every shell has a slogan. In my example, there are 16 slogans, and they are all sentences from Cardi B’s rap solo in Maroon 5’s Girls Like You. Shells will have people and will gather costumes. For people, I picked up 16 different characters from Game of Thrones. Each costume has a top and a lower and that refers to the top clothing like a T-shirt and the lower clothing like some trousers. Each person will have a costume and an account with a value. Take note that I am not concerned in this example with validation, repeated data, or circular data. We are going to investigate the complexity of making sub-requests of a request in a Reactive Programming web application.This is a summarized overview of what we are going to look at:</p>\n<p><a href=\"https://github.com/jesperancinha/sea-shell-archiver/\">  <img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Ffum36mlygg3k8xlktx4c.jpg\" alt=\"blogcenter\" /></a></p>\n<p>\\\n\\\nIn the above picture, we can see that there is an event loop that handles the events. The events are produced by the REST controller. Afterward, they are handled by the event handler of the publisher. All our SOAP calls and requests are made here. At this point, we have left the servlet thread.One way to see this is that in our built-in application and at this point, we won’t be able to break any execution with any breakpoint outside the programmed consumers or any of the handlers. One way to look at this is by understanding that in a Reactive MVC model, our model is not returning data. Instead, it returns a publisher that later responds back to the subscriber in its own thread and then lets the subscriber reply back to the browser.The event has just been triggered. At that point, our <code>REST</code> controller has already built a publisher (Flux or Mono) and our service is now executing it. Netty is implementing our subscriber to execute the callback to the client via HTTP. We can only have one subscriber per publisher, but we can have many consumers that can be triggered in independent threads via a doOnNext method consumer implementation for example. We can find many other alternatives to doOnNext in the Web-Flux API. A publisher allows us to apply transformations in a similar way that lambdas do. We also have map and flatMap methods for example. This pipeline represents a series of declarative code transformations. We can apply it sequentially to our data. One of the very important things to remember is that nothing really happens until we have a subscriber. This is a very analogous thought to the idea of terminal operations in Java Lambdas. In our example application, we won’t find any explicit subscribers in our code. This is because Netty is our subscriber and its code resides underwater. If you are interested in seeing the code more deeply please investigate three important classes:</p>\n<p>\\</p>\n<ul>\n<li><p>reactor.core.publisher.FluxMapFuseable</p></li>\n<li><p>org.springframework.http.server.reactive.ChannelSendOperator</p></li>\n<li><p>reactor.netty.http.server.HttpTrafficHandler You’ll be able to create a breakpoint in between them and then get a better sense of what’s happening when executing the callback to the browser. In the following example, we can see that the method findLowerById returns a Mono. This is not a value. Instead, it is a publisher that Web-Flux understands and generates a specific independent thread for it to run.</p>\n<p>@Repository public class ShellLowerRepositoryImpl implements ShellLowerRepository {</p></li>\n</ul>\n<pre><code class=\"java language-java\">  private final LowersClient lowersClient;\n\n  public ShellLowerRepositoryImpl(LowersClient lowersClient) {\n      this.lowersClient = lowersClient;\n  }\n\n  public Mono&lt;Lower&gt; findLowerById(final Long id) {\n      return Mono.fromCallable(() -&gt; lowersClient.getLower(id))\n              .subscribeOn(single());\n  }\n\n  public Lower findLowerByIdBlock(Long lowerId) {\n      return lowersClient.getLower(lowerId);\n  }\n</code></pre>\n<p>}</p>\n<p>\\\nThis concludes my introduction. We will now dig into the code I’ve done and review a few major examples:</p>\n<ul>\n<li>Data Model</li>\n<li>Architecture Overview</li>\n<li>Making publishers</li>\n<li>Services</li>\n<li>In practice</li>\n<li>A reactive solution</li>\n<li>An immutable reactive solution</li>\n</ul>\n<p>\\\nBear in mind that this code is specifically made for tutorial purposes and given its complexity I will only explain the relevant parts to this tutorial.In this article, I’m not showing complete class implementations because of the fair complexity and size of the whole code. The code is in any case, available to see in more detail on GitHub.</p>\n<h3 id=\"33datamodel\">3.3 Data model</h3>\n<p>In order to understand which data we are trying to get, let’s first have a look at our data model:</p>\n<p><a href=\"https://github.com/jesperancinha/sea-shell-archiver/\">  <img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fgjv38adojw9ai60ntz9c.jpg\" alt=\"blogcenter\" /></a></p>\n<h3 id=\"34makingpublishers\">3.4. Making publishers</h3>\n<p>Creating publishers rely heavily on declarative programming techniques. Essentially what we are going to do is the implementation of the Observable pattern in several places of our application. In Spring Web-Flux that can be very easily done using Flow and Mono. These are two forms of Publishers. So we are going to declare what do we want to happen with our data once we receive it before our subscriber, Netty, can pick that up.I will guide us through the ShellRepositoryImpl class and another one in our repository layer. These should cover the concepts of using legacy code in a reactive way.All the publishers in our example are being made with code very similar to this:</p>\n<pre><code class=\"java language-java\">public Mono&lt;Shell&gt; findSeaShellById(final Long id) {\n    return Mono.fromCallable(() -&gt; shellsClient.getShell(id)).subscribeOn(elastic());\n}\n\npublic ParallelFlux&lt;Shell&gt; findAllSeaShells() {\n    return findAllShellIds()\n            .parallel(parallelism)\n            .runOn(elastic())\n            .map(shellsClient::getShell)\n            .runOn(single());\n}\n\npublic Flux&lt;Long&gt; findAllShellIds() {\n    return Mono.fromCallable(shellsClient::getAllShellIds)\n            .flux().flatMap(Flux::fromIterable);\n}\n</code></pre>\n<p>\\\nLooking at the findAllSeaShells method, we easily can see that the goal of this method is to retrieve all the shells in the repo. In this code, we make use of the shellsClient client. This client communicates with one webservice specifically responsible for the retrieval of SeaShells data. The first method in the lambda chain is the findAllShellIds method. The main highlight of this code above is the Mono.fromCallable. This is the function to use if we intend to call a method from a black-box. We call it black-box, because we know that, further down the line, we retrieve all Ids from an unknown implementation. We just know that we get a list of Ids but we are not interested in how it is implemented. The latter is the job of our legacy code . Our black boxes are our SOAP clients. The SOAP implementation simulates our unknown services and the clients are the adapters we’ve created. In such situations, we won’t be able to completely predict what and how the client responds. From the API we can read precisely how it works. From here we can see that the biggest advantage is that we can program this Mono to return null if it fails: “If the Callable resolves to null, the resulting Mono completes empty.”. Mono publishers are used in representing single objects. <code>Flux</code> publishers are used for lists of objects. The fromCallable method is implemented in the Mono publisher only. It would probably seem better to use the <code>Flux.fromIterable</code> method. However, by allowing a conversion from Mono to <code>Flux</code>, we are letting the <code>WebFlux</code> framework optimize the later execution and conversion from a List object to individual objects to the subscriber. A direct <code>Flux.fromIterable</code> conversion would skip that optimization step. This conversion to <code>Flux</code> is explicitly implemented with a flatMap method. The functions we use are very similar to Java Lambdas. We create them in a declarative way. Essentially we are declaring the chain of events that is going to happen using lambdas. Now that the publisher knows it needs to get a list of IDs, we need to map them to actual shells. At this point, we still preserve a one-to-one relationship. In other words for each Id, we have a shell. Therefore we have it very clear that we need to wait for the Id in order to process our following request. By default, the processing is sequential. We need parallel processing because we want our application to be as reactive and responsive as possible. As a consequence, we need to explicitly define in Flux that we are going to get our shells in a parallel fashion. This is where parallel comes into play. It is configurable with a custom parameter called sea.shell.parallelism. Here we can configure the maximum parallel threads we want to create. For <code>Flux</code> this is still not enough. After this, we need to specify the type of thread management we want and for this, we have different types available. In my example, I am using the elastic type. This is ideal because we are dealing with legacy code which potentially can be very slow. At the same time, in my example, we can have unlimited threads generated per person in shell request. From the API we have this definition: “Optimized for longer executions, an alternative for blocking tasks where the number of active tasks (and threads) can grow indefinitely”. Following this, we will get our Id. Notice that I am still talking in the future tense. We are still declaring code and nothing is happening. With our Id, we will be able to map that stream to another transformation. We will then get our actual Shell. This is our instance coming out of our soap client. Since we are running everything in parallel and it’s a small request can safely determine that our Scheduler is of a single type. From the definition, we have “Optimized for fast Runnable non-blocking executions”. Notice that because of all of the above our <code>Flux</code> is now of a <code>ParallelFlux</code> type.</p>\n<p>\\\nAll the other methods presented in this implementation are simple methods implemented in a very Naif way to get the data in a blocking way. Further in this article, we’ll have a look at differences in behavior.</p>\n<h3 id=\"35servicesimplementations\">3.5. Services Implementations</h3>\n<p>We’ll now look at different examples for our Services implementation. The idea here, to look at four different solutions, which then will be further subdivided into more sub-groups. Essentially we’ll be looking at a really bad solution and we’ll gradually improve to a better one. These implementations comprise the following implementation scenarios:</p>\n<p>\\</p>\n<ul>\n<li>traditional MVC approach</li>\n<li>mutable solution with loose running subscribers</li>\n<li>wrapping a blocking call</li>\n<li>awaiting for the loose subscribers</li>\n<li>wrapping futures and fork-joins</li>\n<li>one by one alternative</li>\n<li>mutable solution with coordinated publishers</li>\n<li>immutable solution with coordinated publishers</li>\n</ul>\n<p>\\\nI have prepared three service types in the module sea-shell-rest-service. SeaShellServiceImpl, SeaShellReactiveOneServiceImpl and SeaShellReactiveServiceImpl. They are all bad, but I think it’s important to delve into this because we’ll see different behaviors we want to avoid. All of them are different implementations of examples we could use to handle our data. The first implements a series of methods using a naif approach to getting our data all at once using futures and fork joins..The second is an example of how we could use a microservice approach, by making the client complete the chain. Finally, the last one is a complete reactive implementation using nothing but chained publishers. These are fundamental examples that will help us understand how Reactive Programming works. We will also gain a clear idea of the problems that we may face in seemingly “obvious and easy” solutions. The last is the example which in the end makes more sense to me to use. It resides in a separate module called sea-shell-service-immutable. I will also explain the reasons why I came to that conclusion.Let’s start by having a look <code>SeaShellServiceImpl</code>:</p>\n<p>\\</p>\n<pre><code class=\"java language-java\">@Value(\"${sea.shell.parallelism:20}\")\nprivate Integer parallelism;\n\n@Value(\"${sea.shell.delay.ms:100}\")\nprivate Integer delay;\n</code></pre>\n<p>\\\nAs we can see we have two inject properties: parallelism and delay. We already know what parallelism is. In regards to delay, this comes from a property called sea.shell.delay.ms in the application.properties file. We will see in detail what this property is about, but for the time being let’s look at all of the presented solutions. In this class, I’m using the naif word to represent the blocking methods. However, we can look at all of them as naif implementations. Let’s have a look at the methods implementations of this service. I will then guide us through the practical example with the running application. We’ll have a look at what we can learn from these examples.</p>\n<h4 id=\"351example1usingwebmvctraditionalmvcapproachmoduleseashellrestservice\">3.5.1. Example 1— Using Web Mvc (traditional MVC approach) — module sea-shell-rest-service</h4>\n<p>The blocking MVC approach to this problem doesn’t use any publishers in its implementation. In this method, we’ll basically perform all necessary queries by asking and waiting for the response. This uses the traditional Spring MVC architecture and its purpose in this exercise is to show us how this approach differs from a Reactive Programming approach. Note that I could have used here ForkJoin’s, <code>CompletableFuture</code>’s, <code>Future</code>’s, <code>Executor</code>’s, etc, to trigger parallelism. This is a more complicated option, which doesn’t add anything to a reactive programming way of building applications. It would still force us to wait for all sub-threads to finish before letting go of the main thread. It is represented by methods <code>getAllSeaShellsNaifBlock</code>, <code>getSeaShellNaifBlock</code> and <code>setMainRootElements</code>. These are all imperative programming examples:</p>\n<p>\\</p>\n<pre><code class=\"java language-java\">public List&lt;SeaShellDto&gt; getAllSeaShellsNaifBlock() {\n    return shellRepository.findAllSeaShellsBlock()\n            .parallelStream()\n            .map(SeaShellConverter::toShellDto)\n            .peek(this::setMainRootElements)\n            .collect(toList());\n}\n\npublic SeaShellDto getSeaShellNaifBlock(Long id) {\n    final SeaShellDto seaShellDto = SeaShellConverter\n            .toShellDto(shellRepository\n                    .findSeaShellBlockById(id));\n    setMainRootElements(seaShellDto);\n    return seaShellDto;\n}\n</code></pre>\n<p>\\\nHowever further in this article, I will discuss precisely the ForkJoin method and why it’s very unlikely that we would be able to make the method non-blocking in this way.</p>\n<h4 id=\"352example2usingconsumersmutablesolutionwithlooserunningsubscribersmoduleseashellrestservice\">3.5.2. Example 2— Using consumers (mutable solution with loose running subscribers) — module sea-shell-rest-service</h4>\n<p>Let’s look at <code>getShellById</code> in <code>SeaShellServiceImpl</code>:</p>\n<pre><code class=\"java language-java\">public Mono&lt;SeaShellDto&gt; getSeaShellById(Long id) {\n        return shellRepository.findSeaShellById(id)\n                .map(SeaShellConverter::toShellDto)\n                .doOnNext(consumerPersons())\n                .doOnNext(consumerCostumes());\n}\n</code></pre>\n<p>\\\nIt gets a shell, creates its matching <code>Dto</code> and then tries to change the Dto further using a chain of consumers. If we look inside any of the consumer methods we’ll see an implementation of a subscriber. This subscriber is the last destination of the data being sent through. Notice also that the data type doesn’t change through the doOnNext methods. If we look in detail into the implementation we see that I’m filling up all the chained node tree of a Shell with its Person’s, Costume’s, Account’s, Top’s and Lower’s. Essentially I’m trying to get a complete Shell across and returning a ShellDto. Unfortunately, although the idea behind it seems good, it goes against Reactive Programming principles and it does not guarantee that the objects are returned completely filled with data anyways. It goes against Reactive Programming principles because we are thinking about waiting for the Person and Costumes and all its underlying needed methods to make all their calls and fetch results. This may or may not happen depending on the time the doOnNext is running and the time the Mono is running.</p>\n<h3 id=\"353example3almostreactivewrappingablockingcallmoduleseashellrestservice\">3.5.3. Example 3 — Almost reactive (wrapping a blocking call) — module sea-shell-rest-service</h3>\n<p>Looking at example 2, you may have had this idea: “Why not make the naif implementation multithreaded and then wrap up that method with a publisher?” Truth is, we could, and in reality, that would indeed be a non-blocking example. We would get all the data in one go, and we would not block the main thread. Unfortunately for this solution, Reactive Programming also means fast, scalable, and more importantly very, very responsive. With this approach, we are still making the user wait, although in a different way, for all the requests to be done. Please look at the solution implemented in <code>getAllSeaShellsReactiveBlock</code>:</p>\n<p>\\</p>\n<pre><code class=\"java language-java\">public ParallelFlux&lt;SeaShellDto&gt; getAllSeaShellsReactiveBlock() {\n    return Mono.fromCallable(this::getAllSeaShellsNaifBlock)\n            .flux().flatMap(Flux::fromIterable)\n            .parallel(parallelism)\n            .runOn(elastic());\n}\n</code></pre>\n<p>\\\nIn this example, we moved the problem out of the main thread that waits for the soap call to be done. However, we only re-located it to the single thread in the event loop. Blockhound will confirm that however, it has become a non-blocking method. However, in this way, we are letting the responsibility of dealing with this thread blocking system on ourselves. WebFlux is only responsible to essentially wrap this otherwise blocking method.</p>\n<h3 id=\"354example4awaitingreactiveapproachawaitingfortheloosesubscribersmoduleseashellrestservice\">3.5.4. Example 4 — Awaiting reactive approach(awaiting for the loose subscribers) — module sea-shell-rest-service</h3>\n<p>Take a look at the differences between getAllSeaShellsReactiveWithDelay and getAllSeaShells. See the delayElements method? From the definition “duration by which to delay each Subscriber.onNext(T) signal”. This means that each one of the signals will be delayed by a certain about of time. By default, we have established 100ms in this delay. We will see that this is enough to get complete data. Furthermore, we will also see how it actually works. Remember that being an upgrade of example 1, this is still not our solution:</p>\n<p>\\</p>\n<pre><code class=\"java language-java\">public Flux&lt;SeaShellDto&gt; getAllSeaShellsReactiveWithDelay() {\n    return getAllSeaShells()\n            .sequential()\n            .delayElements(ofMillis(delay))\n            .subscribeOn(elastic());\n}\n</code></pre>\n<p>\\\nLooking at the above code, we can see that basically, we are just guessing the time it will take for the getAllSeaShells() to complete. Further, we are always making sure that for each request, the request will wait for that specific time. In other words, we just made a non-blocking request that takes at least a specific time to return a response.</p>\n<h3 id=\"355example5wrappingandforkjoiningwrappingfuturesandforkjoinsmoduleseashellrestservice\">3.5.5. Example 5 — Wrapping and Fork Joining(wrapping futures and fork-joins) — module sea-shell-rest-service</h3>\n<p>Up until here, we have made no mention of multithreading. Now we are going to do just that. In this same class let’s have a look at method <code>getSeaShellCostumesForkJoinTask</code>:</p>\n<pre><code class=\"java language-java\">public Flux&lt;SeaShellDto&gt; getAllSeaShellsReactiveWithForkJoins() {\n    return Flux.fromStream(shellRepository.findAllSeaShellsBlock().parallelStream()\n            .map(shell -&gt; {\n                final ForkJoinPool commonPool = new ForkJoinPool(100);\n                final SeaShellDto seaShellDto = SeaShellConverter.toShellDto(shell);\n                final Stream&lt;ForkJoinTask&lt;SeaShellPersonDto&gt;&gt; personDtoStream =\n                        commonPool.invoke(getSeaShellPersonsForkJoinTask(commonPool, seaShellDto));\n                final Stream&lt;ForkJoinTask&lt;SeaShellCostumeDto&gt;&gt;\n                        costumeDtoStream = commonPool.invoke(getSeaShellCostumesForkJoinTask(commonPool, seaShellDto));\n                seaShellDto.setPersons(personDtoStream.map(ForkJoinTask::join).collect(toList()));\n                seaShellDto.setCostumes(costumeDtoStream.map(ForkJoinTask::join).collect(toList()));\n                return seaShellDto;\n            }));\n}\n</code></pre>\n<p>\\\nIn this method, we are using a from stream method. Notice that there is a ForkJoinPool. If we run the unit tests and see how they are implemented:</p>\n<pre><code class=\"java language-java\">@Test\npublic void findAllCompleteSeaShellsReactiveWithForkJoins_onCall_thenBlocking() {\n    assertThrows(WebServiceException.class, () -&gt; delay(Duration.ofSeconds(1))\n            .doOnNext(it -&gt; seaShellService.getAllSeaShellsReactiveWithForkJoins())\n            .block());\n}\n</code></pre>\n<p>\\\nThe exception we’re catching here is <code>WebServiceException</code>. This exception is thrown by blockound in the chain when it finds a blocking call. We are using a publisher, the publisher is being used and yet, <code>Blockhound</code> is still saying that we have a blocking method. The only difference between this method and all the other methods is that we are using a <code>ForkJoinPool</code> within the wrapper. In this case, it seems that this happens because of where the ForkJoin pool is created. When a thread joins the commonPool, it will block the main thread. It’s as simple as that.</p>\n<h3 id=\"356example6areactiveclientonebyonealternativemoduleseashellrestservice\">3.5.6. Example 6 — A reactive client (one by one alternative) — module sea-shell-rest-service</h3>\n<p>One simple way of making everything reactive is to wrap up all your methods with publishers. Not much work is involved in this solution because we are only making sure that we pass the simple publishers we made in our repositories all the way to the controllers. Our services work almost as simple proxies. This means that they do have an extra change added. This is simply the conversion of the data to a <code>Dto</code>. Let’s take a look at an example in the <code>SeaShellReactiveOneServiceImpl</code> class:</p>\n<p>\\</p>\n<pre><code class=\"java language-java\">public Mono&lt;SeaShellDto&gt; getSeaShellById(Long id) {\n    return this.shellRepository.findSeaShellById(id)\n            .map(SeaShellConverter::toShellDto);\n}\n</code></pre>\n<p>\\\nIn this way, you can see that the only change is a map to a ShellDto. This is one of my elected solutions to consider when thinking about creating a reactive framework around legacy services.We can find an example of our reactive client in the future package. This client is implemented in class <code>SeaShellWebReactiveOneClient</code>. There is an implementation with a subscriber. In the end, we wait for 1 second in order to let the subscriber finish its work:</p>\n<pre><code class=\"java language-java\">private void consumeReactively() throws InterruptedException {\n    getAllSeaShellsReactively().subscribe(x -&gt; log.info(\"BLOCK-&gt;\" + x.toString()));\n    Thread.sleep(1000);\n}\n</code></pre>\n<h3 id=\"357example7afullyreactiveapproachmutablesolutionwithcoordinatedpublishersmoduleseashellrestservice\">3.5.7. Example 7 — A fully reactive approach(mutable solution with coordinated publishers) — module sea-shell-rest-service</h3>\n<p>In some cases, we may find it more convenient to make sure that we get a few important things:</p>\n<ol>\n<li>Performance</li>\n<li>All data at once</li>\n<li>Keep it non-blocking</li>\n<li>Keep it simple</li>\n<li>Achieve true parallelism</li>\n</ol>\n<p>\\\nAchieving an improvement in all of these points at the same points is highly unlikely. If we get all the data at once, we will reduce performance. If we want to keep it simple, then chaining everything together may work against us. To keep it non-blocking, we may be moving a lot of performance to the single thread that deals with everything. The best way to answer this is: Experience will tell us everything we need to know about these decisions. If after weighing all pro’s and con’s of taking a fully reactive approach, we are still convinced, then let’s look at how this would work.Let’s start with the example on <code>class SeaShellReactiveServiceImpl</code>:</p>\n<pre><code class=\"java language-java\">public ParallelFlux&lt;SeaShellDto&gt; getAllSeaShells() {\n    return shellRepository\n            .findAllSeaShells()\n            .map(this::fetchSeaShellPublisher).flatMap(Flux::from);\n}\n</code></pre>\n<p>\\\nThe <code>fetchSeaShellPublisher</code> is a method that returns a publisher that will start our publishing process. Notice that we are mapping a flux of SeaShells coming from our SOAP services. When mapping from a Publisher to another publisher, we will need to flatMap everything. Let’s keep this in mind before we move on. It’s important to understand that we are still only declaring and nothing has actually happened in terms of processing.Let’s have a look at <code>fetchSeaShellPublisher</code> in more detail:</p>\n<p>\\</p>\n<pre><code class=\"java language-java\">private Mono&lt;SeaShellDto&gt; fetchSeaShellPublisher(Shell seaShell) {\n    final SeaShellDto seaShellDtoReturn = SeaShellConverter.toShellDto(seaShell);\n\n    return zip(\n            fetchPersonsPublisher(seaShell, seaShellDtoReturn).subscribeOn(Schedulers.parallel()),\n            fetchCostumesPublisher(seaShell, seaShellDtoReturn).subscribeOn(Schedulers.parallel()),\n            (persons, costumes) -&gt; seaShellDtoReturn);\n}\n</code></pre>\n<p>\\\nSee that we are using the Mono.zip method. This is one of the many ways to chain publishers together. We are going to have a look at this one in particular. Later I may make a whole article about the improvement of this implementation. What’s important for now is to see the chaining of publishers in action. With the zip method we can chain publishers together and implement its result. A very nice feature of zip is that when we subscribe to the participating publishers on a parallel scheduler, they actually work in parallel. In our data model actually have a lot of pairs. In the root of the shell we have two elements. A list of persons and a list of costumes. At the root of our costumes, we have another pair. A top and a lower. In the root of person, yet another one. An account and a costume. Notice that costume in a person follows the same data model as a person.Let’s look at one of these two methods to see how the chain works. This is <code>fetchPersonsPublisher</code>:</p>\n<p>\\</p>\n<pre><code class=\"java language-java\">private Mono&lt;?&gt; fetchPersonsPublisher(Shell seaShell, SeaShellDto seaShellDtoReturn) {\n    return from(from(just(\n            seaShell.getPersons()).subscribeOn(parallel()).map(shellPersonRepository::findPersonsBlock).subscribeOn(parallel())\n            .map(persons -&gt; {\n                persons.forEach(person -&gt; seaShellDtoReturn.getPersons().add(SeaShellConverter.toShellPersonDto(person)));\n                return seaShellDtoReturn.getPersons();\n            }))\n            .thenMany(zip(\n                    fetchPersonAccountPublisher(seaShellDtoReturn).subscribeOn(parallel()),\n                    fetchPersonFullCostumePublisher(seaShellDtoReturn).subscribeOn(parallel()))));\n}\n</code></pre>\n<p>\\\nTake a moment to look at the thenMany method. This method sets up the first element in our person's publisher chain. We know that in a persons element we should pick up an account and a costume at the same time. As we now are aware, this is where the zip method comes in to essentially zip those two publishers together and in parallel as one single publisher! We should be able to easily interpret the rest of the code with this explanation.When all the chains are complete, we can make sure that our thread will run through multiple publishers in a non-blocking way. The returned publisher is a result of this chaining and it will be handled independently in one separate thread without interfering with the main thread. It will of course generate different threads and it will evidently generate parallelism. The difference is that no interference with the main thread will be made.</p>\n<h4 id=\"358example8afullyreactiveapproachimmutablesolutionwithcoordinatedpublishersmoduleseashellserviceimmutable\">3.5.8. Example 8— A fully reactive approach(immutable solution with coordinated publishers) — module sea-shell-service-immutable</h4>\n<p>\\\nWe finally reach our perfect solution. In the same way, as in the previous example, our goal is to make a fully reactive call. We already achieved that, however, we were not able yet to remove the side-effects of our code purely because we are taking advantage of mutability. With immutability, the whole code needs to change and the paradigm changes once again radically.In this case, the <code>getShellsById</code> method takes a different form:</p>\n<pre><code class=\"java language-java\">public Mono&lt;SeaShellDto&gt; getSeaShellById(Long id) {\n  return shellImmutableRepository.findSeaShellById(id)\n    .flatMap(shell -&gt;\n      zip(\n        shellPersonImmutableRepository\n                .findPersons(shell.getPersons().getPersonId())\n                .flatMap(person -&gt; personPublisher(person).subscribeOn(parallel()))\n                .sequential().collectList().subscribeOn(parallel()),\n        shellCostumeImmutableRepository\n                .findCostumes(shell.getCostumes().getCostumeId())\n                .flatMap(costume -&gt; costumePublisher(costume).subscribeOn(parallel()))\n                .sequential().collectList().subscribeOn(parallel()),\n        (persons, costumes) -&gt;\n                SeaShellDto.builder()\n                        .name(shell.getName())\n                        .scientificName(shell.getScientificName())\n                        .personIds(shell.getPersons().getPersonId())\n                        .costumeIds(shell.getCostumes().getCostumeId())\n                        .persons(persons)\n                        .costumes(costumes)\n                        .build()).subscribeOn(parallel())\n    );\n}\n</code></pre>\n<p>\\\nThe method is considerably large, but this is mostly because of the builder we are using. We first find a <code>Shell</code>. Then, with that <code>Shell</code>, we will find all persons and costumes. Each process will run in parallel and upon completion, the resulting two lists will be used to create a new Shell with the results of the previous Shell query. If you follow the way persons and costumes are created in this project, you will see the creation of different objects. With the mutable solution, we only changed the property. With this immutable solution, we need to create a whole new object every time we need an object with a different property. Using common Java POJOS’s we would also be able to create an example like this one, but it helps a lot to have a constraint against the usage of property changes. This is why I chose to use java records for this example, and so, our new <code>Shell</code> POJO takes a new form:</p>\n<p>\\</p>\n<pre><code class=\"java language-java\">public record SeaShellDto(\n        String name,\n        String scientificName,\n        String slogan,\n        List&lt;SeaShellPersonDto&gt; persons,\n        List&lt;SeaShellCostumeDto&gt; costumes,\n        List&lt;Long&gt; personIds,\n        List&lt;Long&gt; costumeIds) {\n\n    @Builder\n    public SeaShellDto {\n    }\n}\n</code></pre>\n<p>\\</p>\n<h3 id=\"36controllers\">3.6. Controllers</h3>\n<p>Let’s run our SOAP service and our SpringBoot Application to analyze this situation.</p>\n<p>\\</p>\n<ul>\n<li><p>Run the soap service:</p>\n<p>cd sea-shell-soap-wiremock/sea-shell-soap-service/target java -jar sea-shell-soap-service-0.0.0-SNAPSHOT-jar-with-dependencies.jar</p></li>\n</ul>\n<p>\\</p>\n<ul>\n<li><p>Run our Spring Boot service:</p>\n<p>cd sea-shell-service-spring-web-flux/sea-shell-rest-service/target java -jar sea-shell-rest-service-0.0.0-SNAPSHOT.jar</p></li>\n</ul>\n<p>\\\nLet’s study on more detail our four controllers: <code>SeaShellControllerImpl</code>, <code>SeaShellReactiveControllerImpl</code> and <code>SeaShellReactiveReactiveOneControllerImpl</code>. If we take a look at them, there are quite a few methods implemented. We’ll have a look at the reactions of all of these calls to our service. For every example please take a moment to review the consumer's chapter if you think you’ve missed something. We can use curl for this or our browser. For the purpose of readability and to make a faster assessment of each call I think it’s better to use a browser. I used Chrome and the JSONView plugin for this. In some examples, I need to return objects of different types. Coincidently they are always pairs and that’s why I’m using the Spring Data Pair type to return these objects.Example of <code>ParallelFlux</code>In order to have a clean start, I decided to create an example 0 to show a couple of basic things that happen when making a request to the back end.Let’s look at the getShellSlogans method. Make the following request:</p>\n<p>\\</p>\n<pre><code>http://localhost:8080/seashells/slogans\n</code></pre>\n<p>\\\nIn this method, I’m just mapping the results of a non-blocking call defined in method <code>getAllSeaShells</code> to its respective slogan. The reason I’m mapping them and not calling one method to get the slogan directly is so that we can see that, even though we have implemented it with several calls inside and several subscribers defined in the consumers, nothing changes in terms of performance. Now let’s check our logs. We should be able to see all the subtrees of the shells being called. In some cases the values are null, others empty and in other cases, the values are all there. In the following examples, I will explain this further. For the moment, The important part of this example is that our method is returning a <code>ParallelFlux</code>. In this case, the point is to see that we have achieved this and that every Pair we return is not following the actual order of Cardi B’s lyrics:</p>\n<p>\\</p>\n<pre><code class=\"json language-json\">[\n  {\n    first: \"Baltic tellin\",\n    second: \"I need you right here 'cause every time you call\"\n  },\n  {\n    first: \"Baltic tellin\",\n    second: \"I play with this kitty like you play with your guitar\"\n  },\n  ..\n]\n</code></pre>\n<p>\\</p>\n<hr />\n<p>We may get lucky and we may indeed get the whole lyrics right for the complete 16 slogan segment, but that is highly unlikely. We all know that Cardi B starts her rap with “Not too long ago, I was dancing for dollars (eeoow)”. What this shows is that ParallelFlux does not guarantee the order.</p>\n<h4 id=\"361example1\">3.6.1. Example 1</h4>\n<p>In our blocking MVC example, we are always sure to return our data completely. It has been implemented in a traditional blocking fashion. Still, it is important at this point to have a look at what happens behind the scenes in such a blocking processing type:</p>\n<p><a href=\"https://github.com/jesperancinha/sea-shell-archiver/\">  <img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2F7pzbwdqss0grl8oxxzdz.jpg\" alt=\"blogcenter\" /></a></p>\n<p>Comparing this model with the reactive programming model we see an enormous difference in complexity. The blocking model seems more simple. However, what happens, in this case, is that the main Servlet thread for each request is completely blocked until we get a response back from our SOAP service. This will limit the ability of the service to cope in scenarios where high availability from the server is required.</p>\n<h4 id=\"362example2\">3.6.2. Example 2</h4>\n<p>Let’s recall from the Services explanation that this example relies on the doOnNext consumer declarations to run. Let’s try calling this multiple times in our browser:</p>\n<pre><code>http://localhost:8080/seashells\n</code></pre>\n<p>\\\nIf we are lucky, we’ll be able to notice that sometimes we get all the data, but also that most o the time, much of the data is actually null! Let’s look at the following two sequence diagrams which explain what happens:</p>\n<p><a href=\"https://github.com/jesperancinha/sea-shell-archiver/\">  <img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fg9dfg8v38uu4ou7ajze6.jpg\" alt=\"blogcenter\" /></a></p>\n<p>\\\nAbove we can see a normal flow of data. We see that all subscribers are being called in parallel and that the doOnNext works perfectly and in sequence. By the time we get to our Netty subscriber, we are sure to get the seaShellDto object filled up with data.In most cases we won’t get the full data:</p>\n<p><a href=\"https://github.com/jesperancinha/sea-shell-archiver/\">  <img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fjs8hr2uyvcrs6pam3vwv.jpg\" alt=\"blogcenter\" /></a></p>\n<p>From the above, we see that the event call back has been emitted before the doOnNext consumers have ended their execution. In this case, the seaShellDto object has not been completely filled. Therefore we will be getting nulls.</p>\n<h4 id=\"363example3\">3.6.3. Example 3</h4>\n<p>Our almost reactive example encapsulates all our blocking implementations from Example 2 and creates a publisher with it. It becomes a non-blocking thread but still does not benefit from any parallelism. This is greatly the reason why such an easy approach is also so easily found to not be very efficient.</p>\n<h4 id=\"364example4\">3.6.4. Example 4</h4>\n<p>The waiting approach of example 4 basically allows the publisher to delay its execution for however amount of time is needed. We have set up 100ms in our example. We can also configure that.This is what happens:</p>\n<p><a href=\"https://github.com/jesperancinha/sea-shell-archiver/\">  <img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2F6la51fjsmpg86ay6mrzy.jpg\" alt=\"blogcenter\" /></a></p>\n<p>Notice that with the 100ms delay, we guarantee that all doOnNext consumers are executed. However, we are also guaranteeing that we have a waiting time of 100ms for whatever request we make from the front end. This has a detrimental effect on performance.</p>\n<h4 id=\"365example5\">3.6.5. Example 5</h4>\n<p>We could have gotten the idea that somehow, wrapping up a method in a publisher such as Mono or Flux, we would always create a non-blocking call. This is why I found the ForkJoin example a very good one. The act of joining a pool or submitting a Task is actually a blocking action on its own. This means that the simple fact that the ForkJoinPool is being used, renders the whole publisher a blocking publisher and blockhound will detect this publisher as being a blocking publisher.</p>\n<p><a href=\"https://github.com/jesperancinha/sea-shell-archiver/\">  <img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fooqwzykc785a6udlhq5d.jpg\" alt=\"blogcenter\" /></a></p>\n<p>In the above diagram, everything is as simplified as possible to get an overview as to what is happening behind the scenes. In this case, WebFlux cannot work independently of the main Servlet Thread per request.</p>\n<h4 id=\"366example6\">3.6.6. Example 6</h4>\n<p>In example 6, we looked into a one-by-one type of implementation. Although fully reactive, it requires an extensive amount of interaction between the client and the server. This is because filling out a form with a Shell, would require one request per object type. This means, just to give an example, that we would retrieve one request for the shell, plus the amount of costumes times two, plus the number of persons times 2 because of the accounts, plus all the costumes per person requests and so on. For one shell alone, the number of requests could be quite a lot. This could, however, be something useful in the front-end, for example, for a page that loads per piece of data, or for a page where data needs to be cached and doesn’t need to be shown imediatelly. However, in our case, we do want to get everything at once, which invalidates this solution</p>\n<h4 id=\"367example7\">3.6.7. Example 7</h4>\n<p>These examples match everything we discussed in our introduction. These two examples are non-blocking, completely WebFlux supported and they provide you with data as needed. They do have different paradigms but they have already been explained in point 3.5. In example 7, though paradigms changed and it’s important that we realize that in this implementation we have voided doing anything sequential. For example, we do not process pairs in the same thread or sub-threads. All the necessary threads in example 7, only fill up one object and they take the whole seaShellDto as a common shared resource. The following diagram is an overview of what happens during the processing of all publishers in example 7:</p>\n<p><a href=\"https://github.com/jesperancinha/sea-shell-archiver/\">  <img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2F9npr9wl4oiokaac21oth.jpg\" alt=\"blogcenter\" /></a></p>\n<p>With the above example, what I am trying to explain with all the arrows is that one chained block is dependent on the other and that in reality, they do wait for each other individually. For example, we cannot start requesting a Top if we don’t have a Costume. We can however ask for the Top individually without considering the Lower. These two are completely separate publishers, which constantly walk through the seaShellDto objects in order to fill it up. There are no arguments being passed around through the different publishers created with the zip function. This is why, for this example, I’ve place seaShellDto in a location where it can be globally accessible through all the different publishers.</p>\n<h4 id=\"368example8\">3.6.8. Example 8</h4>\n<p>In this final example, we look at the most perfect way to wrap our legacy service. In this case, we are using immutability. We will still take advantage of the usage of parallelizing the zip function. The difference is that we won’t be using any mutable variables. I wanted to explicitly show examples with the mutable parameters in order to illustrate different characteristics of programming in a reactive way with WebFlux. Java versions from Java 14 onwards, offer lots of possibilities and one of them is the usage of records. Records are just like classes, but they are immutable and they come with very convenient implementations of the hashcode and equals methods. Mutability has the enormous problem of potentially creating side effects and unpredictable code. Using records, we will be constantly creating new objects and returning them through the streams. The example of this implementation is located in a separate module at the root of the project. The name of the module is sea-shell-service-immutable. Since this solution is, at least in my view, the most perfect for our case, I have placed it in a completely separate module.</p>\n<h2 id=\"4listings\">4. Listings</h2>\n<h3 id=\"41restservices\">4.1. Rest Services</h3>\n<p><a href=\"http://localhost:8080/seashells\">http://localhost:8080/seashells</a></p>\n<p><a href=\"http://localhost:8080/seashells/%7Bid%7D\">http://localhost:8080/seashells/{id}</a></p>\n<p><a href=\"http://localhost:8080/seashells/slogans\">http://localhost:8080/seashells/slogans</a></p>\n<p><a href=\"http://localhost:8080/seashells/block\">http://localhost:8080/seashells/block</a></p>\n<p><a href=\"http://localhost:8080/seashells/block/%7Bid%7D\">http://localhost:8080/seashells/block/{id}</a></p>\n<p><a href=\"http://localhost:8080/seashells/reactiveblock\">http://localhost:8080/seashells/reactiveblock</a></p>\n<p><a href=\"http://localhost:8080/seashells/reactiveWithDelay\">http://localhost:8080/seashells/reactiveWithDelay</a></p>\n<p><a href=\"http://localhost:8080/seashells/reactiveWithForkJoins\">http://localhost:8080/seashells/reactiveWithForkJoins</a></p>\n<p><a href=\"http://localhost:8080/seashells/one/\">http://localhost:8080/seashells/one/</a></p>\n<p><a href=\"http://localhost:8080/seashells/one/%7Bid%7D\">http://localhost:8080/seashells/one/{id}</a></p>\n<p><a href=\"http://localhost:8080/seashells/one/person/%7Bid%7D\">http://localhost:8080/seashells/one/person/{id}</a></p>\n<p><a href=\"http://localhost:8080/seashells/one/costume/%7Bid%7D\">http://localhost:8080/seashells/one/costume/{id}</a></p>\n<p><a href=\"http://localhost:8080/seashells/one/account/%7Bid%7D\">http://localhost:8080/seashells/one/account/{id}</a></p>\n<p><a href=\"http://localhost:8080/seashells/one/top/%7Bid%7D\">http://localhost:8080/seashells/one/top/{id}</a></p>\n<p><a href=\"http://localhost:8080/seashells/one/lower/%7Bid%7D\">http://localhost:8080/seashells/one/lower/{id}</a></p>\n<p><a href=\"http://localhost:8080/seashells/reactive\">http://localhost:8080/seashells/reactive</a></p>\n<p><a href=\"http://localhost:8080/seashells/reactive/%7Bid%7D\">http://localhost:8080/seashells/reactive/{id}</a></p>\n<h3 id=\"42testrestservices\">4.2. Test Rest Services</h3>\n<p><a href=\"http://localhost:8080/seashells/reactive/rootCostume/%7BidTop%7D/%7BidLower%7D\">http://localhost:8080/seashells/reactive/rootCostume/{idTop}/{idLower}</a></p>\n<p><a href=\"http://localhost:8080/seashells/reactive/rootShell/%7BidPerson%7D/%7BidCostume%7D\">http://localhost:8080/seashells/reactive/rootShell/{idPerson}/{idCostume}</a></p>\n<p><a href=\"http://localhost:8080/seashells/reactive/rootCostumeSlowTop/%7BidTop%7D/%7BidLower%7D\">http://localhost:8080/seashells/reactive/rootCostumeSlowTop/{idTop}/{idLower}</a></p>\n<p><a href=\"http://localhost:8080/seashells/reactive/rootCostumeSlowLower/%7BidTop%7D/%7BidLower%7D\">http://localhost:8080/seashells/reactive/rootCostumeSlowLower/{idTop}/{idLower}</a></p>\n<hr />\n<h2 id=\"5conclusion\">5. Conclusion</h2>\n<p>With this article, my main goal was to walk us through the processes I’ve been through to discover Reactive Programming and most of its intricacies when using this programming paradigm to wrap legacy services that for one or another reason, we are not allowed to change. In the end, our example 8 seems to be the better approach for whatever we want to develop. This way of programming is heavily based on Publisher, Subscriber principles. This can make code slightly more difficult to understand but on the other hand, it provides the advantage of allowing the server to support more requests at the same time. Imperative programming means that you can follow the code along a debug line. With the principles of reactive programming, we are basing all of our code on declarative programming. We are thus, creating code that although it may improve efficiency, does also require more effort to understand, change and update. WebFlux provides a framework that mitigates the complexity issue very well. As we have seen making publishers isn’t difficult at all. Neither is understanding them. Furthermore, we can easily debug them even though not doing so in a traditional way. Reactive programming is probably more often than not, the best decision to make. Let’s enumerate some of the reasons to move to a Reactive Programming paradigm and in this case with WebFlux:</p>\n<p>\\</p>\n<ol>\n<li>High availability — Requests should not block each other,</li>\n<li>High volume — We need to be able manage high volumes of data</li>\n</ol>\n<p>\\\nThe simple answer to why do we need <code>Reactive Programming</code> is sometimes simplified as \"It’s just faster!\". As we were able to look in our previous examples, being faster is probably just a consequence of the server supporting more requests. An individual request will not present any difference. In fact, if we compare a simple request in a Web MVC application and the same one in a Reactive MVC application, we’ll probably see that the Web MVC request is actually faster on its own.If we are thinking about changing our <code>REST</code> service model, my best advice is to just try it out. Let’s make benchmarking tests. Check our needs. <code>Reactive Programming</code> and <code>WebFlux</code> are amazing <code>state-of-the-art</code> technologies that should be used if we are managing high amounts of data. If we are managing legacy systems it can also be a very good potential first step to make everyone start thinking about a possible migration of the whole system to a better one.Remember that <code>Reactive Programming</code> is only an aspect of Reactive Architecture. The Reactive Manifesto references resilience and availability. This is why <code>Reactive Programming</code> can be a part of a Reactive Architecture. It is not the only requirement. If we program reactively, it just means that we have contributed only to a very small part of a truly reactive architecture. There is still a long way to go before our system is truly <code>Reactive</code>.Let’s make a quick recap of the terms we saw. <code>Flux</code>, <code>ParallelFlux</code>, and <code>Mono</code> are often used as <code>publishers</code>. The <code>doOnNext</code> method declares <code>methods</code> to be executed after the publisher is done. The <code>subscriber</code> does not wait for them. Calling the <code>subscriber</code> allows us to implement <code>functions</code> that happen after the <code>publisher</code> is done with the eventHandler. The zip method, allows us to create one <code>publisher</code> out of others. The <code>thenMany</code> allow us to call another publisher after the current one, returning another publisher as a result. <code>ForkJoinTasks</code> do not work with <code>WebFlux</code>, because they use the main thread when joining the <code>ForkJoinPool</code>.I trust that sharing my experience and my project, helps anyone interested in <code>WebFlux</code> to understand how this whole process works. I also hope that the examples I’ve placed on <a href=\"https://github.com/jesperancinha/sea-shell-archiver/tree/2.0.0\">GitHub</a> can help you see the difference between different implementations. Take note that my idea of creating a publisher chain of publishers using the <code>zip</code> function is just one of the many options <code>WebFlux</code> provides for chaining <code>Publishers</code>.I hope you enjoyed this article as much as I did making it! Please leave a <a href=\"https://bsky.app/profile/jesperancinha.bsky.social\">review</a>, <a href=\"https://bsky.app/profile/jesperancinha.bsky.social\">comments</a>, or any feedback you want to give. I’m very grateful if you want to help me make this article better.I have placed all the source code of this application on <a href=\"https://github.com/jesperancinha/sea-shell-archiver/tree/2.0.0\">GitHub</a>.Thank you for reading!</p>\n<h2 id=\"6references\">6. References</h2>\n<ul>\n<li><a href=\"https://softwaregarden.dev/en/posts/new-java/records/vs-lombok-yet-again-with-builder-pattern/\">Java Records tortured with Lombok yet again (builder edition)</a></li>\n<li><a href=\"https://stackoverflow.com/questions/52591776/why-does-forkjoinpoolinvoke-block-the-main-thread\">Why does ForkJoinPool::invoke() block the main thread?</a></li>\n<li><a href=\"https://spring.io/blog/2019/03/06/flight-of-the-flux-1-assembly-vs-subscription\">Flight of the Flux 1 - Assembly vs Subscription</a></li>\n<li><a href=\"https://www.hanselman.com/blog/HanselminutesPodcast198ReactiveExtensionsForNETRxWithErikMeijer.aspx\">Hanselminutes Podcast 198 - Reactive Extensions for .NET (Rx) with Erik Meijer</a></li>\n<li><a href=\"https://docs.microsoft.com/en-us/previous-versions/dotnet/reactive-extensions/hh242985(v=vs.103)?redirectedfrom=MSDN\">Reactive Extensions</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=weWSYIUdX6c\">Reactive Programming by Venkat Subramaniam</a></li>\n<li><a href=\"https://repository.tudelft.nl/islandora/object/uuid:bd900036-40f4-432d-bfab-425cdebc466e/datastream/OBJ/download\">The Essence of Reactive Programming - TU Delft Repositories</a></li>\n<li><a href=\"https://dzone.com/articles/notes-on-reactive-programming-part-i-the-reactive\">Notes on Reactive Programming Part I: The Reactive Landscape by Dave Syer</a></li>\n<li><a href=\"https://www.scnsoft.com/blog/java-reactive-programming\">The essence of reactive programming in Java by Uladzimir Sinkevich</a></li>\n<li><a href=\"https://www.slideshare.net/Pivotal/dont-be-homer-simpson-with-your-reactor\">Don't be Homer Simpson with your reactor by Sergei Egorov</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=xCu73WVg8Ps\">Avoid Reactor Meltdown by Phil Clay on YouTube</a></li>\n<li><a href=\"https://github.com/philsttr/avoiding-reactor-meltdown\">Avoiding Reactor Meltdown by Phil Clay</a></li>\n<li><a href=\"https://chrome.google.com/webstore/detail/jsonview/chklaanhfefbnpoihckbnefhakgolnmc\">JsonView Chrome Plugin</a></li>\n<li><a href=\"https://howtodoinjava.com/spring-webflux/spring-webflux-tutorial/\">Spring WebFlux Tutorial</a></li>\n<li><a href=\"http://wiremock.org/docs/running-standalone/\">Wiremock Running as a Standalone Process</a></li>\n<li><a href=\"https://pivotal.io/application-modernization\">Move your apps to the cloud in weeks</a></li>\n<li><a href=\"https://12factor.net/\">The Twelve Factors</a></li>\n<li><a href=\"https://content.pivotal.io/slides/ddd-and-microservices-like-peanut-butter-and-jelly-matt-stine\">DDD and Microservices: Like Peanut Butter and Jelly - Matt Stine</a></li>\n<li><a href=\"http://www.reactive-streams.org/\">Reactive Streams</a></li>\n<li><a href=\"https://www.reactivemanifesto.org/\">Reactive Manifesto</a></li>\n<li><a href=\"https://www.bol.com/nl/p/hands-on-reactive-programming-in-spring-5/9200000084600333/?bltgh=pCsqVROC1Zv4I9xR0JRJfw.1.4.ProductTitle\">Hands on Reactive Programming in Spring</a></li>\n<li><a href=\"https://en.wikipedia.org/wiki/Intel_QuickPath_Interconnect\">QPI Architecture</a></li>\n<li><a href=\"https://itnext.io/how-to-make-legacy-code-reactive-2debcb3d0a40\">ITNext How to make legacy code reactive</a></li>\n<li><a href=\"https://github.com/eugenp/tutorials/tree/master/spring-5-reactive-security\">Spring 5 Reactive Security Example</a></li>\n<li><a href=\"https://github.com/reactor/BlockHound\">Block Hound</a></li>\n<li><a href=\"https://github.com/piczmar/lombok-tips-and-tricks\">Lombok Tips And Tricks</a></li>\n<li><a href=\"https://stackoverflow.com/questions/48181801/in-spring-boot-webflux-based-microservice-who-is-the-subscriber\">In spring boot webflux based microservice, who is the subscriber?</a></li>\n<li><a href=\"https://stackoverflow.com/questions/50795071/how-rest-endpoints-are-auto-subscribed-while-calling-from-browser-rest-client\">How REST endpoints are auto subscribed while calling from Browser/REST Client?</a></li>\n<li><a href=\"https://www.amazon.com/Reactive-Programming-Node-js-Fernando-Doglio/dp/1484221516\">Reactive Programming with Node.js</a></li>\n<li><a href=\"https://spring.io/projects/spring-data-r2dbc\">Spring Data R2DBC</a></li>\n<li><a href=\"https://stackoverflow.com/questions/35797731/exception-occurred-during-code-generation-for-the-wsdl-java-lang-noclassdeffou\">Exception occurred during code generation for the WSDL : java.lang.NoClassDefFoundError:</a></li>\n<li><a href=\"https://axis.apache.org/axis2/java/core/release-notes/1.6.4.html\">Apache Axis2 1.6.4 Release Note</a></li>\n<li><a href=\"https://archive.apache.org/dist/axis/axis2/java/core/1.6.4/\">Index of /dist/axis/axis2/java/core/1.6.4</a></li>\n<li><a href=\"https://yiingw.wordpress.com/2018/02/12/axis2-java-lang-noclassdeffounderror-org-apache-ws-commons-schema-utils-namespaceprefixlist/\">AXIS2 JAVA.LANG.NOCLASSDEFFOUNDERROR: ORG/APACHE/WS/COMMONS/SCHEMA/UTILS/NAMESPACEPREFIXLIST</a></li>\n<li><a href=\"https://discuss.circleci.com/t/upgrade-to-jdk12/29566/7\">Upgrade to JDK12?</a></li>\n</ul>\n<p>\\</p>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Industry Heavyweights Had a Lot to Say About Crypto's 2024","url":"https://hackernoon.com/industry-heavyweights-had-a-lot-to-say-about-cryptos-2024?source=rss","date":1736179646,"author":"Daniel McGlynn","unread":true,"content":"<p>What do all of the crypto industry's 2024 recap/2025 prediction reports have in common? And what are they all missing?</p>\n<p>\\\nFor the sake of brevity and holiday cheer, this issue will round up a series of recently published crypto industry reports.</p>\n<p>\\\nSome of the reports look back at what happened in 2024, while others look forward and try to predict what will happen in 2025.</p>\n<p>\\\nThey are all useful to varying degrees. Some are entertaining in the way that fortune-tellers are entertaining. At the same time, some are informative in that they give us a glimpse of what crypto firms and operators are thinking about.</p>\n<p>\\\nI’m sharing them because I think they will make good holiday week reading. As we enjoy the time between the old year and the new year, it feels like a chance to recheck our bearings and look at some of this stuff with a unique perspective.</p>\n<p>\\\nHere are a few high-level observations about themes that resonate across all of them:</p>\n<ul>\n<li><p>Everyone is super bullish that the crypto market cap will continue increasing in 2025. While there are some differences of opinion about how high the market goes, it is a shared sentiment that major crypto assets will reach new all-time highs, peaking in Q425. My take on this is to be cautious and skeptical.</p>\n<p><img src=\"https://cdn.hackernoon.com/images/xP5lHtN0vMf7waCL6tGSabhVnru2-2025-01-06T16:07:23.643Z-a4bfqj5zwkiqs285ca51a1v8\" alt=\"SOURCE: Bitwise \" /></p></li>\n</ul>\n<p>\\</p>\n<ul>\n<li><p>Memecoins were a big story in 2024 and will continue to be a story into 2025. One thing element to the <a href=\"https://www.danielmcglynn.com/memecoins-are-having-a-moment/\">memecoin mania</a> that we haven’t covered yet, but we will soon, is the combo of memecoins (or the monetization of attention) with AI agents (or the ability to automate finance), which will likely give rise to an entirely new way of deploying capital and follow trends with robot-like speed. Sidenote: Despite the hype, memecoins only represent a small fraction of the crypto market.</p>\n<p>\\</p>\n<p><img src=\"https://cdn.hackernoon.com/images/xP5lHtN0vMf7waCL6tGSabhVnru2-2025-01-06T16:07:23.647Z-qwjb1qvk4vsj5d8hp48uqc1j\" alt=\"SOURCE: Messari\" /></p></li>\n</ul>\n<p>\\</p>\n<ul>\n<li><p>Institutional finance will enter the crypto markets. The reports all give good reasons for this—more <a href=\"https://www.danielmcglynn.com/what-is-the-ethereum-etf/\">crypto ETFs</a>, friendlier regulations, a sense of the inevitable—but like the bullish sentiments shared above, plenty of things might derail the flood of new capital. We’ve certainly seen that in previous cycles. One wrinkle that gives this point more weight this time around is that governments now appear interested in acquiring crypto to create national <a href=\"https://www.danielmcglynn.com/what-is-a-bitcoin-strategic-reserve/\">bitcoin reserves</a>, which feels like a new dynamic.</p>\n<p>\\</p>\n<p><img src=\"https://cdn.hackernoon.com/images/xP5lHtN0vMf7waCL6tGSabhVnru2-2025-01-06T16:07:23.649Z-ahy10opds2v634ogus9whr4s\" alt=\"SOURCE: CoinGecko\" /></p></li>\n</ul>\n<p>\\</p>\n<ul>\n<li><p>More global economic activity moves to stablecoins. The utility of stablecoins became a pronounced trend in 2024 and will likely continue into 2025. <a href=\"https://www.danielmcglynn.com/stablecoins-as-shelter/\">We’ve covered this trend before</a> and talked about how interesting it is that one of crypto’s best use cases is also the most tame. VanEck predicts that stablecoin daily settlements will reach $300 billion/day in 2025.</p>\n<p>\\</p>\n<p><img src=\"https://cdn.hackernoon.com/images/xP5lHtN0vMf7waCL6tGSabhVnru2-2025-01-06T16:07:23.649Z-i3o2y2slz4m7algsnkpsfj6d\" alt=\"SOURCE: VanEck\" /></p></li>\n</ul>\n<p>\\\nThe reports are interesting as one-offs. Collected together, they provide at least a pretty good guide of the things we should be watching or the general themes that will impact the Open Money framework.</p>\n<p>\\\nI’m sure this list is incomplete, and I’ve missed some valuable reports. Please share your favorites with me so I can update this collection.</p>\n<p>\\\nThe best way to share a link is to reply to this email or message me @danielmcglynn on Twitter or Warpcast.</p>\n<p>\\\nHappy holidays.</p>\n<h2 id=\"acollectionofthe2024yearinreviewand2025predictionsreportsforthecryptoindustry\">A collection of the 2024 year-in-review and 2025 predictions reports for the crypto industry</h2>\n<p><a href=\"https://a16zcrypto.com/posts/article/state-of-crypto-report-2024/?ref=danielmcglynn.com&embedable=true\">https://a16zcrypto.com/posts/article/state-of-crypto-report-2024/?ref=danielmcglynn.com&embedable=true</a></p>\n<p><a href=\"https://www.anchorage.com/insights/2024-defining-year-for-crypto?ref=danielmcglynn.com&embedable=true\">https://www.anchorage.com/insights/2024-defining-year-for-crypto?ref=danielmcglynn.com&embedable=true</a></p>\n<p><a href=\"https://www.security.org/digital-security/cryptocurrency-annual-consumer-report/?ref=danielmcglynn.com&embedable=true\">https://www.security.org/digital-security/cryptocurrency-annual-consumer-report/?ref=danielmcglynn.com&embedable=true</a></p>\n<p><a href=\"https://www.pwc.com/gx/en/industries/financial-services/crypto-services/sixth-annual-global-crypto-hedge-fund-report.html?ref=danielmcglynn.com&embedable=true\">https://www.pwc.com/gx/en/industries/financial-services/crypto-services/sixth-annual-global-crypto-hedge-fund-report.html?ref=danielmcglynn.com&embedable=true</a></p>\n<p><a href=\"https://messari.io/report/the-crypto-theses-2025?ref=danielmcglynn.com&embedable=true\">https://messari.io/report/the-crypto-theses-2025?ref=danielmcglynn.com&embedable=true</a></p>\n<p>\\\n<a href=\"https://coinmarketcap.com/academy/article/bitcoin-2025-price-prediction-by-industry-experts?ref=danielmcglynn.com&embedable=true\">https://coinmarketcap.com/academy/article/bitcoin-2025-price-prediction-by-industry-experts?ref=danielmcglynn.com&embedable=true</a></p>\n<p>\\\n<strong>Links to additional reports</strong></p>\n<ul>\n<li>Bitwise – <a href=\"https://s3.us-east-1.amazonaws.com/static.bitwiseinvestments.com/Research/Bitwise-The-Year-Ahead-10-Crypto-Predictions-for-2025.pdf?ref=danielmcglynn.com\">The Year Ahead: 10 Predictions for 2025</a></li>\n<li>Coinbase Institutional: <a href=\"https://www.coinbase.com/institutional/research-insights/research/market-intelligence/2025-crypto-market-outlook?ref=danielmcglynn.com\">2025 Crypto Market Outlook</a></li>\n<li>VanEck: <a href=\"https://www.vaneck.com/us/en/blogs/digital-assets/matthew-sigel-vanecks-10-crypto-predictions-for-2025/?ref=danielmcglynn.com\">10 Crypto Predictions for 2025</a></li>\n</ul>\n<p>\\\nThis post is part of the <a href=\"https://www.danielmcglynn.com/what-is-open-money/\">Open Money Project</a>.</p>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"The HackerNoon Newsletter: Top 100 Highest Paying Upwork Clients (1/6/2025)","url":"https://hackernoon.com/1-6-2025-newsletter?source=rss","date":1736179482,"author":"Noonification","unread":true,"content":"\n              \n        <p><strong>How are you, hacker?</strong></p>\n        <br />\n        <p>🪐 What’s happening in tech today, January 6, 2025?</p>\n        <br />\n        <p>\n          The\n          <a href=\"https://hackernoon.com/noonification\" target=\"_blank\" rel=\"noopener\"> HackerNoon Newsletter</a>\n          brings the HackerNoon \n          <a href=\"https://hackernoon.com\" target=\"_blank\" rel=\"noopener\">homepage</a>\n          straight to your inbox.\n          <a href=\"https://hackernoon.com/on-this-day\" target=\"_blank\" rel=\"noopener\">On this day,</a>\n          \n            <strong>Samuel Morse and Alfred Vail publicly demonstrated their telegraph for the first time</strong> in 1838,  <strong>North Korea announced that it had successfully tested a hydrogen bomb</strong> in 2016,  <strong>Bono, one half of the iconic duo Sonny & Cher, tragically passed away</strong> in 1998,  <strong>A mob stormed the US Capitol in historic insurrection</strong> in 2021, \n          \n          and  we present you with these top quality stories. \n          \n            From \n        <a href=\"https://hackernoon.com/charting-the-ethereum-account-abstraction-roadmap-i-eip-3074-eip-5806-and-eip-7702\" class=\"eventTitle\"><strong>Charting The Ethereum Account Abstraction Roadmap I: EIP-3074, EIP-5806, and EIP-7702</strong></a>\n       to \n        <a href=\"https://hackernoon.com/the-crypto-curve-left-right-and-center\" class=\"eventTitle\"><strong>The Crypto Curve: Left, Right, and Center</strong></a>,\n       let’s dive right in.\n          \n        </p>\n      \n              \n          <h2><a href=\"https://hackernoon.com/the-bitcoin-writing-contest-by-rootstock-and-hackernoon-final-round-results\">The #bitcoin Writing Contest by Rootstock and HackerNoon: Final Round Results🎉</a></h2>\n          <p><img src=\"https://cdn.hackernoon.com/images/5wpKgV75aONqkTJlafw2yQmK9yd2-wi033mk.png\" alt /> </p>\n          <br />\n          <p>By <a href=\"https://hackernoon.com/u/hackernooncontests\">@hackernooncontests</a> [ 5 Min read ] Meet the finalists and winners of Round 3 of the #bitcoin Writing Contest, hosted by Roostock and HackerNoon.  <a href=\"https://hackernoon.com/the-bitcoin-writing-contest-by-rootstock-and-hackernoon-final-round-results\">Read More.</a></p>\n        \n          <h2><a href=\"https://hackernoon.com/ditch-the-resolutions-and-become-unfckwithable-this-year\">Ditch The Resolutions  Become Unf*ckwithable This Year</a></h2>\n          <p><img src=\"https://cdn.hackernoon.com/images/qkXA8MX2eJScMSRNgGr3WBlDxfN2-ef136fc.png\" alt /> </p>\n          <br />\n          <p>By <a href=\"https://hackernoon.com/u/benoitmalige\">@benoitmalige</a> [ 4 Min read ] Learn how to build unshakable inner strength with simple habits that make you unf*ckwithable.  <a href=\"https://hackernoon.com/ditch-the-resolutions-and-become-unfckwithable-this-year\">Read More.</a></p>\n        \n          <h2><a href=\"https://hackernoon.com/top-100-highest-paying-upwork-clients\">Top 100 Highest Paying Upwork Clients</a></h2>\n          <p><img src=\"https://cdn.hackernoon.com/images/LmkJG9CJCkeKroCwy3MciE5UHml1-ol035ye.webp\" alt /> </p>\n          <br />\n          <p>By <a href=\"https://hackernoon.com/u/nebojsaneshatodorovic\">@nebojsaneshatodorovic</a> [ 8 Min read ] The ultimate list of the top 100 biggest Upwork clients. <a href=\"https://hackernoon.com/top-100-highest-paying-upwork-clients\">Read More.</a></p>\n        \n          <h2><a href=\"https://hackernoon.com/the-crypto-curve-left-right-and-center\">The Crypto Curve: Left, Right, and Center</a></h2>\n          <p><img src=\"https://cdn.hackernoon.com/images/OYD3SUIXshanW9XAmljvgTdQKuB3-oj13696.png\" alt /> </p>\n          <br />\n          <p>By <a href=\"https://hackernoon.com/u/andreydidovskiy\">@andreydidovskiy</a> [ 5 Min read ] Based on the principles of the “Bell Curve,” the Crypto Curve is a meme used to depict the distribution of intelligence among market participants. <a href=\"https://hackernoon.com/the-crypto-curve-left-right-and-center\">Read More.</a></p>\n        \n          <h2><a href=\"https://hackernoon.com/charting-the-ethereum-account-abstraction-roadmap-i-eip-3074-eip-5806-and-eip-7702\">Charting The Ethereum Account Abstraction Roadmap I: EIP-3074, EIP-5806, and EIP-7702</a></h2>\n          <p><img src=\"https://cdn.hackernoon.com/images/WSQJfCSXOxWphTNQ7sneVvhdWGu1-bt037j0.jpeg\" alt /> </p>\n          <br />\n          <p>By <a href=\"https://hackernoon.com/u/2077research\">@2077research</a> [ 30 Min read ] A three-part series on Ethereums account abstraction roadmap. Part I explores EIP-3074, EIP-7702, and EIP-5806—including specifications, advantages, and cons.  <a href=\"https://hackernoon.com/charting-the-ethereum-account-abstraction-roadmap-i-eip-3074-eip-5806-and-eip-7702\">Read More.</a></p>\n        \n              \n        <br />\n        <p>🧑‍💻 What happened in your world this week?</p>\n        <p>\n          It's been said that\n          <a href=\"https://hackernoon.com/developers-the-why-and-how-to-writing-technical-articles-54e824789ef6\">writing can help consolidate technical knowledge</a>,\n          <a href=\"https://hackernoon.com/how-can-non-writers-become-effective-bloggers-1pq32wd\">establish credibility</a>,\n          <a href=\"https://hackernoon.com/how-can-non-writers-become-effective-bloggers-1pq32wd\"> and contribute to emerging community standards</a>.\n          Feeling stuck? We got you covered ⬇️⬇️⬇️\n        </p>\n        <br />\n        <p>\n          <a href=\"https://app.hackernoon.com/mobile/lZx3fmlPdlPJpVBIdble\">ANSWER THESE GREATEST INTERVIEW QUESTIONS OF ALL TIME</a>\n        </p>\n        <br />\n        <p>We hope you enjoy this worth of free reading material. Feel free to forward this email to a nerdy friend who'll love you for it.See you on Planet Internet! With love, \n The HackerNoon Team ✌️</p>\n        <br />\n        <p><img src=\"https://cdn.hackernoon.com/images/the-hackernoon-newsletter-footer.png\" alt /></p>\n      \n            ","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Firefox 134 Available With Experimental HTML \"autocorrect\" Attribute","url":"https://www.phoronix.com/news/Mozilla-Firefox-134-Available","date":1736179440,"author":"Michael Larabel","unread":true,"content":"Mozilla has published the Firefox 134.0 release binaries today ahead of their official release tomorrow. This first Firefox update of 2025 brings a few new features to Linux users and those on other platforms...","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Unemployed Office Workers Are Having a Harder Time Finding New Jobs","url":"https://news.slashdot.org/story/25/01/06/1553247/unemployed-office-workers-are-having-a-harder-time-finding-new-jobs?utm_source=rss1.0mainlinkanon&utm_medium=feed","date":1736179260,"author":"msmash","unread":true,"content":"More than 1.6 million Americans have been jobless for at least six months, up 50% since late 2022, despite the economy adding over two million jobs last year, Labor Department data shows. \n\nThe average job search now takes six months, primarily affecting high-paying sectors like tech, law, and media. While the 4.2% unemployment rate remains below pre-pandemic averages, job postings have dropped to one per unemployed worker from two in early 2022. \n\nSoftware development, data science, and marketing roles are 20% below pre-pandemic levels, while healthcare and government sectors account for half of recent job creation. The number of Americans receiving unemployment benefits reached 1.8 million in late December, approaching post-pandemic highs, as wage growth declined to 4% from 6% during the early 2020s hiring peak.<p><div class=\"share_submission\" style=\"position:relative;\">\n<a class=\"slashpop\" href=\"http://twitter.com/home?status=Unemployed+Office+Workers+Are+Having+a+Harder+Time+Finding+New+Jobs%3A+https%3A%2F%2Fnews.slashdot.org%2Fstory%2F25%2F01%2F06%2F1553247%2F%3Futm_source%3Dtwitter%26utm_medium%3Dtwitter\"><img src=\"https://a.fsdn.com/sd/twitter_icon_large.png\"></a>\n<a class=\"slashpop\" href=\"http://www.facebook.com/sharer.php?u=https%3A%2F%2Fnews.slashdot.org%2Fstory%2F25%2F01%2F06%2F1553247%2Funemployed-office-workers-are-having-a-harder-time-finding-new-jobs%3Futm_source%3Dslashdot%26utm_medium%3Dfacebook\"><img src=\"https://a.fsdn.com/sd/facebook_icon_large.png\"></a>\n\n\n\n</div></p><p><a href=\"https://news.slashdot.org/story/25/01/06/1553247/unemployed-office-workers-are-having-a-harder-time-finding-new-jobs?utm_source=rss1.0moreanon&amp;utm_medium=feed\">Read more of this story</a> at Slashdot.</p><iframe src=\"https://slashdot.org/slashdot-it.pl?op=discuss&amp;id=23570577&amp;smallembed=1\" style=\"height: 300px; width: 100%; border: none;\"></iframe>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"The #bitcoin Writing Contest by Rootstock and HackerNoon: Final Round Results🎉","url":"https://hackernoon.com/the-bitcoin-writing-contest-by-rootstock-and-hackernoon-final-round-results?source=rss","date":1736179207,"author":"HackerNoon Writing Contests Announcements","unread":true,"content":"<p><strong>Seasons greetings, Hackers!</strong></p>\n<p>\\\nWelcome to the third and final winners announcement, for the <strong>#bitcoin Writing Contest</strong>, presented by <strong>Rootstock</strong> and <strong>HackerNoon.</strong></p>\n<p>\\\nWhat a ride it’s been! Since launching in May, the contest has seen developers, writers, Bitcoin maximalists, blockchain enthusiasts, and everyone in between tackle a range of creative and technical challenges centered around the leading cryptocurrency–bitcoin–in a year where it cracked a historic <a href=\"https://hackernoon.com/coins/BTC?range=month\">$100k milestone.</a> </p>\n<p>\\\nIn the process, we’ve published over 200 <a href=\"https://hackernoon.com/tagged/bitcoin\">#bitcoin</a> stories, racking up more than <strong>400,000 pageviews</strong> and well over <strong>300 hours of reading time.</strong></p>\n<p>\\\nRound 1 wrapped up on July 31st, rewarding 5 talented HackerNoon authors for their standout contributions. The winner was @nikku876, who took home $2,000 for his entry, <strong><em><a href=\"https://hackernoon.com/how-to-build-dapp-on-rootstock-with-nextjs-typescript-and-solidity?ref=hackernoon.com\">How to Build DApp on Rootstock with Next.js, Typescript, and Solidity</a></em></strong>. Read the Results announcement for Round 1 <a href=\"https://hackernoon.com/the-bitcoin-writing-contest-by-rootstock-and-hackernoon-round-1-results\">here</a>.</p>\n<p>\\\nThe second round closed on September 30th, seeing 5 additional winners take home cash prizes. @<strong>tomaszs</strong> won the top prize of <strong>$2,000</strong> for his entry, <strong><em><a href=\"https://hackernoon.com/rootstock-first-impression-through-the-eyes-of-a-front-end-developer-and-a-web-3-layman\">RootStock - First Impression Through The Eyes Of A Front-end Developer And A Web 3 Layman</a></em></strong>. came in a close second, winning <strong>$1,500</strong> for <strong><em><a href=\"https://hackernoon.com/how-to-build-a-telegram-bot-that-queries-rootstock-data-using-rootstock-rpc-api\">How to Build a Telegram Bot That Queries Rootstock Data Using Rootstock RPC API</a></em></strong>. Read the results announcement for Round 2 <a href=\"https://hackernoon.com/the-bitcoin-writing-contest-by-rootstock-and-hackernoon-round-2-results\">here</a>.</p>\n<p>\\\nFor the just-concluded round, we had the difficult job of combing through 40 entries to select 25 finalists for the final voting round. Only entries submitted between Oct 1 &amp; Nov 30 were eligible.</p>\n<p>\\\nLet’s meet our finalists.</p>\n<h2 id=\"thebitcoinwritingcontestround3finalists\">The #bitcoin Writing Contest: Round 3 Finalists</h2>\n<p><a href=\"https://hackernoon.com/near-zero-using-rootstock-to-build-the-stablecoin-satoshi-wanted\">Near-Zero: Using Rootstock To Build The Stablecoin Satoshi Wanted</a> by <a href=\"https://hackernoon.com/u/walo\">@walo</a></p>\n<p>\\\n<a href=\"https://hackernoon.com/understanding-runes-a-breakthrough-for-fungible-tokens-on-bitcoin\">Understanding Runes: A Breakthrough for Fungible Tokens on Bitcoin</a> by <a href=\"https://hackernoon.com/u/miprox\">@miprox</a></p>\n<p>\\\n<a href=\"https://hackernoon.com/building-hybrid-smart-contracts-integrating-rootstock-and-chainlink-with-hardhat\">Building Hybrid Smart Contracts: Integrating Rootstock and Chainlink with Hardhat</a> by <a href=\"https://hackernoon.com/u/edwinliavaa\">@edwinliavaa</a></p>\n<p>\\\n<a href=\"https://hackernoon.com/$42-billion-and-a-trustless-donation-platform\">$42 Billion and a Trustless Donation Platform</a> by <a href=\"https://hackernoon.com/u/ibukun8717\">@ibukun8717</a></p>\n<p>\\\n<a href=\"https://hackernoon.com/how-to-build-an-on-chain-pay-per-view-protocol-on-rootstock\">How to Build an On-Chain Pay-Per-View Protocol on Rootstock</a> by <a href=\"https://hackernoon.com/u/nescampos\">@nescampos</a></p>\n<p>\\\n<a href=\"https://hackernoon.com/can-bitcoin-hold-politicians-to-their-promises\">Can Bitcoin Hold Politicians to Their Promises?</a> by <a href=\"https://hackernoon.com/u/javiermateos\">@javiermateos</a></p>\n<p>\\\n<a href=\"https://hackernoon.com/deploying-hybrid-smart-contracts-on-rootstock\">Deploying Hybrid Smart Contracts on Rootstock</a> by <a href=\"https://hackernoon.com/u/edwinliavaa\">@edwinliavaa</a></p>\n<p>\\\n<a href=\"https://hackernoon.com/donald-trump-$80k-bitcoin-and-the-strategic-bitcoin-reserve\">Donald Trump, $80k Bitcoin and the Strategic Bitcoin Reserve</a> by <a href=\"https://hackernoon.com/u/thavash\">@thavash</a></p>\n<p>\\\n<a href=\"https://hackernoon.com/how-to-build-and-deploy-real-world-assets-rwa-tokenized-real-estate-dapp-on-rootstock\">How To Build And Deploy Real World Assets (RWA) Tokenized Real Estate DApp On Rootstock</a> by <a href=\"https://hackernoon.com/u/diamondolmd\">@diamondolmd</a></p>\n<p>\\\n<a href=\"https://hackernoon.com/nature-biomimicry-bitcoin-mutually-beneficial-partnership\">Nature + Biomimicry + Bitcoin: Mutually Beneficial Partnership</a> by <a href=\"https://hackernoon.com/u/alexbiojs\">@alexbiojs</a></p>\n<p>\\\n<a href=\"https://hackernoon.com/launch-a-token-on-rootstock-leverage-bitcoins-security-with-smart-contracts\">Launch a Token on Rootstock: Leverage Bitcoin's Security with Smart Contracts</a> by <a href=\"https://hackernoon.com/u/ibukun8717\">@ibukun8717</a></p>\n<p>\\\n<a href=\"https://hackernoon.com/bitcoin-has-a-purpose\">Bitcoin Has A Purpose</a> by <a href=\"https://hackernoon.com/u/correspondentone\">@correspondentone</a></p>\n<p>\\\n<a href=\"https://hackernoon.com/how-to-bridge-a-rootstock-token-to-bnb-smart-chain-using-hyperlane-warp-routes\">How to Bridge a Rootstock Token to BNB Smart Chain Using Hyperlane Warp Routes</a> by <a href=\"https://hackernoon.com/u/induction\">@induction</a></p>\n<p>\\\n<a href=\"https://hackernoon.com/god-bitcoin-and-proof-of-work-how-ancient-wisdom-powers-the-blockchain\">God, Bitcoin, and Proof-of-Work: How Ancient Wisdom Powers the Blockchain</a> by <a href=\"https://hackernoon.com/u/edwinliavaa\">@edwinliavaa</a></p>\n<p>\\\n<a href=\"https://hackernoon.com/how-to-deploy-smart-contracts-on-rootstock-in-5-minutes-with-thirdweb\">How to Deploy Smart Contracts on Rootstock in 5 Minutes with Thirdweb</a> by <a href=\"https://hackernoon.com/u/ileolami\">@ileolami</a></p>\n<p>\\\n<a href=\"https://hackernoon.com/the-bitcoin-blockchain-in-five-hundred-years-is-reputation-dna\">The Bitcoin Blockchain in Five Hundred Years is Reputation DNA</a> by <a href=\"https://hackernoon.com/u/maken8\">@maken8</a></p>\n<p>\\\n<a href=\"https://hackernoon.com/build-a-receipt-generator-with-just-the-rootstock-api-and-rpc-method\">Build a Receipt Generator with Just the Rootstock API and RPC Method</a> by  <a href=\"https://hackernoon.com/u/ileolami\">@ileolami</a></p>\n<p>\\\n<a href=\"https://hackernoon.com/can-bitcoin-say-no-more-to-forever-war\">Can Bitcoin Put an End to Forever War?</a> by <a href=\"https://hackernoon.com/u/nebojsaneshatodorovic\">@nebojsaneshatodorovic</a></p>\n<p>\\\n<a href=\"https://hackernoon.com/how-to-contribute-to-rootstock-code\">How to Contribute to Rootstock Code</a> by <a href=\"https://hackernoon.com/u/legosi\">@legosi</a></p>\n<p>\\\n<a href=\"https://hackernoon.com/is-the-nonce-in-bitcoin-really-random-analyzing-over-860000-blocks\">Is the Nonce in Bitcoin Really Random? Analyzing Over 860,000 Blocks</a> by <a href=\"https://hackernoon.com/u/javiermateos\">@javiermateos</a></p>\n<p>\\\n<a href=\"https://hackernoon.com/how-to-set-up-a-trustless-escrow-smart-contract-on-rootstock-for-secure-transactions\">How to Set Up a Trustless Escrow Smart Contract on Rootstock for Secure Transactions</a> by <a href=\"https://hackernoon.com/u/braham\">@braham</a></p>\n<p>\\\n<a href=\"https://hackernoon.com/stop-thinking-youll-get-rich-with-bitcoin\">Stop Thinking You’ll Get Rich With Bitcoin</a> by <a href=\"https://hackernoon.com/u/MarkHelfman\">@markhelfman</a></p>\n<p>\\\n<a href=\"https://hackernoon.com/donald-trump-returns-to-the-white-house-heres-what-it-means-for-bitcoin\">Donald Trump Returns to the White House — Here's What It Means for Bitcoin</a> by <a href=\"https://hackernoon.com/u/ssaurel\">@ssaurel</a></p>\n<p>\\\n<a href=\"https://hackernoon.com/a-brief-history-of-money-from-the-economy-of-favors-to-bitcoin\">A Brief History of Money: From the Economy of Favors to Bitcoin</a> by <a href=\"https://hackernoon.com/u/thebojda\">@thebojda</a></p>\n<p>\\\n<a href=\"https://hackernoon.com/the-toxicity-of-bitcoin-maximalist-thinking\">The Toxicity of Bitcoin Maximalist Thinking</a> by <a href=\"https://hackernoon.com/u/maken8\">@maken8</a></p>\n<p>\\</p>\n<blockquote>\n  <p>Whether you're exploring practical applications like tokenizing real estate or pondering Bitcoin's role in shaping the future, these contributors have something for everyone. Don’t miss out—check them out and follow their work on HackerNoon!</p>\n</blockquote>\n<hr />\n<p>:::info\nAfter a thorough review by HackerNoon’s editors, we’re excited to share the&nbsp;<strong>top 3 entries for the final round of the #bitcoin writing contest</strong>, along with&nbsp;<strong>bonus prizes for 2 additional writers!</strong></p>\n<p>:::</p>\n<hr />\n<h2 id=\"thewinnersare\">The Winners Are…</h2>\n<p><img src=\"https://cdn.hackernoon.com/images/5wpKgV75aONqkTJlafw2yQmK9yd2-il235o4.gif.webp\" alt=\"\" /></p>\n<hr />\n<h3 id=\"3rdplace\">3rd Place 🏆</h3>\n<p><a href=\"https://hackernoon.com/is-the-nonce-in-bitcoin-really-random-analyzing-over-860000-blocks?embedable=true\">https://hackernoon.com/is-the-nonce-in-bitcoin-really-random-analyzing-over-860000-blocks?embedable=true</a></p>\n<blockquote>\n  <p>Is the nonce in Bitcoin truly random? This analysis of over 860,000 blocks uncovers patterns, potential biases, and their implications for decentralization.</p>\n</blockquote>\n<p>:::info\n<strong>Congratulations <a href=\"https://hackernoon.com/u/javiermateos\">@javiermateos</a>, you’ve won $1000!</strong></p>\n<p>:::</p>\n<hr />\n<h3 id=\"2ndplace\">2nd Place 🏆🏆</h3>\n<p><a href=\"https://hackernoon.com/launch-a-token-on-rootstock-leverage-bitcoins-security-with-smart-contracts?embedable=true\">https://hackernoon.com/launch-a-token-on-rootstock-leverage-bitcoins-security-with-smart-contracts?embedable=true</a></p>\n<blockquote>\n  <p>This guide explains how to create and deploy a Bitcoin-based token on the Rootstock (RSK) network. We'll write a simple ERC-20 contract in Solidity that adheres to the standard of fungible tokens on Ethereum-like networks. The smart contract can be interacted with via a decentralized application (DApp)</p>\n</blockquote>\n<p>:::info\n<strong>Congratulations <a href=\"https://hackernoon.com/u/ibukun8717\">@ibukun8717</a>, you’ve won $1500</strong></p>\n<p>:::</p>\n<hr />\n<h3 id=\"1stplace\">1st Place 🏆🏆🏆</h3>\n<p><a href=\"https://hackernoon.com/near-zero-using-rootstock-to-build-the-stablecoin-satoshi-wanted?embedable=true\">https://hackernoon.com/near-zero-using-rootstock-to-build-the-stablecoin-satoshi-wanted?embedable=true</a></p>\n<blockquote>\n  <p>Implications of a stable, decentralized, non-fiat-pegged cryptocurrency on global trade and local governments. While Sat never sat to discuss stablecoins explicitly, what does building one on the BTC blockchain through Rootstock mean for web3?</p>\n</blockquote>\n<p>:::info\n<strong>Congratulations <a href=\"https://hackernoon.com/u/walo\">@walo</a>, you’ve won the contest’s top prize of $2000</strong></p>\n<p>:::</p>\n<hr />\n<p><strong>Let’s give it up for our winners!</strong></p>\n<p><img src=\"https://cdn.hackernoon.com/images/5wpKgV75aONqkTJlafw2yQmK9yd2-n8435yz.gif.webp\" alt=\"\" /></p>\n<p>\\</p>\n<h3 id=\"nowforthebonusprizes\">Now for the Bonus Prizes</h3>\n<p><a href=\"https://hackernoon.com/stop-thinking-youll-get-rich-with-bitcoin?embedable=true\">https://hackernoon.com/stop-thinking-youll-get-rich-with-bitcoin?embedable=true</a></p>\n<blockquote>\n  <p>One Bitcoin is worth more than the average US worker’s annual salary. Most people can’t afford to buy enough Bitcoin to get rich. Some tell you “banana zone will send prices to the moon’ and “S2F” predicts a $500,000 bitcoin in 2025.</p>\n</blockquote>\n<p>:::info\n<strong>Congratulations <a href=\"https://hackernoon.com/u/MarkHelfman\">@markhelfman</a>, you’ve won yourself $650</strong></p>\n<p>:::</p>\n<hr />\n<p><a href=\"https://hackernoon.com/the-bitcoin-blockchain-in-five-hundred-years-is-reputation-dna?embedable=true\">https://hackernoon.com/the-bitcoin-blockchain-in-five-hundred-years-is-reputation-dna?embedable=true</a></p>\n<blockquote>\n  <p>Reputation networks on Blockchain will evolve into Reputation DNA. Because blockchain is a self-correcting system running on a fail-quick-learn-quick model, eventually, only the best and most trustworthy records will shine through. And our children and grandchildren will be the better for it.</p>\n</blockquote>\n<p>:::info\n<strong>Congratulations <a href=\"https://hackernoon.com/u/maken8\">@maken8</a>, you’ve won $650</strong></p>\n<p>:::</p>\n<hr />\n<p><strong>Congratulations once again to all our winners. Thank you for your hard work!</strong></p>\n<h2 id=\"howtoclaimyourhackernoonwritingcontestprize\">How to Claim Your HackerNoon Writing Contest Prize</h2>\n<ul>\n<li>Contact&nbsp;<strong>yes-reply@hackernoon.com</strong>&nbsp;and&nbsp;<strong>sidra@hackernoon.com</strong>&nbsp;from the email address linked to your winning HackerNoon account.</li>\n<li>We will validate your claim and share a form requesting your details for reward distribution.</li>\n<li>You’ll receive your winnings in 2-4 weeks after completing the form.</li>\n</ul>\n<hr />\n<p>:::warning\n<strong>Note: You must contact us within 60 days of the winners’ announcement to claim your reward.</strong></p>\n<p>:::</p>\n<hr />\n<h3 id=\"readytobeawinner\"><strong>Ready to be a winner?</strong></h3>\n<p>:::tip\nWe’ve got plenty of contests waiting for you!</p>\n<p>Head over to&nbsp;<strong><a href=\"https://contests.hackernoon.com/?ref=hackernoon.com\">contests.hackernoon.com</a></strong>&nbsp;to see what's up for grabs and maybe snag a spot on our next winners' list!</p>\n<p>:::</p>\n<p>\\</p>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Driving Digital Transformation: Khurana's Impact on AI, E-Commerce, and Telecom","url":"https://hackernoon.com/driving-digital-transformation-khuranas-impact-on-ai-e-commerce-and-telecom?source=rss","date":1736179203,"author":"Jon Stojan Media","unread":true,"content":"<p>\\\nArtificial Intelligence (AI), e-commerce, and telecommunications require visionary leaders like <strong><a href=\"https://www.linkedin.com/in/rahul-khurana-0629ab14\">Rahul Khurana</a></strong>, Principal Architect, Technical. His 16-year career in the tech industry reflects a rare blend of technical mastery, inventive thinking, and steadfast commitment to customer-centric solutions.</p>\n<h3 id=\"apurposedrivencareer\"><strong>A Purpose-Driven Career</strong></h3>\n<p><img src=\"https://cdn.hackernoon.com/images/InxBRjRIs6M1kdhuWcyNHiiUrxm1-b4134jk.jpeg\" alt=\"Rahul Khurana\" /></p>\n<p>\\\nKhurana distinguished himself in the area of software development by creating impactful, efficient solutions. However, his desire to influence the industry at a systemic level led him to pivot to architecture. Since then, he has progressed to becoming a Principal Architect, overseeing large-scale commerce systems.</p>\n<p>\\\nA turning point in his career came while working on a project that integrated AI into e-commerce. This task utilized machine learning to deliver a personalized, context-aware customer experience and allowed users to interact with products and services through natural language commands.</p>\n<p>\\\nFor Khurana, this was a revelation. He realized Artificial Intelligence had the power to fundamentally redefine consumer interactions. It also set the stage for his leadership in driving digital transformation initiatives with industry-first programs such as AI-powered chatbots and billing transparency systems.</p>\n<h3 id=\"thearchitectofchange\"><strong>The Architect of Change</strong></h3>\n<p>At T-Mobile, Khurana has been instrumental in driving impactful initiatives like Project 10 Million and enhancing digital commerce with the Buy Online, Pickup In-Store (BOPIS) program. Project 10 Million has been a transformative effort to bridge the homework gap by providing free internet access to millions of underserved students, empowering them with the resources they need to succeed in their education. Meanwhile, BOPIS has been a game-changer in digital commerce, driving 28% of traffic, especially during new phone introductions (NPI), significantly boosting the company's digital footprint and transforming customer experiences.</p>\n<p>\\\nHe also created AI-driven personalization and contextualization innovations that have changed how businesses engage with their customers. His integration of over 300 APIs for AI-powered conversational transactions has created intuitive user engagement that prioritizes trust and transparency.</p>\n<h3 id=\"awardsrecognitionandindustrycontributions\"><strong>Awards, Recognition, and Industry Contributions</strong></h3>\n<p>Khurana has received numerous accolades for his exceptional contributions, including T-Mobile's prestigious PEAK award—an honor bestowed upon only 0.001% of employees—and HCL's O2 award for three consecutive years. In 2024, he was also honored with a global recognition award for his groundbreaking work in telecommunications.</p>\n<p>\\\nHe influences the future of technology and commerce as a fellow member of the Institution of Electronics and Telecommunication Engineers (IETE) and a board member for industry journals.</p>\n<p>\\\nKhurana has also published award-winning research, including his seminal papers \"Fraud Detection in E-Commerce Payment Systems: The Role of Predictive Artificial Intelligence in Real-Time Transaction Security and Risk Management\" and \"Applications of Quantum Computing in Telecom E-Commerce: Analysis of QKD, QAOA, and QML for Data Encryption, Speed Optimization, and AI-Driven Customer Experience.\" His groundbreaking work on predictive AI for fraud detection received widespread recognition, culminating in the prestigious Best Paper Award in 2024. Similarly, his exploration of quantum computing applications in telecom e-commerce has been celebrated for its innovative approach to enhancing data security and customer experience.</p>\n<p>\\\nIn addition to his research, he holds several patents, including one on the efficient transition of mobile devices across telecommunication networks. His thought leadership is regularly sought at conferences hosted by organizations like Adobe, Amdocs, and AWS, where he shares insights on topics ranging from cloud computing to cybersecurity in e-commerce.</p>\n<h3 id=\"leadershipthroughmentorshipandinnovation\">Leadership Through Mentorship and Innovation</h3>\n<p>Rahul Khurana is a dynamic leader who excels in mentoring cross-functional teams and judging digital hackathons, showcasing his ability to inspire innovation and deliver impactful results. His expertise and guidance have inspired innovation and delivered measurable outcomes in both domains.</p>\n<p>\\\nOne of his most notable achievements is the Purchase Transparency Program, a multi-billion-dollar initiative that underscores his ability to lead complex projects successfully. This program involved intricate technical integrations and strategic collaborations with industry giants like Adobe, Amdocs, and Google. Through his leadership, the program delivered customer-focused solutions that set new standards in telecom e-commerce.</p>\n<h3 id=\"avisionforthefuture\"><strong>A Vision for the Future</strong></h3>\n<p>Khurana believes the intersection of Artificial Intelligence, quantum computing, and cybersecurity will influence the future of online shopping by creating hyper-personalized, resilient e-commerce ecosystems.</p>\n<p>\\\nHe plans to continue mentoring the next generation of innovators, contributing to hackathons, and leading transformational projects to ensure that his vision for technology's role in business continues to grow and evolve.</p>\n<p>\\\nRahul Khurana is a force in Artificial Intelligence, e-commerce, and telecom. His work bridges the gap between academic studies and actionable business strategies, laying the foundation for a more dynamic, customer-focused future while addressing the challenges of today.</p>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Designing a New Game Is Slow, Messy, and Full of Unexpected Twists, and That's Totally Fine","url":"https://hackernoon.com/designing-a-new-game-is-slow-messy-and-full-of-unexpected-twists-and-thats-totally-fine?source=rss","date":1736178540,"author":"Mathew Georghiou","unread":true,"content":"<p>Very little progress made since my last post. </p>\n<p>\\\nSo why post this instead of waiting until I have progress to share? </p>\n<h2 id=\"becausethisispartofthedesignprocess\">Because this is part of the design process.</h2>\n<p>Sometimes we make a lot of progress and sometimes we don't. We all have competing priorities in our work and life.</p>\n<p>\\\nSlowing down is not a bad thing when it comes to design. Because it allows us to return to our creation with fresh eyes. And bring new ideas to it. </p>\n<p>\\\nOne reason I have not made much progress on this new game is because I was working on finishing two other board games and a software simulation. An interesting thing I have learned about designing new products is just as you feel like you are getting close to finishing, a lot of new tasks seem to appear. So you end up spending more time at the end than you expected.</p>\n<p>\\\nBut it's all good because some of the thinking I had to do for those other games may find its way to enhance this new game. And, any problems I had to solve with other games are problems I no longer have to solve with this new game.</p>\n<h2 id=\"whatsnext\">What's Next?</h2>\n<p>The gameplay is far enough along that my next step is to do some testing, so I printed these sheets and cards. The sheets represent the gameboard and list each of the main spaces. Very rough, as you can see, but that's all we need to do some quick testing to see how it flows. Stay tuned for the results in my next update.</p>\n<p>\\\n <img src=\"https://cdn.hackernoon.com/images/TAcCKU24TqNqpYfO6fsbznnOcgj2-i90382b.png\" alt=\"\" /></p>\n<h2 id=\"catchup\">Catch Up</h2>\n<p>To catch up on Parts 1,2,3, 4, or 5, <a href=\"https://hackernoon.com/u/mathewgeorghiou?ref=hackernoon.com\">find them here.</a></p>\n<p>\\</p>\n<h2 id=\"shareyourthoughtsinthecomments\">Share Your Thoughts In the Comments</h2>\n<p>Am I on track?</p>\n<p>Am I missing something?</p>\n<p>Do you have any suggestions?</p>\n<p>Should I keep posting about this game?</p>\n<p>\\n </p>\n<p>PS: Please only share ideas if you are willing to allow me or anyone following this discussion to use them for free without any obligation. If you contribute an idea that has a significant influence on the design of my game, I will be pleased to gift you a copy of the game.</p>\n<p>\\</p>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Command Query Responsibility Segregation Separates Reading From Writing... but How?","url":"https://hackernoon.com/command-query-responsibility-segregation-separates-reading-from-writing-but-how?source=rss","date":1736177725,"author":"João Esperancinha","unread":true,"content":"<p>The first time this term appeared in Software Engineering lexicons was all the way back in <code>1997</code>. It appeared in the book “Object-Oriented Software Construction” by <code>Bertrand Meyer</code>. At this time it was known as <code>CQS</code> (Command Query Separation). <code>CQRS</code> was finally introduced by <code>Greg Young</code> in <code>2010</code>. This software architecture is designed to mitigate known caveats of <code>Object-Oriented architecture</code>. Specifically in this case, these caveats are:</p>\n<p>\\</p>\n<ul>\n<li>Writes and reads generate, almost all the time, a very different load against the system.</li>\n<li>Writing operations are often much more complicated than reading and they affect different scopes of the application. Write operations need to guarantee that correct, validated and consistent data reaches the store correctly.</li>\n<li>Security concerns are also different between write and read operations.</li>\n<li>The way data is normally stored in the database is in a 3NF or in another optimized form. When we read data, we often use it to build views to provide the user with readable data. The data presented to the user is hardly ever normalized. This is also referred to as denormalized data. In other words, we present the data to the user with the only concern that the user can read it.</li>\n</ul>\n<p>\\\nThrough this very simple list, you can see that reading and writing operate in different ways, they have different concerns, they generate different performance concerns, and they generate different loads which can put a lot of strain on the system in very different ways.</p>\n<p>\\\n<code>CQRS</code> is also a form of <code>DDD</code>(Domain Driven Design). It wasn’t initially thought out to be an actual <code>DDD</code>. Every application has at least one bounded context. Bounded contexts are difficult to define but essentially, they isolate a responsibility of the application like for example, handing of debit cards, library book archiver, and patient data. The latter for example can be divided into multiple subdomains. There could be a separate domain to keep track of chronic illnesses like HIV and another different one to keep track of the common flu. Both of them have different data concerns. Being a chronic disease, HIV patients will need to keep track of a lot more data like T-Cell count, virus load, and other blood data for a lifetime. Patients with the flu don’t need so much monitoring. There are a lot more privacy concerns related to the first domain than the latter. Assessing domains is a bit of an art and it requires the analytical skills of the engineer to determine them.Once you have defined your domain, it’s time to start the design of CQRS for it. As you may have already seen, this design has as its main concern, the separation of reading operations and writing operations. Write operations cannot be read operations. In the same way, “read” operations also cannot be “write” operations.</p>\n<p>\\\nWe will look into the source code I’m providing on <a href=\"https://github.com/jesperancinha/video-series-app\">GitHub</a> So let's start!</p>\n<hr />\n<h2 id=\"commands\">Commands</h2>\n<p>Commands are defined as any operation that can mutate the data without returning a value. In essence, these all write operations. In CRUD terms, these are the Creation, Update, and Delete operations. You may also refer to them as CUD. The Read operation is implicitly not a part of the operations we need for the Command side of our application.</p>\n<h2 id=\"queries\">Queries</h2>\n<p>Queries are defined as any operation that will never mutate data and will always return values. Ultimately these are all read operations. Query operations are only read operations. They are only the R in CRUD terms.</p>\n<h2 id=\"models\">Models</h2>\n<p>There are many ways to implement CQRS. The point is always to keep read operations apart from write operations as much as possible. In our implementation, we are also going to separate operations and use Event Sourcing. This will allow us to further separate the medium where we are going to keep our data. We will use two different databases. One database will be a part of the command flows and the other database will be part of the read flows.</p>\n<h2 id=\"implementation\">Implementation</h2>\n<p>Let’s first have a look at how all the moving parts will work:</p>\n<p><a href=\"https://github.com/jesperancinha/video-series-app\">    <img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fmede8nmlcxg9oheodnbn.jpg\" alt=\"blogcenter\" /></a></p>\n<p>\\\nIn this example, I’m going to try to make this as simple as possible. There are much more elaborated options out there. There are more complicated, dynamic, and scalable options out there. One of these options would be to use RabbitMQ or any other kind of message queueing system to further decouple all components. However, may lead the attention out of the scope of this tutorial. The point here is to present a solution with all the fundamental points of CQRS at its core.We are going to need a lot of dependencies, but for our example, we will focus on the Axon dependencies. You can find a complete listing of all the dependencies used in this example in the root pom.xml:</p>\n<p>\\</p>\n<pre><code>&lt;project xmlns=\"http://maven.apache.org/POM/4.0.0\"&gt;\n    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;\n    ...\n    &lt;dependencyManagement&gt;\n        &lt;dependencies&gt;\n            ...\n            &lt;dependency&gt;\n                &lt;groupId&gt;org.axonframework&lt;/groupId&gt;\n                &lt;artifactId&gt;axon-spring-boot-starter&lt;/artifactId&gt;\n                &lt;version&gt;${axon.version}&lt;/version&gt;\n                &lt;exclusions&gt;\n                    &lt;exclusion&gt;\n                        &lt;groupId&gt;org.axonframework&lt;/groupId&gt;\n                        &lt;artifactId&gt;axon-server-connector&lt;/artifactId&gt;\n                    &lt;/exclusion&gt;\n                &lt;/exclusions&gt;\n            &lt;/dependency&gt;\n            &lt;dependency&gt;\n                &lt;groupId&gt;org.axonframework.extensions.mongo&lt;/groupId&gt;\n                &lt;artifactId&gt;axon-mongo&lt;/artifactId&gt;\n                &lt;version&gt;${axon-mongo.version}&lt;/version&gt;\n            &lt;/dependency&gt;\n            &lt;dependency&gt;\n                &lt;groupId&gt;org.projectlombok&lt;/groupId&gt;\n                &lt;artifactId&gt;lombok&lt;/artifactId&gt;\n                &lt;version&gt;${lombok.version}&lt;/version&gt;\n                &lt;optional&gt;true&lt;/optional&gt;\n            &lt;/dependency&gt;\n            ...\n        &lt;/dependencies&gt;\n    &lt;/dependencyManagement&gt;\n    ...\n&lt;/project&gt;\n</code></pre>\n<p>\\\nNotice that I am using the axon framework. This is one of the most popular frameworks to implement the CQRS design. Namely, we are going to see how EventHandlers and Aggregators work, how the EventBus works, and how the CommandBus works. We are also going to see how this works with MongoDB in order to, ultimately, get our database updated with new data.</p>\n<h2 id=\"core\">Core</h2>\n<p>In this module, I’m going to consider everything that would be common to the application. I could also have named this module as common. For our application to run, we are going to need to consider a few important things. Given its complexity, I am only going to implement a read-all operation and a save operation. These will be my query and my command respectively. We’ll need a DTO to get our data into our system:</p>\n<p>\\</p>\n<pre><code class=\"java language-java\">public record VideoSeriesDto(\n        String name,\n        Integer volumes,\n        BigDecimal cashValue,\n        Genre genre\n) {\n    @Builder\n    public VideoSeriesDto {\n    }\n}\n</code></pre>\n<p>\\\nSending data via a writer is an operation that needs to be understood by the reader and also by the writer. Our only common command should be located here:</p>\n<pre><code class=\"java language-java\">@Builder\npublic class AddSeriesEvent {\n    String id;\n    String name;\n    Integer volumes;\n    BigDecimal cashValue;\n    Genre genre;\n...(\n    getters and\n    setters ommitted)\n}\n</code></pre>\n<p>\\\nFinally, we know from the schema, that both the “write service” and the “read service” will need to have access to the EventStore. This essentially is, at the end of the tail, our MongoDB database. Axon has very nice out-of-the-box libraries that allow us to easily implement this Event Sourcing mechanism. this is part of the reason why I chose this. It makes for a very simple form of implementation:</p>\n<p>\\</p>\n<pre><code class=\"java language-java\">@Configuration\npublic class AxonConfig {\n\n    @Value(\"${spring.data.mongodb.host:127.0.0.1}\")\n    private String mongoHost;\n\n    @Value(\"${spring.data.mongodb.port:27017}\")\n    private int mongoPort;\n\n    @Value(\"${spring.data.mongodb.database:test}\")\n    private String mongoDatabase;\n\n    @Bean\n    public TokenStore tokenStore(Serializer serializer) {\n        return MongoTokenStore.builder().mongoTemplate(axonMongoTemplate()).serializer(serializer).build();\n    }\n\n    @Bean\n    public EventStorageEngine eventStorageEngine(MongoClient client) {\n        return MongoEventStorageEngine.builder().mongoTemplate(DefaultMongoTemplate.builder().mongoDatabase(client).build()).build();\n    }\n\n    @Bean\n    public MongoTemplate axonMongoTemplate() {\n        return DefaultMongoTemplate.builder().mongoDatabase(mongo(), mongoDatabase).build();\n    }\n\n    @Bean\n    public MongoClient mongo() {\n        return MongoClients.create(\n                MongoClientSettings.builder()\n                        .applyToClusterSettings(builder -&gt;\n                                builder.hosts(List.of(\n                                        new ServerAddress(mongoHost, mongoPort))))\n                        .build());\n    }\n}\n</code></pre>\n<p>\\</p>\n<h2 id=\"commandservice\">Command Service</h2>\n<p>First, we need to implement a representation of our command. In the case of our command service, we only have a command to add further video series. Therefore, our command has the same properties as the actual series. Note the id field:</p>\n<pre><code class=\"java language-java\">@Data\n@Builder\n@EqualsAndHashCode\n@ToString\npublic class AddVideoSeriesCommand {\n\n    @TargetAggregateIdentifier\n    private String id;\n\n    private String name;\n\n    private Integer volumes;\n\n    private BigDecimal cashValue;\n\n    private Genre genre;\n\n}\n</code></pre>\n<p>\\\n\\\nThe id field is indeed a String. This is essentially our operation ID. It can be implemented in several ways. We just need to make sure that it is always a unique string, number, or whatever we choose.Now it’s time to implement the aggregator which will send our command through the command bus and make it reach our command handler:</p>\n<pre><code class=\"java language-java\">@Slf4j  \n@NoArgsConstructor  \n@Aggregate  \n@Data  \npublic class VideoSeriesAggregate {\n\n    @AggregateIdentifier  \n    private String id;  \n\n    @CommandHandler  \n    public VideoSeriesAggregate(AddVideoSeriesCommand command) {  \n        apply(AddSeriesEvent.builder()  \n                .id(UUID.randomUUID().toString())  \n                .cashValue(command.getCashValue())  \n                .genre(command.getGenre())  \n                .name(command.getName())  \n                .volumes(command.getVolumes()).build()  \n        );  \n    }  \n\n    @EventSourcingHandler  \n    public void on(AddSeriesEvent event) {  \n        this.id = event.getId();  \n    }  \n\n}  \n</code></pre>\n<p>\\\nNotice the EventSourcingHandler. It doesn’t seem to be doing much, but remember that in this code section you are looking at the contents of the Aggregate element. If you look at the mongo database you will find something like this:</p>\n<pre><code class=\"json language-json\">{  \n\"_id\" : ObjectId(\"5df8ac587a0bba4960afce68\"),  \n\"aggregateIdentifier\" : \"ed313d16-8d94-480a-85a0-b6897bcca4f5\",  \n\"type\" : \"SeriesAggregate\",  \n\"sequenceNumber\" : NumberLong(0),  \n\"serializedPayload\" : \"&lt;org.jesperancinha.video.core.events.AddSeriesEvent&gt;&lt;id&gt;ed313d16-8d94-480a-85a0-b6897bcca4f5&lt;/id&gt;&lt;name&gt;wosssda&lt;/name&gt;&lt;volumes&gt;10&lt;/volumes&gt;&lt;cashValue&gt;123.2&lt;/cashValue&gt;&lt;genre&gt;woo&lt;/genre&gt;&lt;/org.jesperancinha.video.core.events.AddSeriesEvent&gt;\",  \n\"timestamp\" : \"2019-12-17T10:22:16.640261Z\",  \n\"payloadType\" : \"org.jesperancinha.video.core.events.AddSeriesEvent\",  \n\"payloadRevision\" : null,  \n\"serializedMetaData\" : \"&lt;meta-data&gt;&lt;entry&gt;&lt;string&gt;traceId&lt;/string&gt;&lt;string&gt;398a250f-8086-40e7-a767-1aa793231f62&lt;/string&gt;&lt;/entry&gt;&lt;entry&gt;&lt;string&gt;correlationId&lt;/string&gt;&lt;string&gt;398a250f-8086-40e7-a767-1aa793231f62&lt;/string&gt;&lt;/entry&gt;&lt;/meta-data&gt;\",  \n\"eventIdentifier\" : \"2ac1a49f-0124-4f6e-b13f-140c8f36979a\"  \n}\n</code></pre>\n<p>\\\n\\\nNotice the aggregateIndentifier. This is our id. You need the EventSourcingHandler in order to complete the request and have your Event sourced to the EventStore.Now we only need to complete our application by implementing a Controller:</p>\n<pre><code class=\"java language-java\">@RestController\n@RequestMapping(\"/video-series\")\npublic class VideoSeriesController {\n\n    private final CommandGateway commandGateway;\n\n    public VideoSeriesController(CommandGateway commandGateway) {\n        this.commandGateway = commandGateway;\n    }\n\n    @PostMapping\n    public void postNewVideoSeries(\n            @RequestBody\n                    VideoSeriesDto videoSeriesDto) {\n        commandGateway.send(\n                AddVideoSeriesCommand.builder()\n                        .name(videoSeriesDto.name())\n                        .volumes(videoSeriesDto.volumes())\n                        .genre(videoSeriesDto.genre())\n                        .cashValue(videoSeriesDto.cashValue())\n                        .build());\n    }\n}\n</code></pre>\n<p>\\\nNotice that we are injecting a CommandGateway. This is precisely the gateway that allows us to send commands into our system.Finally, the Spring Boot Launcher:</p>\n<pre><code class=\"java language-java\">@SpringBootApplication\n@Import(AxonConfig.class)\npublic class VideoAppCommandLauncher {\n    public static void main(String[] args) {\n        SpringApplication.run(VideoAppCommandLauncher.class);\n    }\n}\n</code></pre>\n<p>\\\nTo complete our application we still need to configure our Spring Boot Launcher:</p>\n<pre><code># spring\nserver.port=8080\n# mongodb\nspring.data.mongodb.host=localhost\nspring.data.mongodb.port=27017\nspring.data.mongodb.database=cqrs\n</code></pre>\n<p>\\</p>\n<h2 id=\"queryservice\">Query Service</h2>\n<p>\\\nThe query service is essentially a reader of the EventStore and will act upon it without the user intervention. The query service needs to perform queries. In this way, I implemented a command to do that just that:public class FindAllVideoSeriesQuery {</p>\n<p>}</p>\n<p>\\\nNotice that this command ended up being just an empty class. That is done on purpose. We do not need parameters to pass through a read all operation, but we do need its representation.Because we are accessing a database and storing records, we now need to implement the Entity responsible for this data:</p>\n<p>\\</p>\n<pre><code class=\"java language-java\">@Getter\n@Setter\n@ToString\n@AllArgsConstructor\n@NoArgsConstructor\n@Builder\n@Entity\n@Table(name = \"VIDEO_SERIES\")\npublic class VideoSeries {\n\n    @Id\n    @GeneratedValue(strategy = IDENTITY)\n    @Column\n    private Long id;\n\n    @Column\n    private String name;\n\n    @Column\n    private Integer volumes;\n\n    @Column\n    private BigDecimal cashValue;\n\n    @Column\n    @Enumerated(EnumType.STRING)\n    private Genre genre;\n\n    @Override\n    public boolean equals(Object o) {\n        if (this == o) return true;\n        if (o == null || Hibernate.getClass(this) != Hibernate.getClass(o)) return false;\n        VideoSeries that = (VideoSeries) o;\n\n        return Objects.equals(id, that.id);\n    }\n\n    @Override\n    public int hashCode() {\n        return Objects.hash(getId(), getName(), getVolumes(), getCashValue(), getGenre());\n    }\n}\n</code></pre>\n<p>\\\nAs you may already have guessed, in this implementation we are going to use JPA repositories:public interface VideoSeriesRepository extends JpaRepository {</p>\n<p>}</p>\n<p>\\\nOn the query side, we have EventHandlers which are very similar in shape to the Aggregate. The difference, of course, is that they process immediately once they receive a command event:</p>\n<pre><code class=\"java language-java\">@Service  \n@ProcessingGroup(\"video-series\")  \npublic class VideoSeriesEventHandler {\n\n    private final VideoSeriesRepository videoSeriesRepository;  \n\n    public VideoSeriesEventHandler(VideoSeriesRepository videoSeriesRepository) {  \n        this.videoSeriesRepository = videoSeriesRepository;  \n    }  \n\n    @EventHandler  \n    public void on(AddSeriesEvent event) {  \n        videoSeriesRepository.save(VideoSeries  \n                .builder()  \n                .name(event.getName())  \n                .volumes(event.getVolumes())  \n                .genre(event.getGenre())  \n                .cashValue(event.getCashValue())  \n                .build());  \n    }  \n\n    @QueryHandler  \n    public List&lt;VideoSeriesDto&gt; handle(FindAllVideoSeriesQuery query) {  \n        return videoSeriesRepository.findAll().stream().map(  \n                videoSeries -&gt; VideoSeriesDto.builder()  \n                        .name(videoSeries.getName())  \n                        .volumes(videoSeries.getVolumes())  \n                        .cashValue(videoSeries.getCashValue())  \n                        .genre(videoSeries.getGenre())  \n                        .build()).collect(Collectors.toList());  \n    }  \n\n}\n</code></pre>\n<p>\\\nNotice that instead of CommandHandler, we now have QueryHandler. Instead of EventSourcingHandler we now have EventHandler. There are annotations used to distinguish what happens in the command service and in the query service respectively. Also, the id isn’t there. The id isn’t important because no data will be going to the event store. All the data is handled directly with the JPA repositories. We can now focus our attention on the Controller for the query service controller:</p>\n<pre><code class=\"java language-java\">@RestController  \n@RequestMapping(\"/video-series\")  \npublic class VideoSeriesController {\n\n    @Autowired  \n    private QueryGateway queryGateway;  \n\n    @GetMapping  \n    public List&lt;VideoSeriesDto&gt; gertAllVideoSeries() {  \n        return queryGateway.query(new FindAllVideoSeriesQuery(), ResponseTypes.multipleInstancesOf(VideoSeriesDto.class))  \n                .join();  \n    }  \n}  \n</code></pre>\n<p>\\\nAnd finally our Query Spring Boot Launcher:</p>\n<pre><code class=\"java language-java\">@SpringBootApplication\n@Import(AxonConfig.class)\npublic class VideoAppQueryLauncher {\n    public static void main(String[] args) {\n        SpringApplication.run(VideoAppQueryLauncher.class);\n    }\n}  \n</code></pre>\n<p>\\\nTo complete our application we need to configure it:</p>\n<pre><code># spring\nserver.port=8090\n# h2\nspring.h2.console.path=/spring-h2-video-series-query-console\nspring.h2.console.enabled=true\n# datasource\nspring.datasource.url=jdbc:h2:file:~/spring-datasource-video-series-query-file;auto_server=true\nspring.datasource.driver-class-name=org.h2.Driver\nspring.datasource.username=sa\nspring.datasource.password=sa\nspring.sql.init.schema-locations=classpath*:schema-h2.sql\nspring.sql.init.mode=always\n# hibernate\nspring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect\nspring.jpa.hibernate.ddl-auto=none\nspring.jpa.show-sql=true\n# mongodb\nspring.data.mongodb.host=localhost\nspring.data.mongodb.port=27017\nspring.data.mongodb.database=cqrs\n</code></pre>\n<p>\\\nGive it some structure:</p>\n<pre><code class=\"sql language-sql\">drop table if exists VIDEO_SERIES;\n\ncreate table VIDEO_SERIES  \n(  \nID         bigint auto_increment primary key not null,  \nNAME       varchar(100)                      not null,  \nVOLUMES    int                               not null,  \nCASH_VALUE decimal                           not null,  \nGENRE      varchar(100)                      not null  \n);\n</code></pre>\n<p>\\\nAnd finally some data:</p>\n<pre><code class=\"sql language-sql\">insert into VIDEO_SERIES (NAME, VOLUMES, CASH_VALUE, GENRE) values ('Modern Family', 12, 12.3, 'SITCOM');  \ninsert into VIDEO_SERIES (NAME, VOLUMES, CASH_VALUE, GENRE) values ('Six Feet Under', 10, 34.3, 'DRAMA');  \ninsert into VIDEO_SERIES (NAME, VOLUMES, CASH_VALUE, GENRE) values ('Queer as Folk', 24, 55.3, 'DRAMA');\n</code></pre>\n<p>\\\nWe are almost ready to make some tests. We need now consider how are we going to launch our persistence databases. In our example, we mention 2 important ones: MongoDB and H2. In the code, you’ll find also Postgres in other configurations. There are multiple ways to start this application combo. In the default profile, there only needs to be a running MondDB database on port 27017. We can do this by installing mongo or by using containers. This is why you’ll find three profiles on both the command and the query SpringBoot applications:</p>\n<p>\\</p>\n<ul>\n<li>default — Runs with MongoDB and embedded H2 — run with make docker-mongo or with a local running MongoDB</li>\n<li>local — Runs with MongoDB and Postgres — run with make docker-databases or with local running MongoDB and Postgres databases</li>\n<li>prod — Runs with MongoDB and Postgres in a common network with docker-compose — Just run make build-docker and the system will be set up for you</li>\n</ul>\n<p>\\\nCheck the Readme.md file for further details on how to run this on your machine.What I did for testing is very simple. First I performed a request to see all my current data:</p>\n<pre><code class=\"bash language-bash\">curl localhost:8090/video-series\n</code></pre>\n<p>\\</p>\n<pre><code class=\"json language-json\">[\n  {\n    \"name\": \"Modern Family\",\n    \"volumes\": 12,\n    \"cashValue\": 12.3,\n    \"genre\": \"SITCOM\"\n  },\n  {\n    \"name\": \"Six Feet Under\",\n    \"volumes\": 10,\n    \"cashValue\": 34.3,\n    \"genre\": \"DRAMA\"\n  },\n  {\n    \"name\": \"Queer as Folk\",\n    \"volumes\": 24,\n    \"cashValue\": 55.3,\n    \"genre\": \"DRAMA\"\n  }\n]\n</code></pre>\n<p>\\\nAs you can see, we get three series. Let’s add a new one:</p>\n<pre><code class=\"bash language-bash\">curl -d '{ \"name\":\"True Blood\", \"volumes\":30, \"cashValue\": 1323.2, \"genre\": \"Drama\"}' -H \"Content-Type: application/json\" -X POST http://localhost:8080/video-series\n</code></pre>\n<p>\\\nYou should now see:</p>\n<pre><code class=\"bash language-bash\">curl localhost:8090/video-series\n</code></pre>\n<p>\\</p>\n<pre><code class=\"json language-json\">[\n  {\n    \"name\": \"Modern Family\",\n    \"volumes\": 12,\n    \"cashValue\": 12.3,\n    \"genre\": \"SITCOM\"\n  },\n  {\n    \"name\": \"Six Feet Under\",\n    \"volumes\": 10,\n    \"cashValue\": 34.3,\n    \"genre\": \"DRAMA\"\n  },\n  {\n    \"name\": \"Queer as Folk\",\n    \"volumes\": 24,\n    \"cashValue\": 55.3,\n    \"genre\": \"DRAMA\"\n  },\n  {\n    \"name\": \"True Blood\",\n    \"volumes\": 30,\n    \"cashValue\": 1323.2,\n    \"genre\": \"Bloody\"\n  }\n]\n</code></pre>\n<p>\\</p>\n<h2 id=\"conclusion\">Conclusion</h2>\n<p>Note that although we can see that this works, it’s very important that you understand what happened behind the curtain for this application. The separation between the “write” and “read”, referred to as segregation of command and query is what makes the foundations of this architecture. The more decoupled the architecture is designed, the better it is. There are thousands of corner cases and special situations in the landscape of DDD and CQRS. Event sourcing is just one of the ways to get this implemented. In our example, we used Spring, SpringBoot, and Axon to get our commands and events across our network. We didn’t use any messaging queuing system. I do intend to write another article on that, but that will be for later. For the time being, I hope you have enjoyed this tutorial about this very simple example.You’ve probably noticed that I’m not using Java records everywhere. This is because in some instances I could not get the Axon converters to work with records, namely with the AddSeriesEvent. This issue is being resolved. Have a look at the issues document for more details on this.Have a look at the unit and integration tests. There I’ve used Kotlin, Kotest, Testcontainers, and Mockk, which are modern alternatives for Java, Jupiter 5, and Embedded databases. There is an example that goes through the whole architecture and tests the flow from issuing a command to handling the event, to storing and querying it back from the database.</p>\n<p>\\\nI have placed all the source code of this application on <a href=\"https://github.com/jesperancinha/video-series-app\">GitHub</a>I hope that you have enjoyed this article as much as I enjoyed writing it.Thanks in advance for your help, and thank you for reading!</p>\n<h2 id=\"references\">References</h2>\n<ul>\n<li><a href=\"https://www.enterprisedb.com/postgres-tutorials/working-postgres-audit-triggers\">Working with Postgres Audit Triggers</a></li>\n<li><a href=\"https://docs.microsoft.com/en-us/dotnet/architecture/microservices/microservice-ddd-cqrs-patterns/apply-simplified-microservice-cqrs-ddd-patterns\">Apply simplified CQRS and DDD patterns in a microservice</a></li>\n<li><a href=\"https://kotlinlang.org/docs/jvm-records.html\">Platforms JVM Records</a></li>\n<li><a href=\"https://docs.axoniq.io/reference-guide/extensions/mongo\">Mongo Axon Reference Guide</a></li>\n<li><a href=\"https://github.com/benwilcock/cqrs-microservice-sampler\">CQRS Microservice Sampler by Ben Wilcock on GitHub</a></li>\n<li><a href=\"http://patorjk.com/software/taag/#p=display&f=Graffiti&t=Type%20Something%20\">Patrick Gillespie's Text to Ascii Art Generator</a></li>\n<li><a href=\"https://dzone.com/articles/microservices-with-spring-boot-axon-cqrses-anddock\">Microservices With Spring Boot, Axon CQRS/ES, and Docker by Ben Wilcock</a></li>\n<li><a href=\"https://www.amqp.org/\">Advanced Message Queuing Protocol</a></li>\n<li><a href=\"https://docs.mongodb.com/manual/tutorial/install-mongodb-on-os-x/\">Install MongoDB on Mac OS</a></li>\n<li><a href=\"https://www.amazon.com/gp/product/0136291554?ie=UTF8&tag=martinfowlerc-20&linkCode=as2&camp=1789&creative=9325&creativeASIN=0136291554\">Object-Oriented Software Construction by Bertrand Meyer</a></li>\n<li><a href=\"https://docs.microsoft.com/en-gb/previous-versions/msp-n-p/jj554200%28v%3Dpandp.10%29\">CQRS Journey by Microsoft</a></li>\n</ul>\n<p>\\</p>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"This Architecture Principle from 2005 Can Address Caveats Introduced by Object-oriented Programming","url":"https://hackernoon.com/this-architecture-principle-from-2005-can-address-caveats-introduced-by-object-oriented-programming?source=rss","date":1736177556,"author":"João Esperancinha","unread":true,"content":"<p>This architecture principle was created by Alistair Cockburn in 2005. This is one of the many forms of DDD(Domain Driven Design Architecture). The goal was to find a way to solve or otherwise mitigate general caveats introduced by object-oriented programming. This is also known as Ports and Adapters architecture. The hexagon concept isn’t related to a six-side architecture nor does it have anything to do with the geometrical form. A hexagon has six sides indeed, but the idea is to illustrate the concept of many ports. This shape is also easier to split into two and to be used as a representation of the business logic of the application. The idea is to separate the application we want to develop into essentially three separate parts. The left, the core and the right. Going into an even broader concept we want to differentiate the concepts of inside and outside. Inside is the business logic and the application itself and outside is whatever we are using to connect and interact with the application.</p>\n<h2 id=\"core\">Core</h2>\n<p>The core of an application can be defined as the place where the business logic of the application happens. An application core receives data, performs operations on it and optionally may communicate with other external parties like databases or persistence entities.</p>\n<h2 id=\"ports\">Ports</h2>\n<p>Ports represent the boundaries of the application. Frequently they are implemented as interfaces to be used by outside parties. Their implementation resides outside the application, although they share the same domain.</p>\n<h3 id=\"primaryports\">Primary ports</h3>\n<p>Primary ports are also known as driving ports. These are the first communication points between the outside and the application core. Therefore, they can still be otherwise known as Inbound Ports. These ports “drive” the application. This means that this is where requests get through to the application. The upstream in this case contains data and the downstream contains the response to that request. Primary ports reside on the left side of the hexagon.</p>\n<h3 id=\"secondaryports\">Secondary ports</h3>\n<p>Secondary ports are in contrast known as driven ports. These also live on the outside and symmetrically to the primary ports they live on the right side of the hexagon. The application core uses secondary ports to upstream data to external entities. For example, an operation that needs data from the database will use a secondary port. The application “drives” the port in order to get data. The downstream contains thus the data coming from external entities on the right. Because the application sends data to the outside, secondary ports also get called Outbound Ports.</p>\n<h2 id=\"adapters\">Adapters</h2>\n<p>Adapters are essentially the implementation of ports. They are not supposed to be called directly at any point in the code.</p>\n<h3 id=\"primaryadapters\">Primary adapters</h3>\n<p>Primary adapters are implementations of primary ports. These are completely independent of the application core. This presents one of the clear advantages of this architecture. By implementing a port on the outside, we have control over how the implementation is done. This means that we can freely implement different forms of getting the data through to the application, without affecting the application itself. Just as ports primary adapters can also be called driving adapters. Examples of this are REST services and GUIs.</p>\n<h3 id=\"secondaryadapters\">Secondary adapters</h3>\n<p>Secondary adapters are implementations of secondary ports. Just as primary adapters, these are also independent of the application core with the same clear advantage. More often, we find that it’s in the secondary ports that lie the more difficult questions regarding the choice of technology. Frequently there is always the question of how we actually want to implement a persistence layer. It can be difficult to choose the right database, file system, or anything else. By using adapters, we can easily interchange adapters as we want. This means that regardless of the implementation, our application also does not change. It will only know the operations it needs to call and has no idea of how they are implemented. In the same way as primary adapters, secondary adapters are also referred to as driven adapters.</p>\n<h2 id=\"implementation\">Implementation</h2>\n<p>This application manages a lyric’s storage system. It stores the related artist and a lyrics text. We can then access an endpoint that will randomly show a certain lyric and the related artist. We can also perform all other POST, PUT, DELETE, and GET operations to perform CRUD(Create, Read, Update, Delete) operations via JPA(Java Persistence API) repositories. I purposely made this application simple and with common operations. It is important to understand concepts like core, domain, and infrastructure and this is also the reason why I created this application with all of these operations.</p>\n<p><a href=\"https://github.com/jesperancinha/favourite-lyrics-app\">   <img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2F6xn3fawdy4wfhm6zsq0u.jpg\" alt=\"blogcenter\" /></a></p>\n<h3 id=\"structure\">Structure</h3>\n<p>In the previous points, I’ve mentioned a few keywords that are important in order to set up our application. Since this is a demo application, a few considerations are important. I want the application to be simple, but also to represent what most applications do at its core. Most applications have a persistence framework, a business model, and a presentation layer. In this example, I have chosen Spring in order to use the MVC(Model View Controller) pattern. If you want to know more about the MVC pattern please follow the links below in the references section. To run the application we are going to use Spring Boot. To access our database I am using JPA repositories and finally, I have chosen an H2 in-memory database. You will also see that I’m using JUnit Jupiter, Mockito, and AssertJ. These are off the scope of this tutorial, but if you are interested in learning more about these frameworks, then please follow the links below in the references section.</p>\n<p>\\</p>\n<pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\nxsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\"&gt;\n&lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;\n&lt;packaging&gt;pom&lt;/packaging&gt;\n&lt;modules&gt;\n&lt;module&gt;favourite-lyrics-domain&lt;/module&gt;\n&lt;module&gt;favourite-lyrics-core&lt;/module&gt;\n&lt;module&gt;favourite-lyrics-jpa&lt;/module&gt;\n&lt;module&gt;favourite-lyrics-starter&lt;/module&gt;\n&lt;module&gt;favourite-lyrics-test&lt;/module&gt;\n&lt;module&gt;favourite-lyrics-rest&lt;/module&gt;\n&lt;/modules&gt;\n\n    &lt;groupId&gt;org.jesperancinha.lyrics&lt;/groupId&gt;\n    &lt;artifactId&gt;favourite-lyrics&lt;/artifactId&gt;\n    &lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;\n    &lt;name&gt;favourite-lyrics&lt;/name&gt;\n    &lt;description&gt;Favourite Lyrics App&lt;/description&gt;\n\n    &lt;properties&gt;\n        &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt;\n        &lt;java.version&gt;17&lt;/java.version&gt;\n        &lt;maven.compiler.source&gt;${java.version}&lt;/maven.compiler.source&gt;\n        &lt;maven.compiler.target&gt;${java.version}&lt;/maven.compiler.target&gt;\n        &lt;h2.version&gt;1.4.200&lt;/h2.version&gt;\n        &lt;lombok.version&gt;1.18.20&lt;/lombok.version&gt;\n        &lt;spring-tx.version&gt;5.2.2.RELEASE&lt;/spring-tx.version&gt;\n        &lt;assertj-core.version&gt;3.13.2&lt;/assertj-core.version&gt;\n        &lt;mockito-all.version&gt;1.10.19&lt;/mockito-all.version&gt;\n        &lt;junit-jupiter.version&gt;5.5.2&lt;/junit-jupiter.version&gt;\n        &lt;mockito-junit-jupiter.version&gt;3.1.0&lt;/mockito-junit-jupiter.version&gt;\n        &lt;jacoco-maven-plugin.version&gt;0.8.7&lt;/jacoco-maven-plugin.version&gt;\n        &lt;coveralls-maven-plugin.version&gt;4.3.0&lt;/coveralls-maven-plugin.version&gt;\n        &lt;jaxb-api.version&gt;2.3.1&lt;/jaxb-api.version&gt;\n        &lt;spring-boot-starter-parent.version&gt;2.6.1&lt;/spring-boot-starter-parent.version&gt;\n        &lt;flyway-core.version&gt;8.1.0&lt;/flyway-core.version&gt;\n        &lt;postgresql.version&gt;42.2.24&lt;/postgresql.version&gt;\n    &lt;/properties&gt;\n\n    &lt;dependencyManagement&gt;\n        &lt;dependencies&gt;\n            &lt;!-- Imports --&gt;\n            &lt;dependency&gt;\n                &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n                &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;\n                &lt;version&gt;${spring-boot-starter-parent.version}&lt;/version&gt;\n                &lt;type&gt;pom&lt;/type&gt;\n                &lt;scope&gt;import&lt;/scope&gt;\n            &lt;/dependency&gt;\n\n            &lt;!-- Inner dependencies --&gt;\n            &lt;dependency&gt;\n                &lt;groupId&gt;org.jesperancinha.lyrics&lt;/groupId&gt;\n                &lt;artifactId&gt;favourite-lyrics-domain&lt;/artifactId&gt;\n                &lt;version&gt;${project.version}&lt;/version&gt;\n            &lt;/dependency&gt;\n            &lt;dependency&gt;\n                &lt;groupId&gt;org.jesperancinha.lyrics&lt;/groupId&gt;\n                &lt;artifactId&gt;favourite-lyrics-core&lt;/artifactId&gt;\n                &lt;version&gt;${project.version}&lt;/version&gt;\n            &lt;/dependency&gt;\n            &lt;dependency&gt;\n                &lt;groupId&gt;org.jesperancinha.lyrics&lt;/groupId&gt;\n                &lt;artifactId&gt;favourite-lyrics-rest&lt;/artifactId&gt;\n                &lt;version&gt;${project.version}&lt;/version&gt;\n            &lt;/dependency&gt;\n            &lt;dependency&gt;\n                &lt;groupId&gt;org.jesperancinha.lyrics&lt;/groupId&gt;\n                &lt;artifactId&gt;favourite-lyrics-jpa&lt;/artifactId&gt;\n                &lt;version&gt;${project.version}&lt;/version&gt;\n            &lt;/dependency&gt;\n\n            &lt;!-- External dependencies --&gt;\n            &lt;dependency&gt;\n                &lt;groupId&gt;org.projectlombok&lt;/groupId&gt;\n                &lt;artifactId&gt;lombok&lt;/artifactId&gt;\n                &lt;version&gt;${lombok.version}&lt;/version&gt;\n                &lt;optional&gt;true&lt;/optional&gt;\n            &lt;/dependency&gt;\n            &lt;dependency&gt;\n                &lt;groupId&gt;org.flywaydb&lt;/groupId&gt;\n                &lt;artifactId&gt;flyway-core&lt;/artifactId&gt;\n                &lt;version&gt;${flyway-core.version}&lt;/version&gt;\n            &lt;/dependency&gt;\n            &lt;dependency&gt;\n                &lt;groupId&gt;org.postgresql&lt;/groupId&gt;\n                &lt;artifactId&gt;postgresql&lt;/artifactId&gt;\n                &lt;version&gt;${postgresql.version}&lt;/version&gt;\n            &lt;/dependency&gt;\n        &lt;/dependencies&gt;\n    &lt;/dependencyManagement&gt;\n\n    &lt;build&gt;\n        &lt;pluginManagement&gt;\n            &lt;plugins&gt;\n                &lt;plugin&gt;\n                    &lt;groupId&gt;org.jacoco&lt;/groupId&gt;\n                    &lt;artifactId&gt;jacoco-maven-plugin&lt;/artifactId&gt;\n                    &lt;version&gt;${jacoco-maven-plugin.version}&lt;/version&gt;\n                    &lt;executions&gt;\n                        &lt;execution&gt;\n                            &lt;goals&gt;\n                                &lt;goal&gt;prepare-agent&lt;/goal&gt;\n                            &lt;/goals&gt;\n                        &lt;/execution&gt;\n                        &lt;execution&gt;\n                            &lt;id&gt;report&lt;/id&gt;\n                            &lt;phase&gt;test&lt;/phase&gt;\n                            &lt;goals&gt;\n                                &lt;goal&gt;report&lt;/goal&gt;\n                            &lt;/goals&gt;\n                        &lt;/execution&gt;\n                    &lt;/executions&gt;\n                &lt;/plugin&gt;\n                &lt;plugin&gt;\n                    &lt;groupId&gt;org.eluder.coveralls&lt;/groupId&gt;\n                    &lt;artifactId&gt;coveralls-maven-plugin&lt;/artifactId&gt;\n                    &lt;version&gt;${coveralls-maven-plugin.version}&lt;/version&gt;\n                    &lt;dependencies&gt;\n                        &lt;dependency&gt;\n                            &lt;groupId&gt;javax.xml.bind&lt;/groupId&gt;\n                            &lt;artifactId&gt;jaxb-api&lt;/artifactId&gt;\n                            &lt;version&gt;${jaxb-api.version}&lt;/version&gt;\n                        &lt;/dependency&gt;\n                    &lt;/dependencies&gt;\n                &lt;/plugin&gt;\n            &lt;/plugins&gt;\n        &lt;/pluginManagement&gt;\n    &lt;/build&gt;\n&lt;/project&gt;\n</code></pre>\n<p>\\</p>\n<h2 id=\"domain\">Domain</h2>\n<p>Let’s have a look at what we need as a domain. Domain is in this case is anything that we can share between the core of the application and the ports.</p>\n<p>\\\nThe first thing to do is to define how we want data to be transferred around. In our case we do this via a DTO (Data Transfer Object):</p>\n<pre><code class=\"java language-java\">public record LyricsDto(\n        String lyrics,\n        String participatingArtist\n) {\n\n    @Builder\n    public LyricsDto {\n    }\n}\n</code></pre>\n<p>\\\nNormally you may need an exception that can be propagated throughout your architecture. This is a valid, but also very simplistic approach. Further discussion on this would require a new article and it goes off the scope of this article:</p>\n<pre><code class=\"java language-java\">public class LyricsNotFoundException extends RuntimeException {\n\n    public LyricsNotFoundException(UUID id) {\n        super(\"Lyrics with id %s not found!\".formatted(id));\n    }\n}\n</code></pre>\n<p>\\\nFurthermore, this is where you create your outbound port. In our case and at this point we know we want persistence, but we are not interested in how it’s implemented. This is why we only create an interface at this point.</p>\n<pre><code class=\"java language-java\">public interface LyricsPersistencePort {\n\n    void addLyrics(LyricsDto lyricsDto);\n\n    void removeLyrics(LyricsDto lyricsDto);\n\n    void updateLyrics(LyricsDto lyricsDto);\n\n    List&lt;LyricsDto&gt; getAllLyrics();\n\n    LyricsDto getLyricsById(UUID lyricsId);\n}\n</code></pre>\n<p>\\\nNotice that our interface declares all necessary CRUD methods.</p>\n<h2 id=\"core-1\">Core</h2>\n<p>\\\nCore works hand in hand with Domain. Both of them could be incorporated into one single module. However, this separation is very important because it makes core an implementation of only the business logic.Core is where we find our service interface:</p>\n<pre><code class=\"java language-java\">public interface LyricsService {\n\n    void addLyrics(LyricsDto lyricsDto);\n\n    void removeLyrics(LyricsDto lyricsDto);\n\n    void updateLyrics(LyricsDto lyricsDto);\n\n    List&lt;LyricsDto&gt; getAllLyrics();\n\n    LyricsDto getLyricsById(UUID lyricsId);\n\n}\n</code></pre>\n<p>\\\nAnd its implementation:</p>\n<pre><code class=\"java language-java\">@Service\npublic class LyricsServiceImpl implements LyricsService {\n\n    private final LyricsPersistencePort lyricsPersistencePort;\n\n    public LyricsServiceImpl(LyricsPersistencePort lyricsPersistencePort) {\n        this.lyricsPersistencePort = lyricsPersistencePort;\n    }\n\n    @Override\n    public void addLyrics(LyricsDto lyricsDto) {\n        lyricsPersistencePort.addLyrics(lyricsDto);\n    }\n\n    @Override\n    @Transactional\n    public void removeLyrics(LyricsDto lyricsDto) {\n        lyricsPersistencePort.removeLyrics(lyricsDto);\n    }\n\n    @Override\n    public void updateLyrics(LyricsDto lyricsDto) {\n        lyricsPersistencePort.updateLyrics(lyricsDto);\n    }\n\n    @Override\n    public List&lt;LyricsDto&gt; getAllLyrics() {\n        return lyricsPersistencePort.getAllLyrics();\n    }\n\n    @Override\n    public LyricsDto getLyricsById(UUID lyricsId) {\n        return lyricsPersistencePort.getLyricsById(lyricsId);\n    }\n}\n</code></pre>\n<p>\\\nChanges in core also represent changes in the business logic and this is why, for small applications there isn’t really a reason to further separate the port and the adapter into different modules. However, increased complexity may lead to splitting up the core into other different cores with different responsibilities. Take note that external modules should only use the interface and not the implementation of it.</p>\n<h2 id=\"jpa\">JPA</h2>\n<p>Let’s create an entity. First, we should create an entity that reflects the data we want to save. In this case we need to think about the participatingArtist and the lyrics themselves. Because it’s an entity, it also needs its ID. Please note that Artist is a field that could be set into another entity. I’m not doing that in this example because it would add further complexity and another ER(entity relationship) database paradigm, which is off the scope:</p>\n<pre><code class=\"java language-java\">@NoArgsConstructor\n@AllArgsConstructor\n@Builder\n@Entity\n@Table(name = \"lyrics\")\n@Getter\n@Setter\n@ToString\npublic class LyricsEntity {\n\n    @Id\n    @GeneratedValue(strategy = IDENTITY)\n    @Column\n    private UUID id;\n\n    @Column\n    private String lyrics;\n\n    @Column\n    private String participatingArtist;\n\n    @Override\n    public boolean equals(Object o) {\n        if (this == o) return true;\n        if (o == null || Hibernate.getClass(this) != Hibernate.getClass(o)) return false;\n        LyricsEntity that = (LyricsEntity) o;\n        return id != null &amp;&amp; Objects.equals(id, that.id);\n    }\n\n    @Override\n    public int hashCode() {\n        return getClass().hashCode();\n    }\n}\n</code></pre>\n<p>\\\nNow we can implement our JPA repository implementation. It will be our outbound port. This is where our CRUD lives:</p>\n<pre><code class=\"java language-java\">public interface LyricsRepository extends JpaRepository&lt;LyricsEntity, UUID&gt; {\n\n    void deleteAllByParticipatingArtist(String name);\n\n    LyricsEntity findByParticipatingArtist(String Name);\n\n    LyricsEntity findByLyrics(String Lyrics);\n}\n</code></pre>\n<p>\\\nFinally, we can implement our port. This is a step between the core and the JPA repository. This is our adapter and it’s the implementation of how we want to access our JPA repository:</p>\n<pre><code class=\"java language-java\">@Service\npublic class LyricsJpaAdapter implements LyricsPersistencePort {\n\n    private final LyricsRepository lyricsRepository;\n\n    public LyricsJpaAdapter(LyricsRepository lyricsRepository) {\n        this.lyricsRepository = lyricsRepository;\n    }\n\n    @Override\n    public void addLyrics(LyricsDto lyricsDto) {\n        final LyricsEntity lyricsEntity = getLyricsEntity(lyricsDto);\n        lyricsRepository.save(lyricsEntity);\n    }\n\n    @Override\n    public void removeLyrics(LyricsDto lyricsDto) {\n        lyricsRepository.deleteAllByParticipatingArtist(lyricsDto.getParticipatingArtist());\n    }\n\n    @Override\n    public void updateLyrics(LyricsDto lyricsDto) {\n        final LyricsEntity byParticipatingArtist = lyricsRepository.findByParticipatingArtist(lyricsDto.getParticipatingArtist());\n        if (Objects.nonNull(byParticipatingArtist)) {\n            byParticipatingArtist.setLyrics(lyricsDto.getLyrics());\n            lyricsRepository.save(byParticipatingArtist);\n        } else {\n            final LyricsEntity byLyrics = lyricsRepository.findByLyrics(lyricsDto.getLyrics());\n            if (Objects.nonNull(byLyrics)) {\n                byLyrics.setParticipatingArtist(lyricsDto.getParticipatingArtist());\n                lyricsRepository.save(byLyrics);\n            }\n        }\n    }\n\n    @Override\n    public List&lt;LyricsDto&gt; getAllLyrics() {\n        return lyricsRepository.findAll()\n                .stream()\n                .map(this::getLyrics)\n                .collect(Collectors.toList());\n    }\n\n    @SneakyThrows\n    @Override\n    public LyricsDto getLyricsById(UUID lyricsId) {\n        return getLyrics(lyricsRepository.findById(lyricsId)\n                .orElseThrow((Supplier&lt;Throwable&gt;) () -&gt; new LyricsNotFoundException(lyricsId)));\n    }\n\n    private LyricsEntity getLyricsEntity(LyricsDto lyricsDto) {\n        return LyricsEntity.builder()\n                .participatingArtist(lyricsDto.getParticipatingArtist())\n                .lyrics(lyricsDto.getLyrics())\n                .build();\n    }\n\n    private LyricsDto getLyrics(LyricsEntity lyricsEntity) {\n        return LyricsDto.builder()\n                .participatingArtist(lyricsEntity.getParticipatingArtist())\n                .lyrics(lyricsEntity.getLyrics())\n                .build();\n    }\n\n}\n</code></pre>\n<p>\\\nThis completes our application implementation on the right side. Note that I’ve implemented the update operation very simplistically. If the coming DTO already has a parallel via the participatingArtist then update the lyrics. If the coming DTO already has a parallel via the lyrics then update the participatingArtist. Also notice the getLyricsById method. It will throw the domain defined LyricsNotFoundException if the lyrics with the specified ID do not exist. All mechanisms are in place to access the database. Next we are going to see the implementation of a REST service which uses the inbound port to upstream data to the application.RESTI used the typical way to implement a rest service using the Spring MVC framework. Essentially all we need is firstly an interface to define what we need in our requests. This is, in other words, our inbound port:</p>\n<pre><code class=\"java language-java\">public interface LyricsController {\n\n    @PostMapping(\"/lyrics\")\n    ResponseEntity&lt;Void&gt; addLyrics(\n            @RequestBody\n                    LyricsDto lyricsDto);\n\n    @DeleteMapping(\"/lyrics\")\n    ResponseEntity&lt;String&gt; removeLyrics(\n            @RequestBody\n                    LyricsDto lyricsDto);\n\n    @PutMapping(\"/lyrics\")\n    ResponseEntity&lt;String&gt; updateLyrics(\n            @RequestBody\n                    LyricsDto lyricsDto);\n\n    @GetMapping(\"/lyrics/{lyricsId}\")\n    ResponseEntity&lt;LyricsDto&gt; getLyricsById(\n            @PathVariable\n                    UUID lyricsId);\n\n    @GetMapping(\"/lyrics\")\n    ResponseEntity&lt;List&lt;LyricsDto&gt;&gt; getLyrics();\n\n    @GetMapping(\"/lyrics/random\")\n    ResponseEntity&lt;LyricsDto&gt; getRandomLyric();\n\n}\n</code></pre>\n<p>\\\nAnd finally its implementation:</p>\n<pre><code class=\"java language-java\">@Slf4j\n@RestController\npublic class LyricsControllerImpl implements LyricsController {\n\n    private final LyricsService lyricsService;\n\n    private final Random random = new Random();\n\n    public LyricsControllerImpl(LyricsService lyricsService) {\n        this.lyricsService = lyricsService;\n    }\n\n    @Override\n    public ResponseEntity&lt;Void&gt; addLyrics(LyricsDto lyricsDto) {\n        lyricsService.addLyrics(lyricsDto);\n        return new ResponseEntity&lt;&gt;(HttpStatus.CREATED);\n    }\n\n    @Override\n    public ResponseEntity&lt;String&gt; removeLyrics(LyricsDto lyricsDto) {\n        lyricsService.removeLyrics(lyricsDto);\n        return new ResponseEntity&lt;&gt;(HttpStatus.OK);\n    }\n\n    @Override\n    public ResponseEntity&lt;String&gt; updateLyrics(LyricsDto lyricsDto) {\n        lyricsService.updateLyrics(lyricsDto);\n        return new ResponseEntity&lt;&gt;(HttpStatus.OK);\n    }\n\n    @Override\n    public ResponseEntity&lt;LyricsDto&gt; getLyricsById(UUID lyricsId) {\n        try {\n            return new ResponseEntity&lt;&gt;(lyricsService.getLyricsById(lyricsId), HttpStatus.OK);\n        } catch (LyricsNotFoundException ex) {\n            log.error(\"Error!\", ex);\n            return new ResponseEntity&lt;&gt;(HttpStatus.NOT_FOUND);\n        }\n    }\n\n    @Override\n    public ResponseEntity&lt;List&lt;LyricsDto&gt;&gt; getLyrics() {\n        return new ResponseEntity&lt;&gt;(lyricsService.getAllLyrics(), HttpStatus.OK);\n    }\n\n    @Override\n    public ResponseEntity&lt;LyricsDto&gt; getRandomLyric() {\n        final List&lt;LyricsDto&gt; allLyrics = lyricsService.getAllLyrics();\n        final int size = allLyrics.size();\n        return new ResponseEntity&lt;&gt;(allLyrics.get(random.nextInt(size)), HttpStatus.OK);\n    }\n}\n</code></pre>\n<p>\\\nHere we have a complete typical rest service implemented where we can create lyrics, update lyrics, delete lyrics and read lyrics. We can do the latter in three different ways. We can read all of them, get one by id or just get one randomly. Application wise we have everything ready. What we still don’t have at this point is the Spring environment and the Spring Boot Launcher. Let’s have a look at this next.Spring BootOur application needs a launcher to get started. This is accomplished with Spring Boot:</p>\n<pre><code class=\"java language-java\">@SpringBootApplication\n@EnableTransactionManagement\npublic class LyricsDemoApplicationLauncher {\n    public static void main(String[] args) {\n        SpringApplication.run(LyricsDemoApplicationLauncher.class);\n    }\n}\n</code></pre>\n<p>\\\nThen we need to configure our environment and make sure that Spring Boot is aware of H2 and the JPA environment. You do this in the application.properties file:</p>\n<pre><code># Postgres\nspring.datasource.url=jdbc:postgresql://192.168.0.11:5432/fla?currentSchema=hexadecimal\nspring.datasource.username=fla\nspring.datasource.password=admin\nspring.sql.init.mode=never\n# Hibernate\nspring.jpa.hibernate.ddl-auto=none\nspring.jpa.show-sql=true\n# Flyway\nspring.flyway.enabled=true\nspring.flyway.baseline-on-migrate=true\nspring.flyway.url=${spring.datasource.url}\nspring.flyway.user=${spring.datasource.username}\nspring.flyway.password=${spring.datasource.password}\nspring.flyway.locations=classpath:/db\n</code></pre>\n<p>\\\nLuckily for us spring will look for the schema file with the name schema.sql. So let’s create our very basic schema:</p>\n<pre><code class=\"sql language-sql\">create schema if not exists hexadecimal;\ndrop table if exists hexadecimal.LYRICS;\n\ncreate table hexadecimal.LYRICS\n(\nID                   UUID DEFAULT gen_random_uuid(),\nPARTICIPATING_ARTIST VARCHAR(100) NOT NULL,\nLYRICS               VARCHAR(100) NOT NULL\n);\n</code></pre>\n<p>\\\nSpring, also looks for data.sql. So let’s put in some data:</p>\n<pre><code class=\"sql language-sql\">insert into LYRICS (PARTICIPATING_ARTIST, LYRICS) values ('William Orbit', 'Sky fits heaven so fly it');\ninsert into LYRICS (PARTICIPATING_ARTIST, LYRICS) values ('Ava Max', 'Baby I''m torn');\ninsert into LYRICS (PARTICIPATING_ARTIST, LYRICS) values ('Faun', 'Wenn wir uns wiedersehen');\ninsert into LYRICS (PARTICIPATING_ARTIST, LYRICS) values ('Abel', 'Het is al lang verleden tijd');\ninsert into LYRICS (PARTICIPATING_ARTIST, LYRICS) values ('Billie Eilish', 'Chest always so puffed guy');\n</code></pre>\n<p>\\\nWe are now ready. Now it’s all about starting the application and making tests. To do this, we have to make sure that we have Java SDK 17 installed and Node JS 16 or any version above these. They just have to be LTS versions. I have made scripts and created instructions about this in the Readme.md file located at the root of the project. Once you have this you need to make sure you have docker. Then please have a look at the Makefile at the root where I have created handy scripts for the project. Once all of this is checked, you can just run:</p>\n<pre><code class=\"bash language-bash\">make docker-clean-build-start\n</code></pre>\n<p>\\\nAlternatively, you can run:</p>\n<pre><code class=\"bash language-bash\">mvn clean install\ncd favourite-lyrics-gui\nyarn build\ncd ..\ndocker-compose up -d\n</code></pre>\n<p>\\\n\\\nThis should start the application in a docker-compose environment.All methods should be easily testable via curl or postman. As an example you can use curl to get a random lyric:</p>\n<pre><code class=\"bash language-bash\">curl localhost:8080/lyrics/random\n</code></pre>\n<p>\\\nAnd the result could be:</p>\n<pre><code class=\"json language-json\">{“lyrics”:”Chest always so puffed guy”,”participatingArtist”:”Billie Eilish”}\n</code></pre>\n<p>\\\nOn the GUI you should see something like this:</p>\n<p><a href=\"https://github.com/jesperancinha/favourite-lyrics-app\">   <img src=\"https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fmyoda1cb4lixuiq5rh3s.jpg\" alt=\"blogcenter\" /></a></p>\n<h2 id=\"conclusion\">Conclusion</h2>\n<p>\\\nThis has been an exercise to mostly understand the hexagonal architecture principles. Using Spring is just one possibility. You can implement this architecture with other languages. You can find original examples in C#, Python, Ruby, and many other languages. In the Java landscape, you can do this also with any EE framework like JavaEE, JakartaEE, or any other enterprise framework. The point is to always remember to isolate the inside from the outside and make sure that the communication is clear via ports and that the implementation via adapters remains independent of the application core.I have implemented this application with different modules which represented different responsibilities. However, you may also implement this in a single module. You can try that and you will see that the principles don’t really change. The only difference is that separate modules allow you to make changes independently and allow you to create different versions of your modules. In one single module, you will have to make releases of everything at the same time as a follow-up to code changes. However, both ways respect and follow this architecture, because, in the end, the point is to make interfaces and to use them in the data streaming instead of their implementations. Their implementations will be used underwater, and they are interchangeable without affecting the inside also known as the application core.I have placed all the source code of this application in <a href=\"https://github.com/jesperancinha/favourite-lyrics-app\">GitHub</a>.I hope that you have enjoyed this article as much as I enjoyed writing it.</p>\n<p>\\\nThanks in advance for your help, and thank you for reading!</p>\n<h2 id=\"references\">References</h2>\n<ul>\n<li><a href=\"https://flywaydb.org/documentation/concepts/migrations.html#naming\">Flyway Documentation/Migrations</a></li>\n<li><a href=\"http://www.planetb.ca/syntax-highlight-word\">PlantB Code Highlighter</a></li>\n<li><a href=\"https://alistair.cockburn.us/hexagonal-architecture/\">Hexagonal Architecture by Alistair Cockburn</a></li>\n<li><a href=\"https://www.getpostman.com/\">Postman</a></li>\n<li><a href=\"https://spring.io/guides/gs/serving-web-content/\">Serving Web Content Spring IO</a></li>\n<li><a href=\"https://junit.org/junit5/docs/current/user-guide/\">JUnit</a></li>\n<li><a href=\"https://site.mockito.org/\">Mockito</a></li>\n<li><a href=\"https://joel-costigliola.github.io/assertj/\">AssertJ</a></li>\n</ul>\n<p>\\</p>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"NVIDIA Working On \"-flto-partition=locality\" GCC Option To Boost Performance For Some CPU Workloads","url":"https://www.phoronix.com/news/NVIDIA-GCC-flto-locality","date":1736175935,"author":"Michael Larabel","unread":true,"content":"NVIDIA compiler engineers have spent the past several months working on a proposed GCC option -flto-partition=locality for having the compiler optimize the code layout for locality between callees and callers as part of the link-time optimization (LTO) process. For some workloads NVIDIA is finding this -flto-partition=locality compiler option being of significant help for bettering the CPU performance...","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Intel Announces Core Ultra 200H / Core Ultra 200HX Series","url":"https://www.phoronix.com/news/Intel-Core-Ultra-200H-200HX","date":1736172600,"author":"Michael Larabel","unread":true,"content":"Intel used the start of CES 2025 for announcing the newest Arrow Lake processors for the Core Ultra 200H and Core Utra 200HX mobile processors...","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Device Mapper Atomic Write Support Patches Posted","url":"https://www.phoronix.com/news/Device-Mapper-Atomic-Write","date":1736172112,"author":"Michael Larabel","unread":true,"content":"Along with other recent Linux kernel patches around atomic write support, a set of Device Mapper (DM) patches were posted today for implementing said functionality...","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"As EV Sales Stall, Plug-In Hybrids Get a Reboot","url":"https://spectrum.ieee.org/plug-in-hybrid","date":1736168403,"author":"Lawrence Ulrich","unread":true,"content":"<p>This year’s Ram 1500 Ramcharger reveals the new focus on extended range</p>","flags":null,"enclosureUrl":"https://spectrum.ieee.org/media-library/eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpbWFnZSI6Imh0dHBzOi8vYXNzZXRzLnJibC5tcy81NTQ1NzgyOS9vcmlnaW4ucG5nIiwiZXhwaXJlc19hdCI6MTc2Mjk1MTUxN30.7Z86xa93LM6a9o474EPQVmOTRK13BY7X-r6lwWQ82tE/image.png?width=600","enclosureMime":""},{"title":"A Hybrid Car That’s Also a Supercar","url":"https://spectrum.ieee.org/hybrid-supercars","date":1736168403,"author":"Lawrence Ulrich","unread":true,"content":"<p>New models from BMW, Corvette, Ferrari, and Porsche stress performance, not mileage</p>","flags":null,"enclosureUrl":"https://spectrum.ieee.org/media-library/eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpbWFnZSI6Imh0dHBzOi8vYXNzZXRzLnJibC5tcy81NTQ1Nzk3Mi9vcmlnaW4uanBnIiwiZXhwaXJlc19hdCI6MTc4NzQ1NTMxMX0.ZK_DJxOO1lpKG6HrP4FUCNWqjPRYTi6EjgpmMxbsQG8/image.jpg?width=600","enclosureMime":""},{"title":"Fedora Stakeholders Have Been Debating Whether To Retire GlusterFS","url":"https://www.phoronix.com/news/Fedora-Maybe-Retire-GlusterFS","date":1736163982,"author":"Michael Larabel","unread":true,"content":"A discussion that originally started last summer has been reignited: whether it's time to retire GlusterFS within Fedora Linux. But following discussions in recent days, there may be a new packager willing to take over but it doesn't change the fact of declining upstream activity around GlusterFS...","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"HiSilicon HIBMC DP Support For Linux 6.14, Additional AMDXDNA Fixes Queued","url":"https://www.phoronix.com/news/HiSilicon-HIBMC-DP-Misc-Next","date":1736162717,"author":"Michael Larabel","unread":true,"content":"Maxime Ripard of Red Hat today sent out the first set of \"drm-misc-next\" patches of 2025 for queuing into DRM-Next until the Linux 6.14 merge window opens in the coming weeks...","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Intel Touch Host Controller Drivers Nearing The Mainline Linux Kernel","url":"https://www.phoronix.com/news/Intel-Touch-Host-Controller-v4","date":1736162062,"author":"Michael Larabel","unread":true,"content":"For the past several months Intel Linux software engineers have been working on Intel Touch Host Controller drivers as an IP block on the PCH for handling touchscreen, touchpad, and related touch input devices. On Sunday the fourth iteration of these driver patches were sent out as these new Intel open-source drivers near the mainline Linux kernel...","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Linux 6.13-rc6 Released Following A Fairly Quiet Week","url":"https://www.phoronix.com/news/Linux-6.13-rc6-Released","date":1736116137,"author":"Michael Larabel","unread":true,"content":"Linus Torvalds just released Linux 6.13-rc6 as the newest weekly test release of the Linux 6.13 kernel that is working its way toward stable later in January...","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Xubuntu 25.04 Preparing Xfce 4.20 Desktop Upgrade","url":"https://www.phoronix.com/news/Xubuntu-25.04-Xfce-4.20","date":1736098080,"author":"Michael Larabel","unread":true,"content":"For fans of the Xubuntu derivative of Ubuntu Linux, the upcoming Xubuntu 25.04 release will feature the Xfce 4.20 desktop...","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"ChromeOS UCSI Driver Queued Ahead Of Linux 6.14 Cycle","url":"https://www.phoronix.com/news/Linux-6.14-ChromeOS-UCSI","date":1736097695,"author":"Michael Larabel","unread":true,"content":"With the upcoming Linux 6.14 cycle Google is poised to have its ChromeOS UCSI driver upstreamed...","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Phoronix Forums Upgrade - Helping To Improve Site Responsiveness","url":"https://www.phoronix.com/news/Phoronix-Forums-VB6-Upgrade","date":1736084872,"author":"Michael Larabel","unread":true,"content":"This morning I rolled out upgraded forum software to improve the forum experience and also hopefully help the overall Phoronix.com site performance with the database server being hammered recently from the forums...","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"SwitchBot Introduces Modular Mobile Home Robot","url":"https://spectrum.ieee.org/switchbot-k20-pro-ces","date":1736082003,"author":"Evan Ackerman","unread":true,"content":"<p>The K20+ Pro can ferry useful appliances around your house</p>","flags":null,"enclosureUrl":"https://spectrum.ieee.org/media-library/eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpbWFnZSI6Imh0dHBzOi8vYXNzZXRzLnJibC5tcy81NTQ0OTE0OC9vcmlnaW4ucG5nIiwiZXhwaXJlc19hdCI6MTc3NTQ2OTg5OX0.AJyyX46BFNq8KqtR76n0ERqXiNnaxeE6s6CboBimuWA/image.png?width=600","enclosureMime":""},{"title":"Loongson Introducing An EDAC Driver For LoongArch + ECC Memory Systems","url":"https://www.phoronix.com/news/LoongArch-ECC-EDAC-Driver","date":1736077897,"author":"Michael Larabel","unread":true,"content":"Loongson's LoongArch processors for the Chinese market have been primarily for desktop systems but it looks like their workstation/server ambitions may be growing with now contributing an Error Detection And Correction (EDAC) driver for Loongson SoCs with ECC memory...","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Serpent OS Demonstrates Working Offline Rollbacks With Its Package Manager","url":"https://www.phoronix.com/news/Serpent-OS-Offline-Rollbacks","date":1736077342,"author":"Michael Larabel","unread":true,"content":"Hot off the recent Serpent OS Alpha release and talking up new features for 2025, this original Linux distribution led by open-source developer Ikey Doherty is now demonstrating its offline rollback support with integration around its package management system...","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Marvell Begins Working On Linux Support For Their Next-Gen Octeon \"CN20K\" DPU","url":"https://www.phoronix.com/news/Marvell-CN20K-Octeon-Linux","date":1736075873,"author":"Michael Larabel","unread":true,"content":"For Marvell's line of Octeon line of data processing units (DPUs) and baseband processors, it looks like a new DPU is on the way with the CN20K silicon seeing work on enabling Linux support...","flags":null,"enclosureUrl":"","enclosureMime":""}]}