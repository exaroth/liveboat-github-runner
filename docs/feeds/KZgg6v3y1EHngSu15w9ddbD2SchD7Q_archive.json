{"id":"KZgg6v3y1EHngSu15w9ddbD2SchD7Q","title":"Dev News - Last 2 days","displayTitle":"Dev News - Last 2 days","url":"","feedLink":"","isQuery":true,"isEmpty":false,"isHidden":false,"items":[{"title":"State of the Budgie: 2024 In Review and Goals for 2025","url":"https://www.reddit.com/r/linux/comments/1hvbzqh/state_of_the_budgie_2024_in_review_and_goals_for/","date":1736202874,"author":"/u/SAJewers","unread":true,"content":"&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/SAJewers\"> /u/SAJewers </a> <br/> <span><a href=\"https://buddiesofbudgie.org/blog/state-of-the-budgie-2024\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/linux/comments/1hvbzqh/state_of_the_budgie_2024_in_review_and_goals_for/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"I live my life a quarter century at a time","url":"https://tla.systems/blog/2025/01/04/i-live-my-life-a-quarter-century-at-a-time/","date":1736202178,"author":"CharlesW","unread":true,"content":"\n<p>Article URL: <a href=\"https://tla.systems/blog/2025/01/04/i-live-my-life-a-quarter-century-at-a-time/\">https://tla.systems/blog/2025/01/04/i-live-my-life-a-quarter-century-at-a-time/</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42616699\">https://news.ycombinator.com/item?id=42616699</a></p>\n<p>Points: 91</p>\n<p># Comments: 41</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Rust WASM Plugins Example","url":"https://www.reddit.com/r/rust/comments/1hvaz5f/rust_wasm_plugins_example/","date":1736200284,"author":"/u/emblemparade","unread":true,"content":"<!-- SC_OFF --><div class=\"md\"><p><a href=\"https://github.com/tliron/rust-wasm-plugins-examples\">See the GitHub repository</a></p> <p>(Edit: it&#39;s &quot;Wasm&quot;, not &quot;Wasm&quot;, but unfortunately I can&#39;t fix the title)</p> <h1>A Great Fit</h1> <p>You&#39;ve probably heard that <a href=\"https://web.dev/explore/webassembly\">Wasm</a> (WebAssembly) can be a great way to support plugins in your application. Plugin authors can write them in any Wasm-compatible language and you&#39;re off to the races with your choice among various excellent and safe Wasm runtimes for Rust, including ones optimized for embedded environments (e.g. <a href=\"https://github.com/wasmi-labs/wasmi\">wasmi</a>).</p> <h1>Not So Easy</h1> <p>Unfortunately, you&#39;re going to find out (in early 2025) that examples of this often-mentioned use case are hard to come by, and that so much of the documentation is irrelevant, confusing, incomplete, or just out of date, as things have been moving quite quickly in the Wasm world.</p> <p>If you&#39;ve read Surma&#39;s <a href=\"https://surma.dev/things/rust-to-webassembly/\">Rust to WebAssembly the hard way</a> (highly recommended starting point!) then you might feel quite confident in your ability to build <code>.wasm</code> modules, load them into Rust, call functions in them, and expose functions to them. But the hard way becomes a dead end as you realize something quite critical: Wasm only supports the transfer of just primitive numeric types, namely integers and floats (and not even unsigned integers). This is an intentional and understandable design choice to keep Wasm lean and mean and agnostic to any specific implementation.</p> <p>But this means that if you want to transfer something as basic as a string or a vector then you&#39;ll have the delve deep into the the Wasm memory model. People have come up with various solutions for Rust, from piggy-backing on <a href=\"https://doc.rust-lang.org/std/ffi/struct.CString.html\">std::ffi::CString</a> to exposing custom malloc/free functions to the Wasm module. But not only are these solutions painful, they would obviously need to be ported to every language we want to support, each with its own string and array models. There was, and still is, a need for some kind of standard, built on top of Wasm, that would support higher-level constructs in a portable way.</p> <h1>The Temporary Solution</h1> <p>It took some time for the community to rally around one. For a while, a promising proposal was Wasm Interfaces (WAI). This was <a href=\"https://github.com/wasmerio/wai\">pioneered by Wasmer</a>, where the <a href=\"https://docs.wasmer.io/wai\">documentation</a> still points to it as &quot;the&quot; solution (early 2025). As usual in the Wasm world, even that documentation can only take you so far. None of it actually mentions hosting WAI in Rust! And it only shows importing interfaces, not exporting them, though I have managed to learn how to handle exports by delving into the WAI tooling source code. The idea behind WAI is that you describe your interface in a <a href=\"https://github.com/wasmerio/wai/blob/main/WAI.md\"><code>.wai</code> file</a> and use tooling (e.g. macros) to generate the boilerplate code for clients and hosts, a lot like how things work with RPC protocols (e.g. protobufs).</p> <p>WAI had not been widely adopted, however it does work and is also quite straightforward. We won&#39;t be using it in this example, but it&#39;s useful to be aware of its existence.</p> <h1>The Promising Solution</h1> <p>But the consensus now seems to be around the <a href=\"https://component-model.bytecodealliance.org/\">Wasm Component Model</a>, which expands on WAI with proper namespacing, resources, and richer custom data types. The Component Model is actually part of WASI, and indeed is being used to provide the WASI extensions. So, what&#39;s <a href=\"https://wasi.dev/\">WASI</a>? It&#39;s an initiative by the community to deliver a set of common APIs on top of Wasm for accessing streams, like files and stdout/stderr, network sockets, and eventually threads. I say &quot;eventually&quot; because WASI is still very much a work in progress. As of now (early 2025) we just got &quot;preview 2&quot; of it. Luckily, Rust can target &quot;wasip2&quot;, meaning that it can be used to create the latest and greatest Components. Though, note that wasip2 does produce larger minimal <code>.wasm</code> files than WAI due to the inclusion of the machinery for the Component Model.</p> <p>Like WAI, the Component Model relies on an interface definition file, <a href=\"https://github.com/WebAssembly/component-model/blob/main/design/mvp/WIT.md\"><code>.wit</code></a>. And <a href=\"https://wasmtime.dev/\">Wasmtime</a> has the tooling for it! Yay! So, are we finally off to the races with our plugin system?</p> <p>Not so fast. Again, finding examples and straightforward documentation is not easy. Wasmtime is a very comprehensive and performative implementation, but it&#39;s also designed by committee and has a lot of contributors. And due to the fast-moving nature of these things, what you find might not represent what is actually going on or what you should be using.</p> <h1>Finally We Get to the Point</h1> <p>All that to say, that&#39;s why I created this repository. It&#39;s intended to be a minimal and straightforward example of how to build plugins in Rust (as Components) and how to host them in your application using Wasmtime and its WIT tooling. Well, at least for early 2025... As of now it does not demonstrate the more advanced features of WIT, such as custom data types, but I might add those in the future.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/emblemparade\"> /u/emblemparade </a> <br/> <span><a href=\"https://www.reddit.com/r/rust/comments/1hvaz5f/rust_wasm_plugins_example/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/rust/comments/1hvaz5f/rust_wasm_plugins_example/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Triptych Proposals","url":"https://alexanderpetros.com/triptych/","date":1736196754,"author":"felipemesquita","unread":true,"content":"\n<p>Article URL: <a href=\"https://alexanderpetros.com/triptych/\">https://alexanderpetros.com/triptych/</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42615646\">https://news.ycombinator.com/item?id=42615646</a></p>\n<p>Points: 129</p>\n<p># Comments: 40</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Used Meta AI, now Instagram is using my face on ads targeted at me","url":"https://old.reddit.com/r/ABoringDystopia/comments/1ht7fft/used_meta_ai_to_edit_a_selfie_now_instagram_is/","date":1736196298,"author":"amrrs","unread":true,"content":"\n<p>Article URL: <a href=\"https://old.reddit.com/r/ABoringDystopia/comments/1ht7fft/used_meta_ai_to_edit_a_selfie_now_instagram_is/\">https://old.reddit.com/r/ABoringDystopia/comments/1ht7fft/used_meta_ai_to_edit_a_selfie_now_instagram_is/</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42615538\">https://news.ycombinator.com/item?id=42615538</a></p>\n<p>Points: 263</p>\n<p># Comments: 144</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"What are the reasons for not picking Go templates over Templ with HTMX?","url":"https://www.reddit.com/r/golang/comments/1hv9apb/what_are_the_reasons_for_not_picking_go_templates/","date":1736196198,"author":"/u/coderustle","unread":true,"content":"<!-- SC_OFF --><div class=\"md\"><p>Searching on GitHub for Go + HTMX, I noticed there are a lot of examples using Go + Templ + HTMX. I would like to know why people choose not to stick with Go templates from the standard library.</p> <p>Coming from Django templates, where using too many includes might impact performance, I found Go templates to be a breath of fresh air. And combining them with HTMX is like a match made in heaven. I’m not sure if there’s any performance penalty for Go having many partial templates, but I really like this pattern where I can group multiple HTMX partial templates per page. </p> <p>Here is a sample app that I used as playground to experiment with HTMX and Go templates. Link <a href=\"https://github.com/madalinpopa/go-htmx-demo\">here</a></p> <p>Why would you choose templ over Go Templates for HTMX?</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/coderustle\"> /u/coderustle </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1hv9apb/what_are_the_reasons_for_not_picking_go_templates/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hv9apb/what_are_the_reasons_for_not_picking_go_templates/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Essential Docker Security Tips for Self-Hosting","url":"https://www.reddit.com/r/linux/comments/1hv8nmb/essential_docker_security_tips_for_selfhosting/","date":1736194664,"author":"/u/justsml","unread":true,"content":"&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/justsml\"> /u/justsml </a> <br/> <span><a href=\"https://danlevy.net/docker-security-tips-for-self-hosting/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/linux/comments/1hv8nmb/essential_docker_security_tips_for_selfhosting/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Essential CLI Tools for Developers","url":"https://www.reddit.com/r/programming/comments/1hv7ycv/essential_cli_tools_for_developers/","date":1736193010,"author":"/u/der_gopher","unread":true,"content":"&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/der_gopher\"> /u/der_gopher </a> <br/> <span><a href=\"https://packagemain.tech/p/essential-clitui-tools-for-developers\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/comments/1hv7ycv/essential_cli_tools_for_developers/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"rust-analyzer changelog #267","url":"https://www.reddit.com/r/rust/comments/1hv7jgs/rustanalyzer_changelog_267/","date":1736192002,"author":"/u/WellMakeItSomehow","unread":true,"content":"&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/WellMakeItSomehow\"> /u/WellMakeItSomehow </a> <br/> <span><a href=\"https://rust-analyzer.github.io/thisweek/2025/01/06/changelog-267.html\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/rust/comments/1hv7jgs/rustanalyzer_changelog_267/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Mindtick - lightweight CLI note tracker using SQLite","url":"https://www.reddit.com/r/golang/comments/1hv7d27/mindtick_lightweight_cli_note_tracker_using_sqlite/","date":1736191554,"author":"/u/Witty_Wrangler_3899","unread":true,"content":"<!-- SC_OFF --><div class=\"md\"><p><a href=\"https://github.com/ninesl/mindtick\">https://github.com/ninesl/mindtick</a></p> <p><code>mindtick view</code></p> <pre><code>[ Jan 04, 2025 ] note 04:33 PM note message win 06:33 PM win message [ Jan 05, 2025 ] note 01:33 AM note message win 03:33 AM win message note 09:33 AM note message fix 12:33 PM fix message win 01:33 PM win message 06:33 PM win message task 07:33 PM task message note 08:33 PM note message fix 10:33 PM fix message [ Jan 06, 2025 ] win 04:33 AM win message note 06:33 AM note message task 08:33 AM task message fix 01:33 PM fix message </code></pre> <h1>Why make this instead of a todo.txt?</h1> <p>I made this project because I have been having difficulties when I&#39;m explaining to my non-technical clients what I&#39;ve been working on.</p> <p>This is really helpful for me to get an overview of my progress/what I&#39;ve been doing in a project because of the timestamps on each message being sent to Mindtick.</p> <p>While <code>todo.txt</code> is extremely simple for task tracking, this tool is more personal and thought-driven. I think of it as a changelog for your mind. It&#39;s not just about task tracking, it&#39;s about documenting your mental journey. Just remember to use it consistently!</p> <p>run <code>mindtick new</code> to create a new <code>store.mindtick</code> in your working directory. If a <code>.gitignore</code> file is found, <code>store.mindtick</code> gets appended to the ignore file so you don&#39;t accidentally upload it with your repo.</p> <p>The ANSI colors only work in terminals that support it, if you were to use this with Powershell or Command Prompt you will see the ANSI escape codes as plaintext. So I recommend to not do this on the default windows terminals or use another terminal! (Works great in integrated vscode terminal tho)</p> <p>Thanks for checking out my project and leave a star if you think it deserves it and are feeling generous!</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Witty_Wrangler_3899\"> /u/Witty_Wrangler_3899 </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1hv7d27/mindtick_lightweight_cli_note_tracker_using_sqlite/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hv7d27/mindtick_lightweight_cli_note_tracker_using_sqlite/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"An autumn bike adventure down the US portion of the Eastern Divide Trail","url":"https://www.crazyguyonabike.com/doc/?doc_id=26078","date":1736189419,"author":"kaycebasques","unread":true,"content":"\n<p>Article URL: <a href=\"https://www.crazyguyonabike.com/doc/?doc_id=26078\">https://www.crazyguyonabike.com/doc/?doc_id=26078</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42613878\">https://news.ycombinator.com/item?id=42613878</a></p>\n<p>Points: 126</p>\n<p># Comments: 41</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"C: Simple Defer, Ready to Use","url":"https://gustedt.wordpress.com/2025/01/06/simple-defer-ready-to-use/","date":1736188589,"author":"ingve","unread":true,"content":"\n<p>Article URL: <a href=\"https://gustedt.wordpress.com/2025/01/06/simple-defer-ready-to-use/\">https://gustedt.wordpress.com/2025/01/06/simple-defer-ready-to-use/</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42613671\">https://news.ycombinator.com/item?id=42613671</a></p>\n<p>Points: 141</p>\n<p># Comments: 104</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"The Future of Htmx","url":"https://htmx.org/essays/future/","date":1736186743,"author":"polyrand","unread":true,"content":"\n<p>Article URL: <a href=\"https://htmx.org/essays/future/\">https://htmx.org/essays/future/</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42613221\">https://news.ycombinator.com/item?id=42613221</a></p>\n<p>Points: 526</p>\n<p># Comments: 247</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"How many different versions of Linux do you use?","url":"https://www.reddit.com/r/linux/comments/1hv5488/how_many_different_versions_of_linux_do_you_use/","date":1736186090,"author":"/u/tboneee97","unread":true,"content":"<!-- SC_OFF --><div class=\"md\"><p>Those of you with multiple computers, do you have the same distro on all of them? Do you have different distro for a different pc? I assume some may have a different one for gaming pc, work pc, etc., but really just curious is all! </p> <p>How many different distros do you use at a time, and why?</p> <p>Edit: I&#39;m currently rocking 2, about to add a 3rd. I have Mint Cinnamon on an old laptop that I use when I&#39;m chilling, Dual-booting Ubuntu original on my work laptop, and converting my new gaming pc sometime this week. </p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/tboneee97\"> /u/tboneee97 </a> <br/> <span><a href=\"https://www.reddit.com/r/linux/comments/1hv5488/how_many_different_versions_of_linux_do_you_use/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/linux/comments/1hv5488/how_many_different_versions_of_linux_do_you_use/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"CNCF Live Webinar: Kubernetes 1.32 Release","url":"https://www.youtube.com/watch?v=xf1nCvmVnhE","date":1736185167,"author":"CNCF [Cloud Native Computing Foundation]","unread":true,"content":"Don't miss out! Join us at our next Flagship Conference: KubeCon + CloudNativeCon Europe in London from April 1 - 4, 2025. Connect with our current graduated, incubating, and sandbox projects as the community gathers to further the education and advancement of cloud native computing. Learn more at https://kubecon.io","flags":null,"enclosureUrl":"https://www.youtube.com/v/xf1nCvmVnhE?version=3","enclosureMime":""},{"title":"Just got my Go NES Emulator running in a browser using WASM","url":"https://www.reddit.com/r/golang/comments/1hv4kav/just_got_my_go_nes_emulator_running_in_a_browser/","date":1736184739,"author":"/u/bufoaureus","unread":true,"content":"&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/bufoaureus\"> /u/bufoaureus </a> <br/> <span><a href=\"https://maxpoletaev.github.io/dendy/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hv4kav/just_got_my_go_nes_emulator_running_in_a_browser/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"3blue1brown YouTube Bitcoin video taken down as copyright violation","url":"https://twitter.com/3blue1brown/status/1876291319955398799","date":1736183446,"author":"talonx","unread":true,"content":"\n<p>Article URL: <a href=\"https://twitter.com/3blue1brown/status/1876291319955398799\">https://twitter.com/3blue1brown/status/1876291319955398799</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42612494\">https://news.ycombinator.com/item?id=42612494</a></p>\n<p>Points: 578</p>\n<p># Comments: 296</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"emptyDir not working, don't see any mounts inside the container.","url":"https://www.reddit.com/r/kubernetes/comments/1hv3934/emptydir_not_working_dont_see_any_mounts_inside/","date":1736181572,"author":"/u/isnehal","unread":true,"content":"<table> <tr><td> <a href=\"https://www.reddit.com/r/kubernetes/comments/1hv3934/emptydir_not_working_dont_see_any_mounts_inside/\"> <img src=\"https://preview.redd.it/xt3sk42yiebe1.png?width=320&amp;crop=smart&amp;auto=webp&amp;s=6cbc34dd47b692f6d3b0ca49107175464fa84a1b\" alt=\"emptyDir not working, don't see any mounts inside the container.\" title=\"emptyDir not working, don't see any mounts inside the container.\" /> </a> </td><td> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/isnehal\"> /u/isnehal </a> <br/> <span><a href=\"https://i.redd.it/xt3sk42yiebe1.png\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/kubernetes/comments/1hv3934/emptydir_not_working_dont_see_any_mounts_inside/\">[comments]</a></span> </td></tr></table>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"The Bryan Johnson Approach to Eng Productivity","url":"https://www.reddit.com/r/programming/comments/1hv2885/the_bryan_johnson_approach_to_eng_productivity/","date":1736178989,"author":"/u/fosterfriendship","unread":true,"content":"&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/fosterfriendship\"> /u/fosterfriendship </a> <br/> <span><a href=\"https://smalldiffs.gmfoster.com/p/the-brian-johnson-approach-to-eng\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/comments/1hv2885/the_bryan_johnson_approach_to_eng_productivity/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"MT7922 no longer causes kernel panic on resume","url":"https://www.reddit.com/r/linux/comments/1hv24zb/mt7922_no_longer_causes_kernel_panic_on_resume/","date":1736178758,"author":"/u/NonStandardUser","unread":true,"content":"<!-- SC_OFF --><div class=\"md\"><p>As of kernel 6.12.8, the Mediatek MT7922 Bluetooth chipset no longer causes the kernel to hang on resuming from suspend. This issue started on 6.11.3(Oct 2024 on Fedora); in the meantime, folks have resorted to disabling Bluetooth on their systems, creating scripts or systemd services to disable and re-enable Bluetooth before and after suspend, or swapping out their MT7922 cards with something else outright.</p> <p>The diff that is pertinent to this issue can be found <a href=\"https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git/diff/drivers/bluetooth/btusb.c?id=v6.12.8&amp;id2=v6.12.7\">here</a>.</p> <p>Commits: </p> <ul> <li><code>b967b37cefdf7ae1b0d3dc26cce6bfd1e7faf315</code></li> <li><code>9da1cfc4f111b7e4ea3d7f388b16b17bb881795e</code></li> <li><code>cc569d791ab2a0de74f76e470515d25d24c9b84b</code></li> <li><code>f5c5661f02b5539d88aea8497f8d0835d165e945</code></li> </ul> <p>Interestingly, the commits are all dated September 23rd 2024, 16:47:02-16:47:05.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/NonStandardUser\"> /u/NonStandardUser </a> <br/> <span><a href=\"https://www.reddit.com/r/linux/comments/1hv24zb/mt7922_no_longer_causes_kernel_panic_on_resume/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/linux/comments/1hv24zb/mt7922_no_longer_causes_kernel_panic_on_resume/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Spline Distance Fields","url":"https://zone.dog/braindump/spline_fields/","date":1736178561,"author":"ibobev","unread":true,"content":"\n<p>Article URL: <a href=\"https://zone.dog/braindump/spline_fields/\">https://zone.dog/braindump/spline_fields/</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42611540\">https://news.ycombinator.com/item?id=42611540</a></p>\n<p>Points: 126</p>\n<p># Comments: 24</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Stimulation Clicker","url":"https://neal.fun/stimulation-clicker/","date":1736178530,"author":"meetpateltech","unread":true,"content":"\n<p>Article URL: <a href=\"https://neal.fun/stimulation-clicker/\">https://neal.fun/stimulation-clicker/</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42611536\">https://news.ycombinator.com/item?id=42611536</a></p>\n<p>Points: 1518</p>\n<p># Comments: 345</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"OrbStack added to the Docker MacOS Benchmark analysis","url":"https://www.reddit.com/r/programming/comments/1hv1one/orbstack_added_to_the_docker_macos_benchmark/","date":1736177597,"author":"/u/paolomainardi","unread":true,"content":"&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/paolomainardi\"> /u/paolomainardi </a> <br/> <span><a href=\"https://www.paolomainardi.com/posts/docker-performance-macos-2025/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/comments/1hv1one/orbstack_added_to_the_docker_macos_benchmark/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"First impressions of Ghostty","url":"https://www.reddit.com/r/programming/comments/1hv1h0h/first_impressions_of_ghostty/","date":1736177032,"author":"/u/jonas_h","unread":true,"content":"&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/jonas_h\"> /u/jonas_h </a> <br/> <span><a href=\"https://www.jonashietala.se/blog/2025/01/06/first_impressions_of_ghostty/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/comments/1hv1h0h/first_impressions_of_ghostty/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"jnv: Interactive JSON filter using jq [Release v0.5.0]","url":"https://www.reddit.com/r/kubernetes/comments/1hv0ww2/jnv_interactive_json_filter_using_jq_release_v050/","date":1736175578,"author":"/u/aqny","unread":true,"content":"<!-- SC_OFF --><div class=\"md\"><p><a href=\"https://github.com/ynqa/jnv\">jnv</a> v0.5.0 has been released.</p> <p>Previously, jnv synchronously displayed jq filter input and JSON output in the terminal.</p> <p>While this simplified the implementation and reduced rendering bugs, it caused severe performance issues when processing somewhat larger JSON inputs.</p> <p>For more details, see the related issue: <a href=\"https://github.com/ynqa/jnv/issues/2\">jnv#2</a>.</p> <p>To address this, I introduced a mechanism that uses <code>async/await</code> to manage state and render asynchronously.</p> <p>It’s still untested how large JSON files can be processed painlessly, but please try out the new version of jnv and share your feedback.</p> <p>Best,</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/aqny\"> /u/aqny </a> <br/> <span><a href=\"https://www.reddit.com/r/kubernetes/comments/1hv0ww2/jnv_interactive_json_filter_using_jq_release_v050/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/kubernetes/comments/1hv0ww2/jnv_interactive_json_filter_using_jq_release_v050/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"&impl or &dyn","url":"https://www.reddit.com/r/rust/comments/1hv0n0w/impl_or_dyn/","date":1736174826,"author":"/u/Seriy0904","unread":true,"content":"<!-- SC_OFF --><div class=\"md\"><p>I am a newbie in rust. I&#39;ve been reading some stuff regarding traits, and I seem to be confused what is the difference between this: <code>rust fn print_area(shape: &amp;dyn Shape) { println!(&quot;Area: {}&quot;, shape.area()); } </code> And this : <code>rust fn print_area(shape: &amp;impl Shape) { println!(&quot;Area: {}&quot;, shape.area()); } </code></p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Seriy0904\"> /u/Seriy0904 </a> <br/> <span><a href=\"https://www.reddit.com/r/rust/comments/1hv0n0w/impl_or_dyn/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/rust/comments/1hv0n0w/impl_or_dyn/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Strange Inter-Pod network performance compared to Inter-Node network performance","url":"https://www.reddit.com/r/kubernetes/comments/1huzkwh/strange_interpod_network_performance_compared_to/","date":1736171809,"author":"/u/ogreten","unread":true,"content":"<table> <tr><td> <a href=\"https://www.reddit.com/r/kubernetes/comments/1huzkwh/strange_interpod_network_performance_compared_to/\"> <img src=\"https://b.thumbs.redditmedia.com/YClyYrMo2rmn1cigR0LIFfhdkDwtUg4Y75pmVtoYOtY.jpg\" alt=\"Strange Inter-Pod network performance compared to Inter-Node network performance\" title=\"Strange Inter-Pod network performance compared to Inter-Node network performance\" /> </a> </td><td> <!-- SC_OFF --><div class=\"md\"><p>Hello,</p> <p>While testing, I catch something strange I couldn&#39;t find the reason or solution to. Basically, we have 3cp+2w setup for our staging environment.</p> <p>When I test w1-w2 network using iperf I get around 18Gbits/sec.</p> <p><a href=\"https://preview.redd.it/teppah0apdbe1.png?width=1600&amp;format=png&amp;auto=webp&amp;s=c5024c3517e82ecc6774e42232083d8270b1a952\">https://preview.redd.it/teppah0apdbe1.png?width=1600&amp;format=png&amp;auto=webp&amp;s=c5024c3517e82ecc6774e42232083d8270b1a952</a></p> <p>Then, I tested pod1-pod2 network using iperf I get around 2Gbits/sec.</p> <p><a href=\"https://preview.redd.it/4hkerybfpdbe1.png?width=1426&amp;format=png&amp;auto=webp&amp;s=dd4a579a13ddbf9a28d351e770eee22fb3a89ba6\">https://preview.redd.it/4hkerybfpdbe1.png?width=1426&amp;format=png&amp;auto=webp&amp;s=dd4a579a13ddbf9a28d351e770eee22fb3a89ba6</a></p> <p>Our cluster is setup with terraform rke. By default it uses canal but I also tested with calico, flannel, cilium. However, the behavior is the same. Then, I also setup the same cluster using rke2. However, the behaviour is still there.</p> <p>More strange is when I test w1-pod2. I get around 7Gbits/sec.</p> <p><a href=\"https://preview.redd.it/yfm33khopdbe1.png?width=1426&amp;format=png&amp;auto=webp&amp;s=cf1f3319e02bd3af6fdaf4a9abff85be4e65da7a\">https://preview.redd.it/yfm33khopdbe1.png?width=1426&amp;format=png&amp;auto=webp&amp;s=cf1f3319e02bd3af6fdaf4a9abff85be4e65da7a</a></p> <p>What do you think the problem may be? Do you have any suggestion to fixing this?</p> <p>Note: Our primary problem is to provide rwx-like volumes to pods on different nodes. I tested with longhorn but performance was suboptimal and I traced the problem back to here. Any suggestion or feedback is also welcome.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/ogreten\"> /u/ogreten </a> <br/> <span><a href=\"https://www.reddit.com/r/kubernetes/comments/1huzkwh/strange_interpod_network_performance_compared_to/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/kubernetes/comments/1huzkwh/strange_interpod_network_performance_compared_to/\">[comments]</a></span> </td></tr></table>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Flowkeeper - a Pomodoro timer (Python + Qt6), which I develop and test on Linux. Will appreciate your feedback!","url":"https://www.reddit.com/r/linux/comments/1huz34h/flowkeeper_a_pomodoro_timer_python_qt6_which_i/","date":1736170414,"author":"/u/setwindowtext","unread":true,"content":"&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/setwindowtext\"> /u/setwindowtext </a> <br/> <span><a href=\"https://i.redd.it/pl7ob8ioldbe1.png\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/linux/comments/1huz34h/flowkeeper_a_pomodoro_timer_python_qt6_which_i/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Lisp interpreter in a browser with Rust + WASM","url":"https://www.reddit.com/r/rust/comments/1huyr7a/lisp_interpreter_in_a_browser_with_rust_wasm/","date":1736169412,"author":"/u/Independent-Golf-754","unread":true,"content":"&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Independent-Golf-754\"> /u/Independent-Golf-754 </a> <br/> <span><a href=\"https://vishpat.github.io/lisp-rs-wasm\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/rust/comments/1huyr7a/lisp_interpreter_in_a_browser_with_rust_wasm/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Bitnami’s TLS Changes Are Live – What Now?","url":"https://www.reddit.com/r/kubernetes/comments/1huyaqr/bitnamis_tls_changes_are_live_what_now/","date":1736167946,"author":"/u/Odd-Welcome3466","unread":true,"content":"<!-- SC_OFF --><div class=\"md\"><p>It&#39;s not how I imagined my first post of 2025, but here we are on 06.01.2025 ... and Bitnami&#39;s LTS changes are now active!</p> <p>🔥 What’s Changing?</p> <p>- No more free support for LTS versions – If you rely on older major versions of databases or apps, security patches now require a paid plan.</p> <p>- Only the latest stable versions get updates for free – Older releases like PostgreSQL 13–16 won’t receive updates anymore.</p> <p>- Docker Hub pull rate limits now apply – Free users might hit limits, impacting automated deployments.</p> <p>❓Why Does This Matter?</p> <p>- This shift raises important questions about open-source sustainability vs. accessibility.</p> <p>- Security updates becoming a paid feature feels counterintuitive — shouldn’t security be a shared responsibility rather than a monetization strategy?</p> <p>Is this the new norm for open source sustainability? 🤔</p> <p>Check out my blog for more information. You can access it without an medium account -&gt; <a href=\"https://itnext.io/are-you-affected-by-bitnami-lts-and-docker-hub-pull-rate-limits-948f3590f936\">https://itnext.io/are-you-affected-by-bitnami-lts-and-docker-hub-pull-rate-limits-948f3590f936</a></p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Odd-Welcome3466\"> /u/Odd-Welcome3466 </a> <br/> <span><a href=\"https://www.reddit.com/r/kubernetes/comments/1huyaqr/bitnamis_tls_changes_are_live_what_now/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/kubernetes/comments/1huyaqr/bitnamis_tls_changes_are_live_what_now/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"What is the most efficient method to ensure POST requests function correctly on routes that may or may not end with a forward slash (/)? I don't like these duplicates at all!","url":"https://www.reddit.com/r/golang/comments/1huy4zx/what_is_the_most_efficient_method_to_ensure_post/","date":1736167395,"author":"/u/joaopedroaat","unread":true,"content":"<!-- SC_OFF --><div class=\"md\"><pre><code>package main import ( &quot;net/http&quot; &quot;github.com/joaopedroaat/rest-calc/internal/handlers&quot; ) func main() { router := http.NewServeMux() router.HandleFunc(&quot;GET /{$}&quot;, handlers.HomeHandler) router.HandleFunc(&quot;POST /sum&quot;, handlers.AdditionHandler) router.HandleFunc(&quot;POST /sum/{$}&quot;, handlers.AdditionHandler) router.HandleFunc(&quot;POST /sub&quot;, handlers.SubtractionHandler) router.HandleFunc(&quot;POST /sub/{$}&quot;, handlers.SubtractionHandler) router.HandleFunc(&quot;POST /mult&quot;, handlers.MultiplicationHandler) router.HandleFunc(&quot;POST /mult/{$}&quot;, handlers.MultiplicationHandler) router.HandleFunc(&quot;POST /div&quot;, handlers.DivisionHandler) router.HandleFunc(&quot;POST /div/{$}&quot;, handlers.DivisionHandler) server := http.Server{ Addr: &quot;:8080&quot;, Handler: router, } server.ListenAndServe() } </code></pre> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/joaopedroaat\"> /u/joaopedroaat </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1huy4zx/what_is_the_most_efficient_method_to_ensure_post/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1huy4zx/what_is_the_most_efficient_method_to_ensure_post/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Show HN: Mashups – Resurrecting Yahoo Pipes, my side project","url":"https://www.mashups.io/","date":1736164450,"author":"pyromaker","unread":true,"content":"\n<p>Hey everyone.<p>For those who remember, Yahoo Pipes was a tool to mashup RSS feeds back in the good ole' days. :)<p>I really loved that tool, but of course, it was shut down.<p>Since then I know there's been a few tools and attempts at bringing it back.<p>I always wanted to create Yahoo Pipes clone myself.<p>So here is my small side project - Mashups.io<p><a href=\"https://www.mashups.io\" rel=\"nofollow\">https://www.mashups.io</a><p>It's an MVP at the moment and well, let's see where it goes.<p>Thanks all!</p>\n<hr>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42609819\">https://news.ycombinator.com/item?id=42609819</a></p>\n<p>Points: 123</p>\n<p># Comments: 28</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Linux Performance: Almost Always Add Swap Space","url":"https://www.reddit.com/r/linux/comments/1huwqcj/linux_performance_almost_always_add_swap_space/","date":1736162068,"author":"/u/Unprotectedtxt","unread":true,"content":"&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Unprotectedtxt\"> /u/Unprotectedtxt </a> <br/> <span><a href=\"https://linuxblog.io/linux-performance-almost-always-add-swap-space/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/linux/comments/1huwqcj/linux_performance_almost_always_add_swap_space/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Time-Series Anomaly Detection: A Decade Review","url":"https://arxiv.org/abs/2412.20512","date":1736161801,"author":"belter","unread":true,"content":"\n<p>Article URL: <a href=\"https://arxiv.org/abs/2412.20512\">https://arxiv.org/abs/2412.20512</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42609595\">https://news.ycombinator.com/item?id=42609595</a></p>\n<p>Points: 333</p>\n<p># Comments: 49</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Proving that 1 + 1 = 10 in Rust","url":"https://www.reddit.com/r/rust/comments/1huvseo/proving_that_1_1_10_in_rust/","date":1736158091,"author":"/u/EightLines_03","unread":true,"content":"&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/EightLines_03\"> /u/EightLines_03 </a> <br/> <span><a href=\"https://tavianator.com/2020/one_plus_one.html\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/rust/comments/1huvseo/proving_that_1_1_10_in_rust/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Show HN: Filter out engagement bait and politics on your X/Twitter feed","url":"https://unbaited.danielpetho.com/","date":1736156981,"author":"danielpetho","unread":true,"content":"\n<p>hi friends!<p>i'm pretty tired of engagement bait and all the political nonsense on my x/twitter feed.<p>i was curious if i could use an llm to filter out these type of content, so i prototyped a quick chrome extension.<p>it uses LLama 3.3 to analyze the tweet through <a href=\"https://groq.com/\" rel=\"nofollow\">https://groq.com/</a> (because they are super-super fast).<p>the extension is available in the chrome store, also there is a link to the repo.<p>- you can tweak the system prompt for the filtering \n- but you need your own API key from Groq (you can get one for free)</p>\n<hr>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42609151\">https://news.ycombinator.com/item?id=42609151</a></p>\n<p>Points: 65</p>\n<p># Comments: 126</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Lord of the Io_uring (2020)","url":"https://unixism.net/loti/index.html","date":1736147460,"author":"LAC-Tech","unread":true,"content":"\n<p>Article URL: <a href=\"https://unixism.net/loti/index.html\">https://unixism.net/loti/index.html</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42608436\">https://news.ycombinator.com/item?id=42608436</a></p>\n<p>Points: 158</p>\n<p># Comments: 50</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Uncut Currency","url":"https://www.usmint.gov/paper-currency/uncut-currency/","date":1736143951,"author":"nxobject","unread":true,"content":"\n<p>Article URL: <a href=\"https://www.usmint.gov/paper-currency/uncut-currency/\">https://www.usmint.gov/paper-currency/uncut-currency/</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42608155\">https://news.ycombinator.com/item?id=42608155</a></p>\n<p>Points: 201</p>\n<p># Comments: 368</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"What’s the Largest Kubernetes Cluster You’re Running? What Are Your Pain Points?","url":"https://www.reddit.com/r/kubernetes/comments/1husfza/whats_the_largest_kubernetes_cluster_youre/","date":1736143465,"author":"/u/Electronic_Role_5981","unread":true,"content":"<!-- SC_OFF --><div class=\"md\"><ol> <li><strong>What’s the largest Kubernetes cluster you’ve deployed or managed?</strong></li> <li><strong>What were your biggest challenges or pain points?</strong> (e.g., scaling, networking, API server bottlenecks, etc.)</li> <li><strong>Any tips or tools that helped you overcome these challenges?</strong></li> </ol> <p>Some public blogs:</p> <ul> <li><strong>OpenAI</strong>: Scaling Kubernetes to <a href=\"https://openai.com/index/scaling-kubernetes-to-2500-nodes/\">2,500 nodes</a>(2018) and later to <a href=\"https://openai.com/index/scaling-kubernetes-to-7500-nodes/\">7,500 nodes</a>(2021).</li> <li><strong>Ant Group</strong>: Managing <a href=\"https://mp.weixin.qq.com/s/bJrMNxKMn89TzmpEyIZrRg\">10,000+ nodes</a>(2019).</li> <li><strong>ByteDance</strong>: Using KubeBrain to scale to <a href=\"https://mp.weixin.qq.com/s/zJFaxMbwVjd_bReEWtiP2Q\">20,000 nodes</a>(2022).</li> <li><strong>Google Kubernetes Engine (GKE)</strong>: Scaling to <a href=\"https://cloud.google.com/blog/products/containers-kubernetes/gke-65k-nodes-and-counting\">65,000+ nodes</a>(2024).</li> </ul> <p>Some general problems:</p> <ul> <li><strong>API server bottlenecks</strong></li> <li><strong>etcd performance issues</strong></li> <li><strong>Networking and storage challenges</strong></li> <li><strong>Node management and monitoring at scale</strong></li> </ul> <p>If you’re interested in diving deeper, here are some additional resources:</p> <ul> <li>Kubernetes official docs on <a href=\"https://kubernetes.io/docs/setup/best-practices/cluster-large/\">scaling large clusters</a>.</li> <li>OpenShift’s <a href=\"https://docs.openshift.com/container-platform/3.11/scaling_performance/index.html\">performance tuning guide</a>.</li> <li>A great Medium article on <a href=\"https://medium.com/google-cloud/fine-tuning-a-kubernetes-cluster-187d79370fd9\">fine-tuning Kubernetes clusters</a> (google cloud).</li> <li>In KubeOps recent blog about v1.32, it mentions that <a href=\"https://kubeops.net/blog/the-world-of-kubernetes-cluster-topologies-a-guide-to-choosing-the-right-architecture\">https://kubeops.net/blog/the-world-of-kubernetes-cluster-topologies-a-guide-to-choosing-the-right-architecture</a> &quot;Support up to 20,000 nodes, secure sensitive data with TLS 1.3, and leverage optimized storage and routing features&quot;. I cannot find official comments on this. Probably, this may be related to the `WatchList` feature?</li> </ul> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Electronic_Role_5981\"> /u/Electronic_Role_5981 </a> <br/> <span><a href=\"https://www.reddit.com/r/kubernetes/comments/1husfza/whats_the_largest_kubernetes_cluster_youre/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/kubernetes/comments/1husfza/whats_the_largest_kubernetes_cluster_youre/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"What's your unpopular Go opinion?","url":"https://www.reddit.com/r/golang/comments/1husfqd/whats_your_unpopular_go_opinion/","date":1736143438,"author":"/u/VibrantCanopy","unread":true,"content":"<!-- SC_OFF --><div class=\"md\"><p>Upvote what you disagree with!</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/VibrantCanopy\"> /u/VibrantCanopy </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1husfqd/whats_your_unpopular_go_opinion/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1husfqd/whats_your_unpopular_go_opinion/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Doom, the Gallery Experience","url":"https://bobatealee.itch.io/doom-the-gallery-experience","date":1736139233,"author":"anigbrowl","unread":true,"content":"\n<p>Article URL: <a href=\"https://bobatealee.itch.io/doom-the-gallery-experience\">https://bobatealee.itch.io/doom-the-gallery-experience</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42607794\">https://news.ycombinator.com/item?id=42607794</a></p>\n<p>Points: 521</p>\n<p># Comments: 61</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Tuitorial - I built a terminal-based tool for code presentations because PowerPoint was too painful","url":"https://www.reddit.com/r/programming/comments/1huqqrt/tuitorial_i_built_a_terminalbased_tool_for_code/","date":1736137572,"author":"/u/basnijholt","unread":true,"content":"&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/basnijholt\"> /u/basnijholt </a> <br/> <span><a href=\"https://github.com/basnijholt/tuitorial/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/comments/1huqqrt/tuitorial_i_built_a_terminalbased_tool_for_code/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Chasm: A very simple and fast runtime x86_64 assembler library.","url":"https://www.reddit.com/r/programming/comments/1huqlby/chasm_a_very_simple_and_fast_runtime_x86_64/","date":1736137067,"author":"/u/aqilcont","unread":true,"content":"&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/aqilcont\"> /u/aqilcont </a> <br/> <span><a href=\"https://github.com/aqilc/chasm\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/comments/1huqlby/chasm_a_very_simple_and_fast_runtime_x86_64/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Apple squandered the Holy Grail","url":"https://xeiaso.net/blog/2025/squandered-holy-grail/","date":1736132133,"author":"caust1c","unread":true,"content":"\n<p>Article URL: <a href=\"https://xeiaso.net/blog/2025/squandered-holy-grail/\">https://xeiaso.net/blog/2025/squandered-holy-grail/</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42607151\">https://news.ycombinator.com/item?id=42607151</a></p>\n<p>Points: 326</p>\n<p># Comments: 441</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"kira (game audio library) v0.10 - significant performance improvements, pause/resume mixer tracks, spatial audio overhaul","url":"https://www.reddit.com/r/rust/comments/1huolzs/kira_game_audio_library_v010_significant/","date":1736130905,"author":"/u/tesselode","unread":true,"content":"&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/tesselode\"> /u/tesselode </a> <br/> <span><a href=\"https://github.com/tesselode/kira/releases/tag/v0.10.0\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/rust/comments/1huolzs/kira_game_audio_library_v010_significant/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Unable to login with ArgoCD CLI","url":"https://www.reddit.com/r/kubernetes/comments/1huo16v/unable_to_login_with_argocd_cli/","date":1736129199,"author":"/u/MuscleLazy","unread":true,"content":"<!-- SC_OFF --><div class=\"md\"><p>I&#39;ve been trying to figure this out, without success. I can login fine into ArgoCD UI with an admin permissions based <code>username</code>, but I cannot do it with the CLI:</p> <pre><code># argocd login argocd.noty.cc Username: UI username Password: UI password </code></pre> <p>I get the error:</p> <blockquote> <p>rpc error: code = Unimplemented desc = unexpected HTTP status code received from server: 404 (Not Found); transport: received unexpected content-type &quot;text/plain; charset=utf-8&quot;</p> </blockquote> <p>I&#39;m using a Gateway API instead of built-in Ingress, with <code>server.insecure: true</code>.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/MuscleLazy\"> /u/MuscleLazy </a> <br/> <span><a href=\"https://www.reddit.com/r/kubernetes/comments/1huo16v/unable_to_login_with_argocd_cli/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/kubernetes/comments/1huo16v/unable_to_login_with_argocd_cli/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"[Follow-Up] Treds Now Includes a Command-Based Vector Store with HNSW","url":"https://www.reddit.com/r/golang/comments/1huo0so/followup_treds_now_includes_a_commandbased_vector/","date":1736129167,"author":"/u/Fast-Tourist5742","unread":true,"content":"<!-- SC_OFF --><div class=\"md\"><p>Hey folks! Previously I announced <strong>Treds</strong>, but I’ve now <strong>added a fully command-based vector store</strong>, powered by an HNSW graph for approximate nearest-neighbor searches. Here’s a quick look at the four commands:</p> <ol> <li><strong>VCREATE</strong> – Initializes a vector index, specifying parameters like maxNeighbors, layer factor, and efSearch.</li> <li><strong>VINSERT</strong> – Inserts vectors into that index.</li> <li><strong>VSEARCH</strong> – Searches for the k nearest neighbors to a given vector.</li> <li><strong>VDELETE</strong> – Deletes a vector from the index by its ID.</li> </ol> <p>Commands can be executed in redis-cli, as Treds is RESP compliant. A simple session might look like</p> <pre><code>VCREATE vec 6 0.5 100 VINSERT vec 1.0 2.0 VINSERT vec 2.0 3.0 VINSERT vec 3.0 4.0 VSEARCH vec 1.5 2.5 2 </code></pre> <p>This creates an index named <code>vec</code>, inserts some 2D vectors, searches for the 2 nearest neighbors to <code>[1.5, 2.5].</code><strong>Vectors can be N-Dimension as well</strong>.</p> <p>If you checked out Treds before, I’d love to hear your thoughts on the new vector store addition. If you haven’t, feel free to give it a look and let me know if you have any suggestions or questions. Thanks for reading, and happy hacking!</p> <p><a href=\"https://github.com/absolutelightning/treds?tab=readme-ov-file#vector-store\">https://github.com/absolutelightning/treds?tab=readme-ov-file#vector-store</a><br/> <a href=\"https://github.com/absolutelightning/treds\">https://github.com/absolutelightning/treds</a></p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Fast-Tourist5742\"> /u/Fast-Tourist5742 </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1huo0so/followup_treds_now_includes_a_commandbased_vector/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1huo0so/followup_treds_now_includes_a_commandbased_vector/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Should First-Year Programming Students Be Taught With Python and Java?","url":"https://developers.slashdot.org/story/25/01/05/1853210/should-first-year-programming-students-be-taught-with-python-and-java?utm_source=rss1.0mainlinkanon&utm_medium=feed","date":1736105700,"author":"EditorDavid","unread":true,"content":"Long-time Slashdot reader theodp writes: In an Op-ed for The Huntington News, fourth year Northeastern University CS student Derek Kaplan argues that real pedagogical merit is what should count when deciding which language to use to teach CS fundamentals (aka 'Fundies'). He makes the case for Northeastern to reconsider its decision to move from Racket to Python and Java later this year in an overhaul of its first-year curriculum. \n\n\"Students will get extensive training in Python, which is currently the most requested language by co-op employers,\" Northeastern explains (some two decades after a Slashdot commenter made the same Hot Languages = Jobs observation in a spirited 2001 debate on Java as a CS introductory language)... \n\n\"I have often heard computer science students complain that Fundies 1 teaches Racket instead of a 'useful language' like Python,\" Kaplan writes. \"But the point of Fundies is not to teach Racket &mdash; it is to teach program design skills that can be applied using any programming language. Racket is just the tool it uses to do so. A student who does well in Fundies will have no difficulty applying the same skills to Python or any other language. And with how fast the tech industry changes, is it really worth having a course that teaches just Python when tomorrow, some other language might dominate the industry? Our current curriculum focuses on timeless principles rather than fleeting trends.\" Also expressing concerns about the selection of suitable languages for novice programming is King's College CS Prof Michael K&#246;lling, who explains, \"One of the drivers is the perceived usefulness of the language in a real-world context. Students (and their parents) often have opinions which language is 'better' to learn. In forming these opinions, the definition of 'better' can often be vague and driven by limited insight. One strong aspect commonly cited is the perceived usefulness of a language in the 'real world.' If a language is widely used in industry, it is more likely to be seen as a useful language to learn.\" K&#246;lling's recommendation? \"We need a new language for teaching novices at secondary school and introductory university level,\" K&#246;lling concludes. \"This language should be designed explicitly for teaching [...] Maintenance and adaptation of this language should be driven by pedagogical considerations, not by industry needs.\" While noble in intent, one suspects Kaplan and K&#246;lling may be on a quixotic quest in a money wins world, outgunned by the demands, resources, and influence of tech giants like Amazon &mdash; the top employer of Northeastern MSCS program grads &mdash; who pushed back against NSF advice to deemphasize Java in high school CS and dropped $15 million to have tech-backed nonprofit Code.org develop and push a new Java-based, powered-by-AWS CS curriculum into high schools with the support of a consortium of politicians, educators, and tech companies. Echoing Northeastern, an Amazon press release argued the new Java-based curriculum \"best prepares students for the next step in their education and careers.\"\n\n<p><div class=\"share_submission\" style=\"position:relative;\">\n<a class=\"slashpop\" href=\"http://twitter.com/home?status=Should+First-Year+Programming+Students+Be+Taught+With+Python+and+Java%3F%3A+https%3A%2F%2Fdevelopers.slashdot.org%2Fstory%2F25%2F01%2F05%2F1853210%2F%3Futm_source%3Dtwitter%26utm_medium%3Dtwitter\"><img src=\"https://a.fsdn.com/sd/twitter_icon_large.png\"></a>\n<a class=\"slashpop\" href=\"http://www.facebook.com/sharer.php?u=https%3A%2F%2Fdevelopers.slashdot.org%2Fstory%2F25%2F01%2F05%2F1853210%2Fshould-first-year-programming-students-be-taught-with-python-and-java%3Futm_source%3Dslashdot%26utm_medium%3Dfacebook\"><img src=\"https://a.fsdn.com/sd/facebook_icon_large.png\"></a>\n\n\n\n</div></p><p><a href=\"https://developers.slashdot.org/story/25/01/05/1853210/should-first-year-programming-students-be-taught-with-python-and-java?utm_source=rss1.0moreanon&amp;utm_medium=feed\">Read more of this story</a> at Slashdot.</p>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Steam On Linux Ends 2024 With Small Marketshare Boost, AMD Linux CPU Use Near 74%","url":"https://linux.slashdot.org/story/25/01/05/0251206/steam-on-linux-ends-2024-with-small-marketshare-boost-amd-linux-cpu-use-near-74?utm_source=rss1.0mainlinkanon&utm_medium=feed","date":1736094840,"author":"EditorDavid","unread":true,"content":"Phoronix reports on Valve's \"Steam Survey\" results for December 2024, saying the new numbers \"reflect a nice upward trend for the Linux gaming statistics and a high point in recent times.\"\n\n In November the Steam Survey reflected a 2.03% marketshare for Linux... Roughly inline with what we have been seeing for Linux right at around the 2% threshold. With the just-published December survey numbers, there is a 0.29% increase to 2.29%...! When looking at the Linux numbers, SteamOS Holo accounts for around 36% of all Linux gamers... SteamOS Holo being the operating system of the Steam Deck and beginning to appear on other devices as well... Driven in large part by the Steam Deck relying on a custom AMD SoC/APU and AMD being popular with Linux gamers/enthusiasts for their open-source driver support, AMD CPU use on Linux commands a 73.6% marketshare. \n\n In fact, December \"saw AMD reach another record-high share among participants of Valve's survey,\" according to TechSpot &mdash; \"up 3.02% last month, taking its total to 38.7% as Intel fell slightly to 63.4%...\"\nElsewhere, Windows 11 is now comfortably the most popular OS in the survey. It pulled ahead another 2% to an almost 55% share in December as Windows 10 dropped to 42.3%... However, it's a different story when looking at global users: Windows 10's share has increased two months in a row to 62.7% while Windows 11 has declined to 34.1%.\nRounding up the rest of the survey, 16GB of RAM remains the most popular amount of system RAM but it's lead is declining as second-place 32GB grows; a trend that is mirrored in the VRAM category... \n\nPhoronix adds that the Windows percent \"pulled back by 0.51% to 96.1% while Apple macOS also gained 0.22% going up to a 1.61% marketshare.\"<p><div class=\"share_submission\" style=\"position:relative;\">\n<a class=\"slashpop\" href=\"http://twitter.com/home?status=Steam+On+Linux+Ends+2024+With+Small+Marketshare+Boost%2C+AMD+Linux+CPU+Use+Near+74%25%3A+https%3A%2F%2Flinux.slashdot.org%2Fstory%2F25%2F01%2F05%2F0251206%2F%3Futm_source%3Dtwitter%26utm_medium%3Dtwitter\"><img src=\"https://a.fsdn.com/sd/twitter_icon_large.png\"></a>\n<a class=\"slashpop\" href=\"http://www.facebook.com/sharer.php?u=https%3A%2F%2Flinux.slashdot.org%2Fstory%2F25%2F01%2F05%2F0251206%2Fsteam-on-linux-ends-2024-with-small-marketshare-boost-amd-linux-cpu-use-near-74%3Futm_source%3Dslashdot%26utm_medium%3Dfacebook\"><img src=\"https://a.fsdn.com/sd/facebook_icon_large.png\"></a>\n\n\n\n</div></p><p><a href=\"https://linux.slashdot.org/story/25/01/05/0251206/steam-on-linux-ends-2024-with-small-marketshare-boost-amd-linux-cpu-use-near-74?utm_source=rss1.0moreanon&amp;utm_medium=feed\">Read more of this story</a> at Slashdot.</p>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"I made $100K from a dick joke","url":"https://imgur.com/gallery/KZ4u3c4","date":1736067808,"author":"imglorp","unread":true,"content":"\n<p>Article URL: <a href=\"https://imgur.com/gallery/KZ4u3c4\">https://imgur.com/gallery/KZ4u3c4</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42600595\">https://news.ycombinator.com/item?id=42600595</a></p>\n<p>Points: 495</p>\n<p># Comments: 240</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Show HN: Struggle with CSS Flexbox? This Playground Is for You","url":"https://yoavsbg.github.io/css-flexbox-playground/","date":1736067721,"author":"yoav_sbg","unread":true,"content":"\n<p>Experiment with different flex properties to understand how they affect layout. Adjust the controls below to see changes in real-time and copy the generated CSS code.</p>\n<hr>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42600586\">https://news.ycombinator.com/item?id=42600586</a></p>\n<p>Points: 301</p>\n<p># Comments: 111</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"How to Start LeetCode in 2025","url":"https://blog.algomaster.io/p/how-to-start-leetcode-in-2025","date":1736054985,"author":"Ashish Pratap Singh","unread":true,"content":"<p>It&#8217;s <strong>2025</strong> and most top tech companies are still asking <strong>LeetCode style questions</strong> in coding interviews.</p><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4b7cf100-0d1f-465c-a1d3-b28a7970fa3a_1008x675.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4b7cf100-0d1f-465c-a1d3-b28a7970fa3a_1008x675.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4b7cf100-0d1f-465c-a1d3-b28a7970fa3a_1008x675.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4b7cf100-0d1f-465c-a1d3-b28a7970fa3a_1008x675.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4b7cf100-0d1f-465c-a1d3-b28a7970fa3a_1008x675.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4b7cf100-0d1f-465c-a1d3-b28a7970fa3a_1008x675.png\" width=\"654\" height=\"437.94642857142856\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/4b7cf100-0d1f-465c-a1d3-b28a7970fa3a_1008x675.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:675,&quot;width&quot;:1008,&quot;resizeWidth&quot;:654,&quot;bytes&quot;:104201,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:false,&quot;topImage&quot;:true,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4b7cf100-0d1f-465c-a1d3-b28a7970fa3a_1008x675.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4b7cf100-0d1f-465c-a1d3-b28a7970fa3a_1008x675.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4b7cf100-0d1f-465c-a1d3-b28a7970fa3a_1008x675.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4b7cf100-0d1f-465c-a1d3-b28a7970fa3a_1008x675.png 1456w\" sizes=\"100vw\" fetchpriority=\"high\"></picture><div class=\"image-link-expand\"><div class=\"pencraft pc-display-flex pc-gap-8 pc-reset\"><div class=\"pencraft pc-reset icon-container restack-image\"><svg role=\"img\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke-width=\"1.8\" stroke=\"#000\" xmlns=\"http://www.w3.org/2000/svg\"><g><title></title><path d=\"M21 3V8M21 8H16M21 8L18 5.29962C16.7056 4.14183 15.1038 3.38328 13.3879 3.11547C11.6719 2.84766 9.9152 3.08203 8.32951 3.79031C6.74382 4.49858 5.39691 5.65051 4.45125 7.10715C3.5056 8.5638 3.00158 10.2629 3 11.9996M3 21V16M3 16H8M3 16L6 18.7C7.29445 19.8578 8.89623 20.6163 10.6121 20.8841C12.3281 21.152 14.0848 20.9176 15.6705 20.2093C17.2562 19.501 18.6031 18.3491 19.5487 16.8925C20.4944 15.4358 20.9984 13.7367 21 12\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></g></svg></div><div class=\"pencraft pc-reset icon-container view-image\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></div></div></a></figure></div><p>But getting started on LeetCode is harder than ever. With over 3,000 problems, it&#8217;s easy to feel overwhelmed and lost.</p><ul><li><p><strong>How do you even start? </strong></p></li><li><p><strong>Which problems should you solve? </strong></p></li><li><p><strong>How many problems are enough for coding interviews?</strong></p></li><li><p><strong>How much time should you spend on each problem?</strong></p></li></ul><p>I will answer these questions and more in this article to make your journey smoother, and lot less less painful.</p><p>For context - I&#8217;ve solved more than 1,500 LeetCode problems and cleared interviews at multiple big tech companies including Amazon, Google, and Microsoft and in this article I&#8217;ll share everything I&#8217;ve learned to help you start and navigate LeetCode more effectively.</p><p>I&#8217;ll share practical tips and resources to help you save time, stay focused and build your problem-solving skills without feeling overwhelmed.</p><h2>Why do you even need LeetCode?</h2><p>You might be wondering: why is everyone doing LeetCode questions. Is it really necessary to land a Software Engineering job?</p><p>The short answer is: <em>not always</em>.</p><p>There are plenty of startups and smaller companies that focus more on your experience with specific tech stacks and the projects you&#8217;ve built. They might not even include LeetCode style questions in their interview process.</p><p>But if your goal is to work at big tech companies like Amazon, Google, or Microsoft, you would need to practice LeetCode style questions since that&#8217;s what they ask in their interviews.</p><h2>Which programming language to choose?</h2><p>This is a question I get asked all the time.</p><p>Many people get stuck at deciding which programming language to use.</p><p>But here&#8217;s the truth: <strong>It doesn&#8217;t really matter.</strong> A programming language is just a tool. Once you understand the approach to solving a problem, you can implement it in any language.</p><p>In my experience giving interviews, unless the job specifically requires expertise in a certain language, you&#8217;ll be fine using any language you&#8217;re comfortable with.</p><p>The point is, LeetCode isn&#8217;t about syntax. It&#8217;s about using the right data structures, algorithms, and your ability to think critically and solve problems.</p><p>That said, if you&#8217;re new to coding, I recommend starting with <strong>Python.</strong> It&#8217;s beginner-friendly and has a simpler syntax.</p><p>If you already know a language&#8212;stick with it. </p><p>Whether it&#8217;s C++, Java, C#, JavaScript, TypeScript or Go, there&#8217;s no need to switch.</p><p>You don&#8217;t need to be an expert in your chosen language, but you should know the basics like:</p><ul><li><p>variables and data types</p></li><li><p>loops (for and while)</p></li><li><p>if-else conditions</p></li><li><p>arrays and strings</p></li><li><p>functions and classes</p></li><li><p>and input/output operations</p></li></ul><p>Beyond the basics, spend some time learning the <strong>built-in libraries</strong> for common data structures and algorithms.</p><p>These libraries save time and let you focus on solving the problem rather than reimplementing data structures from scratch.</p><p>For example:</p><ul><li><p>Python has lists, dictionaries, and sets.</p></li><li><p>Java has ArrayList, HashMap, and PriorityQueue.</p></li><li><p>C++ offers the STL library with vector, map, and set.</p></li></ul><h2>Know the Fundamentals</h2><p>Before diving into LeetCode problems, it&#8217;s good to familiarize yourself with the fundamentals of data structures and algorithms.</p><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb5dd1083-6abf-4866-969d-348facca685e_1646x966.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb5dd1083-6abf-4866-969d-348facca685e_1646x966.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb5dd1083-6abf-4866-969d-348facca685e_1646x966.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb5dd1083-6abf-4866-969d-348facca685e_1646x966.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb5dd1083-6abf-4866-969d-348facca685e_1646x966.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb5dd1083-6abf-4866-969d-348facca685e_1646x966.png\" width=\"591\" height=\"346.6442307692308\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/b5dd1083-6abf-4866-969d-348facca685e_1646x966.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:854,&quot;width&quot;:1456,&quot;resizeWidth&quot;:591,&quot;bytes&quot;:83121,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb5dd1083-6abf-4866-969d-348facca685e_1646x966.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb5dd1083-6abf-4866-969d-348facca685e_1646x966.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb5dd1083-6abf-4866-969d-348facca685e_1646x966.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb5dd1083-6abf-4866-969d-348facca685e_1646x966.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div class=\"image-link-expand\"><div class=\"pencraft pc-display-flex pc-gap-8 pc-reset\"><div class=\"pencraft pc-reset icon-container restack-image\"><svg role=\"img\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke-width=\"1.8\" stroke=\"#000\" xmlns=\"http://www.w3.org/2000/svg\"><g><title></title><path d=\"M21 3V8M21 8H16M21 8L18 5.29962C16.7056 4.14183 15.1038 3.38328 13.3879 3.11547C11.6719 2.84766 9.9152 3.08203 8.32951 3.79031C6.74382 4.49858 5.39691 5.65051 4.45125 7.10715C3.5056 8.5638 3.00158 10.2629 3 11.9996M3 21V16M3 16H8M3 16L6 18.7C7.29445 19.8578 8.89623 20.6163 10.6121 20.8841C12.3281 21.152 14.0848 20.9176 15.6705 20.2093C17.2562 19.501 18.6031 18.3491 19.5487 16.8925C20.4944 15.4358 20.9984 13.7367 21 12\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></g></svg></div><div class=\"pencraft pc-reset icon-container view-image\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></div></div></a></figure></div><p>Start by understanding:</p><ul><li><p><strong><a href=\"https://blog.algomaster.io/p/57bd4963-462f-4294-a972-4012691fc729\">Big O notation</a></strong><a href=\"https://blog.algomaster.io/p/57bd4963-462f-4294-a972-4012691fc729\"> </a><strong><a href=\"https://blog.algomaster.io/p/57bd4963-462f-4294-a972-4012691fc729\">and</a></strong><a href=\"https://blog.algomaster.io/p/57bd4963-462f-4294-a972-4012691fc729\"> </a><strong><a href=\"https://blog.algomaster.io/p/57bd4963-462f-4294-a972-4012691fc729\">Time Complexity</a></strong></p></li><li><p><strong>Basic Data Structures like</strong> Arrays, strings, linked lists, stacks, queues, hash tables, and binary trees.</p></li><li><p><strong>and Fundamental Algorithms like</strong> Sorting techniques, binary search, and recursion.</p></li></ul><p>Recursion is particularly important, since many problems specially tree and graph related ones rely heavily on it.</p><p>When you&#8217;re familiar with these topics, it becomes much easier to recognize which concept applies to a specific problem.</p><p>You don&#8217;t need to dive too deeply into every topic upfront. Most of your understanding will develop naturally as you solve problems.</p><p>There are plenty of resources available online to help you get started. Don&#8217;t waste time searching for the &#8220;perfect&#8221; resource&#8212;pick one and start learning.</p><p><strong>The focus should always be on progress, not perfection.</strong></p><p>Here are some resources I personally found quite useful:</p><ul><li><p><strong>For Data Structures</strong>: <strong><a href=\"https://www.youtube.com/playlist?list=PLDV1Zeh2NRsB6SWUrDFW2RmDotAfPbeHu\">WilliamFiset&#8217;s YouTube channel</a></strong></p></li><li><p><strong>For Algorithms</strong>: <strong><a href=\"https://www.youtube.com/playlist?list=PLDN4rrl48XKpZkf03iYFl-O29szjTrs_O\">Abdul Bari&#8217;s YouTube channel</a></strong></p></li></ul><p><strong>For DSA Patterns: <a href=\"https://www.youtube.com/playlist?list=PLK63NuByH5o-tqaMUHRA4r8ObRW7PWz45\">AlgoMasterIO</a>:</strong> It&#8217;s my second channel where I upload animated tutorials on DSA and LeetCode patterns.</p><p>Here&#8217;s a comprehensive list of DSA topics you should know for coding interviews:</p><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1a074c17-0163-4236-86a4-1cc16d63cc1f_800x616.jpeg\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1a074c17-0163-4236-86a4-1cc16d63cc1f_800x616.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1a074c17-0163-4236-86a4-1cc16d63cc1f_800x616.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1a074c17-0163-4236-86a4-1cc16d63cc1f_800x616.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1a074c17-0163-4236-86a4-1cc16d63cc1f_800x616.jpeg 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1a074c17-0163-4236-86a4-1cc16d63cc1f_800x616.jpeg\" width=\"702\" height=\"540.54\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/1a074c17-0163-4236-86a4-1cc16d63cc1f_800x616.jpeg&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:616,&quot;width&quot;:800,&quot;resizeWidth&quot;:702,&quot;bytes&quot;:68454,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/jpeg&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1a074c17-0163-4236-86a4-1cc16d63cc1f_800x616.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1a074c17-0163-4236-86a4-1cc16d63cc1f_800x616.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1a074c17-0163-4236-86a4-1cc16d63cc1f_800x616.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1a074c17-0163-4236-86a4-1cc16d63cc1f_800x616.jpeg 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div class=\"image-link-expand\"><div class=\"pencraft pc-display-flex pc-gap-8 pc-reset\"><div class=\"pencraft pc-reset icon-container restack-image\"><svg role=\"img\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke-width=\"1.8\" stroke=\"#000\" xmlns=\"http://www.w3.org/2000/svg\"><g><title></title><path d=\"M21 3V8M21 8H16M21 8L18 5.29962C16.7056 4.14183 15.1038 3.38328 13.3879 3.11547C11.6719 2.84766 9.9152 3.08203 8.32951 3.79031C6.74382 4.49858 5.39691 5.65051 4.45125 7.10715C3.5056 8.5638 3.00158 10.2629 3 11.9996M3 21V16M3 16H8M3 16L6 18.7C7.29445 19.8578 8.89623 20.6163 10.6121 20.8841C12.3281 21.152 14.0848 20.9176 15.6705 20.2093C17.2562 19.501 18.6031 18.3491 19.5487 16.8925C20.4944 15.4358 20.9984 13.7367 21 12\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></g></svg></div><div class=\"pencraft pc-reset icon-container view-image\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></div></div></a></figure></div><h2>Learn one topic at a time</h2><p>If you&#8217;re a beginner, focus on one topic at a time to avoid feeling overwhelmed.</p><p>For example: Start with <strong>arrays</strong>, the move to <strong>strings</strong>, then progress to more complex topics like <strong>linked lists</strong>, <strong>hash tables</strong>, and <strong>binary trees</strong>.</p><p>This approach helps you develop a deeper understanding of each topic and teaches you how to recognize when to use a particular data structure or algorithm.</p><p>Once you&#8217;ve learned the basics of a topic and understand how to implement it from scratch, it&#8217;s time to put your knowledge to the test.</p><p>Solve 4-5 easy problems related to that topic on LeetCode.</p><p>This will:</p><ul><li><p>Reinforce your learning.</p></li><li><p>and Build confidence in applying the concepts.</p></li></ul><p>If you want to learn more about how to master a DSA topic, you can check out this article where I discuss it in more detail:</p><div class=\"digest-post-embed\" data-attrs=\"{&quot;nodeId&quot;:&quot;0dcf1595-93c9-4470-8523-1b219f620c32&quot;,&quot;caption&quot;:&quot;Getting good at Data Structures and Algorithms (DSA) helped me clear interviews at Amazon, Google and Microsoft.&quot;,&quot;size&quot;:&quot;sm&quot;,&quot;isEditorNode&quot;:true,&quot;title&quot;:&quot;How I Mastered Data Structures and Algorithms&quot;,&quot;publishedBylines&quot;:[{&quot;id&quot;:83602743,&quot;name&quot;:&quot;Ashish Pratap Singh&quot;,&quot;bio&quot;:&quot;Software Engineer | Prev @ Amazon. Write about Coding, System Design, Interviews and Software Engineering. LinkedIn: 185k+, Youtube: 125k+, GitHub: 40k+ stars&quot;,&quot;photo_url&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/bec4e97e-29d0-4080-b529-db1f5fc4d1d2_1536x1536.jpeg&quot;,&quot;is_guest&quot;:false,&quot;bestseller_tier&quot;:null}],&quot;post_date&quot;:&quot;2024-06-16T13:30:59.948Z&quot;,&quot;cover_image&quot;:&quot;https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Feb93edef-9bb2-45f5-a0cd-fd44f23e44f0_1728x1046.png&quot;,&quot;cover_image_alt&quot;:null,&quot;canonical_url&quot;:&quot;https://blog.algomaster.io/p/how-i-mastered-data-structures-and-algorithms&quot;,&quot;section_name&quot;:null,&quot;id&quot;:145655252,&quot;type&quot;:&quot;newsletter&quot;,&quot;reaction_count&quot;:688,&quot;comment_count&quot;:21,&quot;publication_name&quot;:&quot;AlgoMaster Newsletter&quot;,&quot;publication_logo_url&quot;:&quot;https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcbeb41b6-bde8-481d-b2b4-109d10f76616_256x256.png&quot;,&quot;belowTheFold&quot;:true}\"></div><h2>Which problems should you solve?</h2><p>If you open LeetCode, there are over <strong>3,000 problems.</strong></p><p>That number alone can feel overwhelming. So, how do you decide which ones to solve?</p><p>Start with <strong>easy problems</strong> for each topic. These are perfect for building confidence and understanding the basics of problem-solving.</p><p>Once you&#8217;re comfortable with the easy ones, gradually challenge yourself with slightly harder problems that push you beyond your comfort zone.</p><p>Remember, <strong>real growth happens when you</strong> constantly <strong>challenge yourself.</strong></p><p>Don&#8217;t worry about hard problems in the beginning.</p><p>Most coding interviews focus on <strong>medium-level problems</strong>, so that&#8217;s where you should spend the majority of your time.</p><p>LeetCode also provides curated lists like the <strong><a href=\"https://leetcode.com/studyplan/top-100-liked/\">Top 100 Liked Problems</a></strong> and <strong><a href=\"https://leetcode.com/studyplan/top-interview-150/\">Top Interview 150 Problems</a>.</strong></p><p>These lists are excellent, and I highly recommend solving every problem on them.</p><h2>How many problems should you solve?</h2><p>There&#8217;s no magic number, but from my experience, <strong>300 well-chosen problems</strong> is the sweet spot.</p><p>However, it&#8217;s not about solving just any 300 problems. Focus on <strong>high-quality problems</strong> that cover the most topics and patterns.</p><p>To make it easier for you, I&#8217;ve created a <strong><a href=\"https://algomaster.io/\">free resource</a></strong>: a curated list of the <strong>Top 300 LeetCode Problems</strong> organized into <strong>60 topics and patterns </strong>that are most commonly asked in coding interviews.</p><div class=\"captioned-image-container\"><figure><a class=\"image-link image2 is-viewable-img\" target=\"_blank\" href=\"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F96a980eb-ad37-4bab-8885-6890dfd4c493_1390x963.png\" data-component-name=\"Image2ToDOM\"><div class=\"image2-inset\"><picture><source type=\"image/webp\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F96a980eb-ad37-4bab-8885-6890dfd4c493_1390x963.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F96a980eb-ad37-4bab-8885-6890dfd4c493_1390x963.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F96a980eb-ad37-4bab-8885-6890dfd4c493_1390x963.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F96a980eb-ad37-4bab-8885-6890dfd4c493_1390x963.png 1456w\" sizes=\"100vw\"><img src=\"https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F96a980eb-ad37-4bab-8885-6890dfd4c493_1390x963.png\" width=\"615\" height=\"426.07553956834533\" data-attrs=\"{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/96a980eb-ad37-4bab-8885-6890dfd4c493_1390x963.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:963,&quot;width&quot;:1390,&quot;resizeWidth&quot;:615,&quot;bytes&quot;:137762,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}\" class=\"sizing-normal\" alt=\"\" srcset=\"https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F96a980eb-ad37-4bab-8885-6890dfd4c493_1390x963.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F96a980eb-ad37-4bab-8885-6890dfd4c493_1390x963.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F96a980eb-ad37-4bab-8885-6890dfd4c493_1390x963.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F96a980eb-ad37-4bab-8885-6890dfd4c493_1390x963.png 1456w\" sizes=\"100vw\" loading=\"lazy\"></picture><div class=\"image-link-expand\"><div class=\"pencraft pc-display-flex pc-gap-8 pc-reset\"><div class=\"pencraft pc-reset icon-container restack-image\"><svg role=\"img\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke-width=\"1.8\" stroke=\"#000\" xmlns=\"http://www.w3.org/2000/svg\"><g><title></title><path d=\"M21 3V8M21 8H16M21 8L18 5.29962C16.7056 4.14183 15.1038 3.38328 13.3879 3.11547C11.6719 2.84766 9.9152 3.08203 8.32951 3.79031C6.74382 4.49858 5.39691 5.65051 4.45125 7.10715C3.5056 8.5638 3.00158 10.2629 3 11.9996M3 21V16M3 16H8M3 16L6 18.7C7.29445 19.8578 8.89623 20.6163 10.6121 20.8841C12.3281 21.152 14.0848 20.9176 15.6705 20.2093C17.2562 19.501 18.6031 18.3491 19.5487 16.8925C20.4944 15.4358 20.9984 13.7367 21 12\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></g></svg></div><div class=\"pencraft pc-reset icon-container view-image\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-maximize2\"><polyline points=\"15 3 21 3 21 9\"></polyline><polyline points=\"9 21 3 21 3 15\"></polyline><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"></line><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"></line></svg></div></div></div></div></a></figure></div><p>You can find it on <strong><a href=\"http://algomaster.io\">algomaster.io</a>.</strong> Just head to the practice page. You will see a structured list <strong>of problems</strong> that you can follow from top to bottom.</p><p>Here you&#8217;ll find:</p><ul><li><p>Resources to help you learn the topics.</p></li><li><p>Ability to track your progress and mark problems for future revision.</p></li><li><p>Links to <strong>GitHub and YouTube solutions</strong>.</p></li><li><p>and ability to filter problems based on pattern, difficulty level and status.</p></li></ul><h2>Take your time</h2><p>Don&#8217;t rush through problems just to increase your count. Instead of focusing on the quantity of problems you solve, focus on what you learn from each problem.</p><p>It&#8217;s far better to deeply understand and solve 50 problems than to superficially solve 500 problems.</p><p>After solving a problem, ask yourself:</p><ul><li><p><em>Why does this solution work?</em></p></li><li><p><em>What&#8217;s the one key insight that made everything else easier?</em></p></li></ul><p>Also, try to make it fun. There is a fun in learning to solve coding challenges. It&#8217;s not just about getting a job.</p><h2>Focus on learning Patterns</h2><p>The key to getting better at LeetCode is learning<strong> </strong>as many<strong> </strong>patterns as possible.</p><p>Instead of focusing on individual questions, focus on identifying <strong>underlying patterns</strong> that connect similar problems.</p><p>On LeetCode, you&#8217;ll come across multiple problems that follow a similar patterns. Once you solve one of them, you can apply the same approach to solve others.</p><p>For example: After learning the monotonic stack <strong>pattern</strong>, I was able to solve over 10 similar problems.</p><p>I made a <strong><a href=\"https://www.youtube.com/watch?v=DjYZk8nrXVY\">video</a></strong> covering the 15 <strong>most important LeetCode patterns</strong> I learned after solving over 1,500 problems. You can check it out later.</p><p>On <strong><a href=\"http://algomaster.io\">algomaster.io</a></strong>, I&#8217;ve categorized problems by pattern. This makes it easy to focus on one pattern at a time. By going through the list, you will get to know all the important patterns for coding interviews.</p><h2>How to approach a new problem?</h2><h4><strong>1. Read the Problem Statement Twice</strong></h4><p>The first time, focus on getting the big picture. What is the problem asking you to do?</p><p>On the second read, pay attention to specific constraints and conditions. These small details often provide clues for optimizing your solution.</p><h4><strong>2. Analyze the Input and Output Examples</strong></h4><p>Carefully go through the examples provided in the problem.</p><p>Walk through the input and output step by step to understand how the problem works. I have found that, many times simply walking through a few examples helped me figure out the solution.</p><h4><strong>3. Visualize with pen and paper</strong></h4><p>Many problems specially the ones related to trees and graphs are much easier to understand when you draw them out.</p><p>Try to take examples that cover different scenarios and input sizes. Think about any <strong>edge cases</strong> that might come up.</p><h4><strong>4. Start with a Brute Force Approach</strong></h4><p>Don&#8217;t expect to come up with the most optimal solution right away.</p><p>First see, if you can solve the problems using a brute force approach. While it might not be efficient, it gives you a baseline to improve upon.</p><h4><strong>5. Optimize Your Solution</strong></h4><p>Once you have a brute force solution, focus on optimizing it.</p><p>Here are few things to consider:</p><ul><li><p><strong>Leverage Unused Information</strong>: Look for details you might have missed. For instance, if the problem states that the array is sorted, consider leveraging this to use binary search or a two-pointer approach.</p></li><li><p><strong>Precompute Information</strong>: If certain calculations are repeated multiple times, consider precomputing them. Use techniques like <strong>prefix sums</strong> or <strong>frequency counts</strong> to avoid redundant calculations. Hash tables are widely used in interview questions and should be at the top of your mind.</p></li><li><p><strong>Make Time vs. Space Tradeoffs:</strong> Sometimes, using additional memory (e.g., hash tables) can speed up your solution.</p></li><li><p><strong>Data Structure Brainstorm:</strong> Run through the popular data structures and try to apply each one to the problem at hand.</p></li></ul><h4><strong>6. Keep it Simple</strong></h4><p>Avoid overcomplicating your solution. At every stage ask yourself, <em><strong>\"Is there a simpler way to do this?\"</strong></em>. This will not only make your solution easier to understand but it will also reduce the chances of errors during coding.</p><h4><strong>7. Analyze Time and Space Complexity</strong></h4><p>Develop the habit of analyzing the time and space complexity of every problem you submit.</p><h2>How much time should you spend on each problem?</h2><p>When you&#8217;re just starting out, even <strong>easy problems</strong> can take a while to solve. That&#8217;s completely normal&#8212;don&#8217;t get discouraged if you can&#8217;t come up with a solution right away.</p><p>Your main goal in the beginning should be to <strong>focus on learning</strong> and understanding the problem deeply. Real progress happens when you take the time to think, make mistakes and refine your approach.</p><p>But, some problems involve specific tricks or patterns that are hard to figure out unless you&#8217;ve seen them before.</p><p>Spending hours on such problems without progress can be counterproductive.</p><p>Here&#8217;s a good rule of thumb:</p><ul><li><p>Give yourself <strong>30 to 60 minutes</strong> of focused effort for each problem.</p></li><li><p>If you&#8217;re still stuck, it&#8217;s okay to look at hints or solutions.</p></li></ul><p>Read the official solution and and try to understand the top voted solutions on LeetCode discussion forum.</p><p>Don&#8217;t just move on after viewing the solution. Try to grasp why the solution works.</p><p>Rewrite the solution from scratch without looking at the code. Writing it yourself helps you internalize the approach and ensures you truly understand it.</p><p>If you couldn&#8217;t solve the problem on your first attempt, mark it for <strong>revision</strong> and revisit it after a few weeks. Revisiting problems helps reinforce your understanding and ensures long-term retention.</p><h2><strong>Avoid Memorization</strong></h2><p>One of the most common mistakes&#8212;one that I made myself&#8212;is <strong>memorizing solutions</strong> to difficult problems and moving on.</p><p>At first, it might seem like a shortcut, but in reality, it&#8217;s a <strong>big mistake</strong> for three main reasons:</p><ol><li><p><strong>You&#8217;ll quickly forget memorized solutions.</strong> Without understanding the logic behind them, they won&#8217;t stick in your memory.</p></li><li><p><strong>Your problem-solving skills won&#8217;t improve.</strong> Memorization skips the critical thinking process, which is the real value of practicing coding problems.</p></li><li><p><strong>You&#8217;ll struggle in interviews.</strong> Most interviewers ask variants of problems or follow-up questions, and without a deep understanding, you won&#8217;t be able to adapt.</p></li></ol><p>Instead of memorizing, focus on understanding the solution, even if it takes hours.</p><p>Break it down step by step and ask yourself:</p><ul><li><p><strong>Why does this approach work?</strong></p></li><li><p><strong>What&#8217;s the key insight that simplifies the problem?</strong></p></li><li><p><strong>How can I apply this approach to similar problems?</strong></p></li></ul><p>This effort pays off in the long term. The deeper your understanding, the more confident you&#8217;ll feel explaining your thought process during interviews.</p><h2>Practice in a timed environment</h2><p>Solving a problem during an interview is very different from solving it from the comfort of your home.</p><p>That&#8217;s why it&#8217;s a good idea to time-box yourself and practice in a timed environment after you have learned the basics and solved 100-150 problems.</p><p>Simply turn on a timer while practicing and try to complete the problem within that time.</p><ul><li><p>For <strong>easy problems</strong>, aim to complete them in <strong>10-15 minutes.</strong></p></li><li><p>For <strong>medium problems</strong>, set a timer for <strong>up to 30 minutes.</strong></p></li><li><p>For <strong>hard problems</strong>, allow yourself <strong>up to an hour.</strong></p></li></ul><p>To take your practice a step further:</p><ul><li><p>Participate in <strong><a href=\"https://leetcode.com/contest/\">LeetCode contests</a></strong>.</p></li><li><p>Try <strong>virtual contests</strong> by simulating past LeetCode contests.</p></li></ul><p>It&#8217;s okay if you struggle to solve even one problem initially&#8212;this is normal. The goal is to gain experience solving problems within a time limit.</p><p>When I started participating in contests, I could only solve 1-2 problems. But with consistent practice, I improved to solving 3 problems, and eventually, I was able to solve all of them in some contests.</p><h2>Retain what you Learn</h2><p>Getting good at LeetCode isn&#8217;t just about learning new concepts or solving problems&#8212;it&#8217;s also about retaining that knowledge over time.</p><p>That&#8217;s why you should regularly revisit concepts and problems you&#8217;ve already solved, especially the ones you found challenging.</p><p>Try to solve those problems again <strong>without looking at the solution.</strong></p><p>By practicing consistently and revisiting old problems, you&#8217;ll make it much easier to retain what you&#8217;ve learned over time.</p><p>I discuss more about how to effectively revise LeetCode problems in this article, so make sure to check it out: </p><div class=\"digest-post-embed\" data-attrs=\"{&quot;nodeId&quot;:&quot;98b8c379-b703-4cc6-8397-cca9c584ac65&quot;,&quot;caption&quot;:&quot;Getting good at Data Structures and Algorithms (DSA) helped me clear interviews at Amazon, Google and Microsoft.&quot;,&quot;size&quot;:&quot;sm&quot;,&quot;isEditorNode&quot;:true,&quot;title&quot;:&quot;How I Mastered Data Structures and Algorithms&quot;,&quot;publishedBylines&quot;:[{&quot;id&quot;:83602743,&quot;name&quot;:&quot;Ashish Pratap Singh&quot;,&quot;bio&quot;:&quot;Software Engineer | Prev @ Amazon. Write about Coding, System Design, Interviews and Software Engineering. LinkedIn: 185k+, Youtube: 125k+, GitHub: 40k+ stars&quot;,&quot;photo_url&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/bec4e97e-29d0-4080-b529-db1f5fc4d1d2_1536x1536.jpeg&quot;,&quot;is_guest&quot;:false,&quot;bestseller_tier&quot;:null}],&quot;post_date&quot;:&quot;2024-06-16T13:30:59.948Z&quot;,&quot;cover_image&quot;:&quot;https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Feb93edef-9bb2-45f5-a0cd-fd44f23e44f0_1728x1046.png&quot;,&quot;cover_image_alt&quot;:null,&quot;canonical_url&quot;:&quot;https://blog.algomaster.io/p/how-i-mastered-data-structures-and-algorithms&quot;,&quot;section_name&quot;:null,&quot;id&quot;:145655252,&quot;type&quot;:&quot;newsletter&quot;,&quot;reaction_count&quot;:688,&quot;comment_count&quot;:21,&quot;publication_name&quot;:&quot;AlgoMaster Newsletter&quot;,&quot;publication_logo_url&quot;:&quot;https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fcbeb41b6-bde8-481d-b2b4-109d10f76616_256x256.png&quot;,&quot;belowTheFold&quot;:true}\"></div><h2>Be Consistent</h2><p>Getting good at LeetCode takes time.</p><p>Some topics might take weeks or even months to master, and that&#8217;s okay. </p><p>Be patient with yourself and remember: It&#8217;s completely normal to feel stuck or frustrated when working on a tough problem or grasping a complex topic.</p><p>If a problem feels too hard, take a break, then come back to it with a fresh perspective.</p><p>The more you practice, the better you will get at solving LeetCode problems.</p><div><hr></div><p>Hope you enjoyed reading this article.</p><p>If you found it valuable, hit a like &#10084;&#65039; and consider subscribing for more such content every week.</p><p>If you have any questions or suggestions, leave a comment.</p><div class=\"captioned-button-wrap\" data-attrs=\"{&quot;url&quot;:&quot;https://blog.algomaster.io/p/how-i-mastered-data-structures-and-algorithms?utm_source=substack&amp;utm_medium=email&amp;utm_content=share&amp;action=share&amp;token=eyJ1c2VyX2lkIjo4MzYwMjc0MywicG9zdF9pZCI6MTQ1NjU1MjUyLCJpYXQiOjE3MjE1MjE3MzEsImV4cCI6MTcyNDExMzczMSwiaXNzIjoicHViLTIyMDIyNjgiLCJzdWIiOiJwb3N0LXJlYWN0aW9uIn0.2cNY811YEugd5iH9XJQhakBzyahGqF7PcATBlFj5J2w&quot;,&quot;text&quot;:&quot;Share&quot;}\" data-component-name=\"CaptionedButtonToDOM\"><div class=\"preamble\"><p class=\"cta-caption\">This post is public so feel free to share it.</p></div><p class=\"button-wrapper\" data-attrs=\"{&quot;url&quot;:&quot;https://blog.algomaster.io/p/how-to-start-leetcode-in-2025?utm_source=substack&utm_medium=email&utm_content=share&action=share&quot;,&quot;text&quot;:&quot;Share&quot;}\" data-component-name=\"ButtonCreateButton\"><a class=\"button primary\" href=\"https://blog.algomaster.io/p/how-to-start-leetcode-in-2025?utm_source=substack&utm_medium=email&utm_content=share&action=share\"><span>Share</span></a></p></div><div class=\"subscription-widget-wrap-editor\" data-attrs=\"{&quot;url&quot;:&quot;https://blog.algomaster.io/subscribe?&quot;,&quot;text&quot;:&quot;Subscribe&quot;,&quot;language&quot;:&quot;en&quot;}\" data-component-name=\"SubscribeWidgetToDOM\"><div class=\"subscription-widget show-subscribe\"><div class=\"preamble\"><p class=\"cta-caption\">Subscribe for free to receive new articles every week.</p></div><form class=\"subscription-widget-subscribe\"><input type=\"email\" class=\"email-input\" name=\"email\" placeholder=\"Type your email&#8230;\" tabindex=\"-1\"><input type=\"submit\" class=\"button primary\" value=\"Subscribe\"><div class=\"fake-input-wrapper\"><div class=\"fake-input\"></div><div class=\"fake-button\"></div></div></form></div></div><p>Checkout my <strong><a href=\"https://www.youtube.com/@ashishps_1/videos\">Youtube channel</a></strong> for more in-depth content.</p><p>Follow me on <strong><a href=\"https://www.linkedin.com/in/ashishps1/\">LinkedIn</a></strong> and <strong><a href=\"https://twitter.com/ashishps_1\">X</a></strong> to stay updated.</p><p>Checkout my <strong><a href=\"https://github.com/ashishps1\">GitHub repositories</a></strong> for free interview preparation resources.</p><p>I hope you have a lovely day!</p><p>See you soon,</p><p>Ashish</p>","flags":null,"enclosureUrl":"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1a074c17-0163-4236-86a4-1cc16d63cc1f_800x616.jpeg","enclosureMime":""}]}