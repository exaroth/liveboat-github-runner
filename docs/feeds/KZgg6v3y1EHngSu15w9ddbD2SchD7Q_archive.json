{"id":"KZgg6v3y1EHngSu15w9ddbD2SchD7Q","title":"Dev News - Last 2 days","displayTitle":"Dev News - Last 2 days","url":"","feedLink":"","is_query":true,"items":[{"title":"Kubernetes, Kafka and Database","url":"https://www.reddit.com/r/kubernetes/comments/1hpsppv/kubernetes_kafka_and_database/","date":1735580516,"author":"/u/Lumenbyte","unread":true,"content":"<!-- SC_OFF --><div class=\"md\"><p>As a beginner, with lot of research and docker containers, i was finally able to setup everything in my Minikube cluster. The message is produced in one service, database gets updated and kafka is able to do its work. I am just happy. It was my 3 days struggle. First i used to have image in docker and pull the image from there. But using docker inside minikube cluster changes my perspective on docker and kubernetes. </p> <p>Basically at the end of the day, kubernetes just needs image to work with containers. Lot of things like resourcequota, autoscaling are still pending. But feels so great with the setup as of now. Just happy and wanted to share the feelings here ☺️☺️☺️</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Lumenbyte\"> /u/Lumenbyte </a> <br/> <span><a href=\"https://www.reddit.com/r/kubernetes/comments/1hpsppv/kubernetes_kafka_and_database/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/kubernetes/comments/1hpsppv/kubernetes_kafka_and_database/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"sans-IO: The secret to effective Rust for network services","url":"https://www.reddit.com/r/rust/comments/1hpqgbt/sansio_the_secret_to_effective_rust_for_network/","date":1735574706,"author":"/u/EightLines_03","unread":true,"content":"&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/EightLines_03\"> /u/EightLines_03 </a> <br/> <span><a href=\"https://www.firezone.dev/blog/sans-io\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/rust/comments/1hpqgbt/sansio_the_secret_to_effective_rust_for_network/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Just an(other) async task library","url":"https://www.reddit.com/r/golang/comments/1hpq5fq/just_another_async_task_library/","date":1735573938,"author":"/u/svaloumas","unread":true,"content":"<!-- SC_OFF --><div class=\"md\"><p>iocast is a zero-dependency Go library designed to provide a simple API for running async tasks right in your code. It is intentionally kept minimal to ensure ease of use and integration.</p> <p>I&#39;ve only started working on it a couple of days ago as an Xmas holiday project, so please don&#39;t consider it bulletproof yet :) Any suggestions or feedback is more than welcome.</p> <p>Currently, it supports:</p> <ul> <li>Using custom structs as arguments in your tasks, leveraging generics.</li> <li>Selecting your preferred return types for your task results.</li> <li>Task context awareness.</li> <li>Retry attempts for each task.</li> <li>Running tasks as a pipeline.</li> <li>A database interface for optionally storing task results.</li> <li>Scheduling tasks to run at specific times.</li> </ul> <p>The database interface includes a single method, making it easy to integrate with the backend of your choice.</p> <p>This project was inspired by my earlier experience with <a href=\"https://github.com/svaloumas/valet\">valet</a>, which is quite similar in terms of semantics, but it aims to offer a lighter and more integrated solution.</p> <p>Thank you in advance for checking it out.</p> <p>GitHub: <a href=\"https://github.com/svaloumas/iocast\">iocast</a></p> <p>Examples: <a href=\"https://github.com/svaloumas/iocast/tree/main/_example\">Usage Examples</a></p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/svaloumas\"> /u/svaloumas </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1hpq5fq/just_another_async_task_library/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hpq5fq/just_another_async_task_library/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Exploring Cloud Native projects in CNCF Sandbox. Part 2: 12 arrivals of 2023 H2","url":"https://www.reddit.com/r/kubernetes/comments/1hpq4fs/exploring_cloud_native_projects_in_cncf_sandbox/","date":1735573866,"author":"/u/dshurupov","unread":true,"content":"<table> <tr><td> <a href=\"https://www.reddit.com/r/kubernetes/comments/1hpq4fs/exploring_cloud_native_projects_in_cncf_sandbox/\"> <img src=\"https://external-preview.redd.it/mt1zZckyK09P0CcRCalbGV7WnjzSIfpnTBgCne70E10.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=f931935ce5c694cc779b612a97ae7f65794d9bf9\" alt=\"Exploring Cloud Native projects in CNCF Sandbox. Part 2: 12 arrivals of 2023 H2\" title=\"Exploring Cloud Native projects in CNCF Sandbox. Part 2: 12 arrivals of 2023 H2\" /> </a> </td><td> <!-- SC_OFF --><div class=\"md\"><p>A brief overview (with quick helpful links) of the projects added to the CNCF Sandbox in the second part of 2023: Logging operator, K8sGPT, kcp, KubeStellar, Copa, Kanister, KCL, Easegress, Kuasar, krkn, kube-burner, and Spiderpool.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/dshurupov\"> /u/dshurupov </a> <br/> <span><a href=\"https://blog.palark.com/cncf-sandbox-2023-h2/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/kubernetes/comments/1hpq4fs/exploring_cloud_native_projects_in_cncf_sandbox/\">[comments]</a></span> </td></tr></table>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Insurers Rely on Doctors Whose Judgments Have Been Criticized by Courts","url":"https://www.propublica.org/article/mental-health-insurance-denials-unitedhealthcare-cigna-doctors","date":1735572105,"author":"ceejayoz","unread":true,"content":"\n<p>Article URL: <a href=\"https://www.propublica.org/article/mental-health-insurance-denials-unitedhealthcare-cigna-doctors\">https://www.propublica.org/article/mental-health-insurance-denials-unitedhealthcare-cigna-doctors</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42550042\">https://news.ycombinator.com/item?id=42550042</a></p>\n<p>Points: 145</p>\n<p># Comments: 134</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"FTC Orders 'Gun Detection' Tech Maker Evolv to Stop Overstating Effectiveness","url":"https://www.techdirt.com/2024/12/30/ftc-orders-gun-detection-tech-maker-evolv-to-stop-overstating-effectiveness-of-its-glorified-metal-detectors/","date":1735570874,"author":"shakna","unread":true,"content":"\n<p>Article URL: <a href=\"https://www.techdirt.com/2024/12/30/ftc-orders-gun-detection-tech-maker-evolv-to-stop-overstating-effectiveness-of-its-glorified-metal-detectors/\">https://www.techdirt.com/2024/12/30/ftc-orders-gun-detection-tech-maker-evolv-to-stop-overstating-effectiveness-of-its-glorified-metal-detectors/</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42549857\">https://news.ycombinator.com/item?id=42549857</a></p>\n<p>Points: 79</p>\n<p># Comments: 71</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Collection of insane and fun facts about SQLite","url":"https://avi.im/blag/2024/sqlite-facts/","date":1735570603,"author":"avinassh","unread":true,"content":"\n<p>Article URL: <a href=\"https://avi.im/blag/2024/sqlite-facts/\">https://avi.im/blag/2024/sqlite-facts/</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42549807\">https://news.ycombinator.com/item?id=42549807</a></p>\n<p>Points: 84</p>\n<p># Comments: 39</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Collection of insane and fun facts about SQLite","url":"https://www.reddit.com/r/programming/comments/1hpowxh/collection_of_insane_and_fun_facts_about_sqlite/","date":1735570547,"author":"/u/avinassh","unread":true,"content":"&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/avinassh\"> /u/avinassh </a> <br/> <span><a href=\"https://avi.im/blag/2024/sqlite-facts\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/comments/1hpowxh/collection_of_insane_and_fun_facts_about_sqlite/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"AI companies cause most of traffic on forums","url":"https://pod.geraspora.de/posts/17342163","date":1735569437,"author":"ta988","unread":true,"content":"\n<p>Article URL: <a href=\"https://pod.geraspora.de/posts/17342163\">https://pod.geraspora.de/posts/17342163</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42549624\">https://news.ycombinator.com/item?id=42549624</a></p>\n<p>Points: 169</p>\n<p># Comments: 95</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Deployment tools and \"GitOps\" project structure noob tooling questions","url":"https://www.reddit.com/r/kubernetes/comments/1hpoekl/deployment_tools_and_gitops_project_structure/","date":1735569035,"author":"/u/BrocoLeeOnReddit","unread":true,"content":"<!-- SC_OFF --><div class=\"md\"><p>I&#39;m quite new to Kubernetes and I understand the concept of manifests and also how a package manager like Helm works and I also took a look at kustomize. However, if I understand it correctly, in the end everything thrown at a cluster will be manifests, either directly or created by Helm from Charts or kustomize by merging kustomize manifests.</p> <p>I also stumbled upon helmfile which I thought was pretty neat because it allows you to declaratively define helm charts you want to deploy.</p> <p>However, I&#39;m having some trouble understanding how to get all of this integrated in a way so that I can easily automate it and not have to type 20 commands.</p> <p>I think it&#39;s easier if I try to explain what I want to do: I currently have 3 Control Planes and 2 Worker nodes (Talos) running on my Proxmox server in my Homelab. I also have GitLab running on my NAS. So naturally I&#39;m thinking about using GitOps and want to try ArgoCD.</p> <p>Currently, I&#39;m installing most stuff manually with helmfile + additional manifests and I&#39;m currently in the &quot;bootstrapping&quot; part of the project, e.g. Installing Cilium as CNI, SealedSecrets to handle secrets, configuring storage, etc.</p> <p>Currently the directory structure in my project is something like this:</p> <pre><code>base ├── 01-cilium │ ├── manifests │ │ ├── bgp-setup.yaml │ │ └── ip-pools.yaml │ ├── helmfile.yaml │ └── values.yaml ├── 02-sealedsecrets │ └── controller.yaml ├── 03-nfs-storage │ ├── helmfile.yaml │ └── values.yaml ├── 04-cert-manager │ ├── ... ├── 05-traefik │ ├── ... ├── 06-argocd │ ├── ... │ ... ... </code></pre> <p>You get the idea.</p> <p>As you can see, there&#39;s some things that have a helmfile, some have manifests only, some have both and I just write in my README how to deploy this, e.g. first <code>helmfile apply -f base/cilium/helmfile.yaml</code>, then <code>kubectl apply -f base/cilium/manifests</code> and so on.</p> <p>On top of that, since I am using SealedSecrets, I need to have the controller running on the Cluster to generate secrets needed for e.g. cert-manager (API-Token for Cloudflare). So that&#39;s a manual step in between so I can push the project to git without it having any unencrypted secrets in it.</p> <p>This feels really clunky and I feel like there should be a much simpler solution. I know I could just write a bash script for this but is this really how the tooling is supposed to be used or am I doing something fundamentally wrong?</p> <p>Also, how do you guys structure your projects and handle stuff like bootstrapping? Do you just use manifests when defining stuff in Code without manual intervention or do you use tools like helmfile? And do you split your git repos between infrastructure projects (deploying core resources and tooling) and application projects?</p> <p>Sorry for asking so many questions but I&#39;m nearly done with getting everything to work but I want to make sure to follow best practices when trying to structure my project and I want to do it now before it gets bigger and restructuring would get annoying...</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/BrocoLeeOnReddit\"> /u/BrocoLeeOnReddit </a> <br/> <span><a href=\"https://www.reddit.com/r/kubernetes/comments/1hpoekl/deployment_tools_and_gitops_project_structure/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/kubernetes/comments/1hpoekl/deployment_tools_and_gitops_project_structure/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"What are some good open source Golang websites?","url":"https://www.reddit.com/r/golang/comments/1hpnpja/what_are_some_good_open_source_golang_websites/","date":1735566937,"author":"/u/GrandAd5084","unread":true,"content":"<!-- SC_OFF --><div class=\"md\"><p>I&#39;m a beginner in web development and first I did some web development with javascript as backend language but now I am switching to go for backend.</p> <p>I want to know some industry standards to follow while writing go code in web development.</p> <p>Can anyone suggest me some good open source Golang websites code, so I can understand how it is used in web development.</p> <p>Any help is appreciated🙌</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/GrandAd5084\"> /u/GrandAd5084 </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1hpnpja/what_are_some_good_open_source_golang_websites/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hpnpja/what_are_some_good_open_source_golang_websites/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"My implementation of Redis in Golang","url":"https://www.reddit.com/r/golang/comments/1hpnp9p/my_implementation_of_redis_in_golang/","date":1735566914,"author":"/u/KingBig9811","unread":true,"content":"<!-- SC_OFF --><div class=\"md\"><p>I am made my own Redis server in Golang including my own RESP and RDB parser. It supports features like replication, persistence. I am still new to backend and Golang so i want feedback about anything that comes to your mind, be it code structuring or optimizations. <a href=\"https://github.com/vansh845\">https://github.com/vansh845</a></p> <p>Thank you.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/KingBig9811\"> /u/KingBig9811 </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1hpnp9p/my_implementation_of_redis_in_golang/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hpnp9p/my_implementation_of_redis_in_golang/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"pglocklogger: real-time log of blocked processes in PostgreSQL","url":"https://www.reddit.com/r/programming/comments/1hpni4e/pglocklogger_realtime_log_of_blocked_processes_in/","date":1735566268,"author":"/u/sgielen","unread":true,"content":"<!-- SC_OFF --><div class=\"md\"><p>TLDR: Run pglocklogger on your prod databases. Whenever there&#39;s an outage due to blocking in PostgreSQL, it may give you essential observability.</p> <p>Recently, I experienced a prod outage caused by a blocked migration.</p> <p>The migration itself was almost instantaneous, but it picks up a lock before it actually runs. That may take a while, but that&#39;s no problem, right? The migration runs a bit later, no worries.</p> <p>That&#39;s when I learned that an ALTER TABLE waiting on a lock, itself also blocks benign work that would otherwise run concurrently. So having your blocked ALTER TABLE can spiral into an application-wide outage quite easily.</p> <p>For example, a SELECT WITH UPDATE can run simultaneously with a SELECT, but not if an ALTER TABLE is executed in between. This is to prevent livelocks. A simple solution is to set a lock_timeout in your migrations, which causes the ALTER to fail early and allow all other work to continue. Then, retry the migration later.</p> <p>I figured this out during the post-mortem analysis, but during the outage, this was hard to infer, even from PostgreSQL&#39;s own slow query log. There&#39;s a number of resources on how to discover this during an outage, but afterwards, all that information is gone.</p> <p>Not with pglocklogger. It inspects PostgreSQL&#39;s in-memory state (using in-memory tables intended for this) and logs the output when it crosses particular thresholds. In an outage, or during post-mortem investigations, this may turn out to be an essential observability tool.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/sgielen\"> /u/sgielen </a> <br/> <span><a href=\"https://github.com/skybitsnl/pglocklogger\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/comments/1hpni4e/pglocklogger_realtime_log_of_blocked_processes_in/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Introducing rust_arkitect: architectural rule validation for Rust projects","url":"https://www.reddit.com/r/rust/comments/1hpmvur/introducing_rust_arkitect_architectural_rule/","date":1735564167,"author":"/u/Ap3ir0n91","unread":true,"content":"<!-- SC_OFF --><div class=\"md\"><p>Hi Rustaceans! 🦀</p> <p>I&#39;m happy to share <a href=\"https://crates.io/crates/rust_arkitect\">rust_arkitect</a>, a lightweight library for defining and validating architectural rules in Rust projects.</p> <p>I started this project as a way to get my hands dirty with Rust and build something concrete. The idea comes from a similar tool I previously developed in PHP, which brought value by enforcing architectural integrity in large-scale projects. I wanted to see if I could replicate that thing in Rust.</p> <p>Here&#39;s an example:</p> <pre><code>let project = Project::from_relative_path(file!(), &quot;./../src&quot;); let rules = ArchitecturalRules::define() .component(&quot;Application&quot;) .located_at(&quot;crate::application&quot;) .may_depend_on(&amp;[&quot;Domain&quot;]) .component(&quot;Domain&quot;) .located_at(&quot;crate::domain&quot;) .allow_external_dependencies(&amp;[&quot;serde&quot;]) .must_not_depend_on_anything() .finalize(); let result = Arkitect::ensure_that(project).complies_with(rules); assert!(result.is_ok()); </code></pre> <p>I’d love to hear from anyone who tries it out in a real project. You can find the project here: <a href=\"https://github.com/pfazzi/rust_arkitect\">GitHub</a>.</p> <p>If you have ideas, run into issues, or just want to share how you’re using it, feel free to reach out or open an issue. Thank you in advance! 😊</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Ap3ir0n91\"> /u/Ap3ir0n91 </a> <br/> <span><a href=\"https://www.reddit.com/r/rust/comments/1hpmvur/introducing_rust_arkitect_architectural_rule/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/rust/comments/1hpmvur/introducing_rust_arkitect_architectural_rule/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Fish 4.0: The Fish Of Theseus","url":"https://www.reddit.com/r/linux/comments/1hpms0u/fish_40_the_fish_of_theseus/","date":1735563790,"author":"/u/Alexander_Selkirk","unread":true,"content":"&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Alexander_Selkirk\"> /u/Alexander_Selkirk </a> <br/> <span><a href=\"https://fishshell.com/blog/rustport/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/linux/comments/1hpms0u/fish_40_the_fish_of_theseus/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Passkey technology is elegant, but it's most definitely not usable security","url":"https://arstechnica.com/security/2024/12/passkey-technology-is-elegant-but-its-most-definitely-not-usable-security/","date":1735561899,"author":"Flimm","unread":true,"content":"\n<p>Article URL: <a href=\"https://arstechnica.com/security/2024/12/passkey-technology-is-elegant-but-its-most-definitely-not-usable-security/\">https://arstechnica.com/security/2024/12/passkey-technology-is-elegant-but-its-most-definitely-not-usable-security/</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42548719\">https://news.ycombinator.com/item?id=42548719</a></p>\n<p>Points: 172</p>\n<p># Comments: 194</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"I built vimium for the Linux desktop so you can navigate GUIs with your keyboard","url":"https://www.reddit.com/r/linux/comments/1hplpc0/i_built_vimium_for_the_linux_desktop_so_you_can/","date":1735559797,"author":"/u/T0X1K01","unread":true,"content":"&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/T0X1K01\"> /u/T0X1K01 </a> <br/> <span><a href=\"https://i.imgur.com/5hXeHvP.gif\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/linux/comments/1hplpc0/i_built_vimium_for_the_linux_desktop_so_you_can/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"A CNI 'Chicken-and-Egg' Dilemma: How Does Calico Assign IPs to Itself?","url":"https://www.reddit.com/r/kubernetes/comments/1hpljxk/a_cni_chickenandegg_dilemma_how_does_calico/","date":1735559207,"author":"/u/qingdi","unread":true,"content":"<!-- SC_OFF --><div class=\"md\"><p>an interesting issue: <strong>Calico assigns IP addresses to its own components’ Pods</strong> (e.g., calico-kube-controllers). How does Calico achieve this? From the installation of the Calico network plugin to assigning IPs to its own Pods, what happens at the underlying level?</p> <p>The post is here: <a href=\"https://midbai.com/en/post/cni-chicken-egg-problem/\">https://midbai.com/en/post/cni-chicken-egg-problem/</a></p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/qingdi\"> /u/qingdi </a> <br/> <span><a href=\"https://www.reddit.com/r/kubernetes/comments/1hpljxk/a_cni_chickenandegg_dilemma_how_does_calico/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/kubernetes/comments/1hpljxk/a_cni_chickenandegg_dilemma_how_does_calico/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Apple and Meta go to war over interoperability vs. privacy","url":"https://techcrunch.com/2024/12/19/apple-and-meta-go-to-war-over-interoperability-vs-privacy/","date":1735557685,"author":"aquir","unread":true,"content":"\n<p>Article URL: <a href=\"https://techcrunch.com/2024/12/19/apple-and-meta-go-to-war-over-interoperability-vs-privacy/\">https://techcrunch.com/2024/12/19/apple-and-meta-go-to-war-over-interoperability-vs-privacy/</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42548359\">https://news.ycombinator.com/item?id=42548359</a></p>\n<p>Points: 114</p>\n<p># Comments: 117</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"What to expect from Go 1.24 - Part 1","url":"https://www.reddit.com/r/golang/comments/1hpl65g/what_to_expect_from_go_124_part_1/","date":1735557619,"author":"/u/ByteVoyagerX","unread":true,"content":"<table> <tr><td> <a href=\"https://www.reddit.com/r/golang/comments/1hpl65g/what_to_expect_from_go_124_part_1/\"> <img src=\"https://external-preview.redd.it/yrzVGKSr3TTZHEGj9EQwywT7t_WxsbNLK1NbqQBGqoY.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=940ad608ba263b9081c040d6f5b267f3d60b03de\" alt=\"What to expect from Go 1.24 - Part 1\" title=\"What to expect from Go 1.24 - Part 1\" /> </a> </td><td> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/ByteVoyagerX\"> /u/ByteVoyagerX </a> <br/> <span><a href=\"https://golangnugget.com/p/what-to-expect-from-go-1-24-part-1\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hpl65g/what_to_expect_from_go_124_part_1/\">[comments]</a></span> </td></tr></table>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Reliable software: An interview with Jon Gjengset on writing high quality code","url":"https://www.reddit.com/r/rust/comments/1hpk70n/reliable_software_an_interview_with_jon_gjengset/","date":1735553509,"author":"/u/timClicks","unread":true,"content":"<!-- SC_OFF --><div class=\"md\"><p>The feedback from this interview has been excellent so far. I hope that reddit enjoys it!</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/timClicks\"> /u/timClicks </a> <br/> <span><a href=\"https://timclicks.dev/podcast/reliable-software-an-interview-with-jon-gjengset\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/rust/comments/1hpk70n/reliable_software_an_interview_with_jon_gjengset/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Hidden Costs of Over-Abstracting Your Codebase","url":"https://www.reddit.com/r/programming/comments/1hpjpn0/hidden_costs_of_overabstracting_your_codebase/","date":1735551424,"author":"/u/bitter-cognac","unread":true,"content":"&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/bitter-cognac\"> /u/bitter-cognac </a> <br/> <span><a href=\"https://medium.com/@all.technology.stories/what-are-the-hidden-costs-of-over-abstracting-your-codebase-8b6a8ab0ab2b?source=friends_link&amp;sk=c0e7ce1b41fa5a8cac594a95c73d66dc\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/comments/1hpjpn0/hidden_costs_of_overabstracting_your_codebase/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"What's the deal with TalosOS?","url":"https://www.reddit.com/r/kubernetes/comments/1hpjh6n/whats_the_deal_with_talosos/","date":1735550393,"author":"/u/theboredabdel","unread":true,"content":"<!-- SC_OFF --><div class=\"md\"><p>I see Talos OS all over the place these days. I have a home Lab with few Intel Nucs I&#39;m planning to turn into a k8s cluster to play around with and thinking about using Talos Linux.</p> <p>Question is why is Talos such a big deal in the k8s space? and is it worth the time!</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/theboredabdel\"> /u/theboredabdel </a> <br/> <span><a href=\"https://www.reddit.com/r/kubernetes/comments/1hpjh6n/whats_the_deal_with_talosos/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/kubernetes/comments/1hpjh6n/whats_the_deal_with_talosos/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Curl-Impersonate","url":"https://github.com/lexiforest/curl-impersonate","date":1735550318,"author":"jakeogh","unread":true,"content":"\n<p>Article URL: <a href=\"https://github.com/lexiforest/curl-impersonate\">https://github.com/lexiforest/curl-impersonate</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42547820\">https://news.ycombinator.com/item?id=42547820</a></p>\n<p>Points: 267</p>\n<p># Comments: 56</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"MiceWine – run Windows applications and games on Android smartphones","url":"https://github.com/KreitinnSoftware/MiceWine-Application","date":1735547918,"author":"bj-rn","unread":true,"content":"\n<p>Article URL: <a href=\"https://github.com/KreitinnSoftware/MiceWine-Application\">https://github.com/KreitinnSoftware/MiceWine-Application</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42547610\">https://news.ycombinator.com/item?id=42547610</a></p>\n<p>Points: 123</p>\n<p># Comments: 32</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"'Obelisks': New Class of Life Has Been Found in Human Digestive System","url":"https://www.sciencealert.com/obelisks-entirely-new-class-of-life-has-been-found-in-the-human-digestive-system","date":1735546368,"author":"unkeen","unread":true,"content":"\n<p>Article URL: <a href=\"https://www.sciencealert.com/obelisks-entirely-new-class-of-life-has-been-found-in-the-human-digestive-system\">https://www.sciencealert.com/obelisks-entirely-new-class-of-life-has-been-found-in-the-human-digestive-system</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42547489\">https://news.ycombinator.com/item?id=42547489</a></p>\n<p>Points: 102</p>\n<p># Comments: 32</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Been using Debian for 15 years. Ready to move on.","url":"https://www.reddit.com/r/linux/comments/1hpg06z/been_using_debian_for_15_years_ready_to_move_on/","date":1735536303,"author":"/u/Smoke_Water","unread":true,"content":"<!-- SC_OFF --><div class=\"md\"><p>So as the title states. I&#39;m ready to explore other options. I wouldn&#39;t say I&#39;m a master at Linux. But I know my way around and I am able to get things working if I have to. </p> <p>However I want to know what others are using. Why they like it. What they hate about it and why it would be a good move.</p> <p>I&#39;ve lived with xfce all these years. I do game. But I also do some image editing as well as video creation/editing. I&#39;ve lived and vm tested mint, peppermint, Ubuntu, pop, and Manjaro. They all just seem the same. So I thought I would get a better idea of what is out there and how other use them. Let me know what you like and why. Thanks. </p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Smoke_Water\"> /u/Smoke_Water </a> <br/> <span><a href=\"https://www.reddit.com/r/linux/comments/1hpg06z/been_using_debian_for_15_years_ready_to_move_on/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/linux/comments/1hpg06z/been_using_debian_for_15_years_ready_to_move_on/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"kde donations all-time high after the enablement of the pleasedonate nagware","url":"https://www.reddit.com/r/linux/comments/1hpevql/kde_donations_alltime_high_after_the_enablement/","date":1735532532,"author":"/u/Candace_Owens_4225","unread":true,"content":"&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Candace_Owens_4225\"> /u/Candace_Owens_4225 </a> <br/> <span><a href=\"https://i.redd.it/4luw32rwww9e1.png\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/linux/comments/1hpevql/kde_donations_alltime_high_after_the_enablement/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"From Pegasus to Predator – The evolution of commercial spyware on iOS [video]","url":"https://media.ccc.de/v/38c3-from-pegasus-to-predator-the-evolution-of-commercial-spyware-on-ios","date":1735529982,"author":"cookiengineer","unread":true,"content":"\n<p>Article URL: <a href=\"https://media.ccc.de/v/38c3-from-pegasus-to-predator-the-evolution-of-commercial-spyware-on-ios\">https://media.ccc.de/v/38c3-from-pegasus-to-predator-the-evolution-of-commercial-spyware-on-ios</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42546216\">https://news.ycombinator.com/item?id=42546216</a></p>\n<p>Points: 325</p>\n<p># Comments: 114</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"KAG – Knowledge Graph RAG Framework","url":"https://github.com/OpenSPG/KAG","date":1735527358,"author":"taikon","unread":true,"content":"\n<p>Article URL: <a href=\"https://github.com/OpenSPG/KAG\">https://github.com/OpenSPG/KAG</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42545986\">https://news.ycombinator.com/item?id=42545986</a></p>\n<p>Points: 188</p>\n<p># Comments: 58</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Lightweight blogging package?","url":"https://www.reddit.com/r/golang/comments/1hpa218/lightweight_blogging_package/","date":1735517799,"author":"/u/bio_risk","unread":true,"content":"<!-- SC_OFF --><div class=\"md\"><p>Has anyone written (or come across) a lightweight blogging platform written in Go? Desired features (descending priority order):</p> <ul> <li><p>renders markdown files</p></li> <li><p>provides simple navigation</p></li> <li><p>uses LetsEncrypt</p></li> </ul> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/bio_risk\"> /u/bio_risk </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1hpa218/lightweight_blogging_package/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hpa218/lightweight_blogging_package/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Built a terminal-style website","url":"https://www.reddit.com/r/programming/comments/1hp94mb/built_a_terminalstyle_website/","date":1735515171,"author":"/u/fizzner","unread":true,"content":"&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/fizzner\"> /u/fizzner </a> <br/> <span><a href=\"https://github.com/micahkepe/term-website\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/comments/1hp94mb/built_a_terminalstyle_website/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Pigment Mixing into Digital Painting","url":"https://scrtwpns.com/mixbox/","date":1735514118,"author":"tlarkworthy","unread":true,"content":"\n<p>Article URL: <a href=\"https://scrtwpns.com/mixbox/\">https://scrtwpns.com/mixbox/</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42544437\">https://news.ycombinator.com/item?id=42544437</a></p>\n<p>Points: 332</p>\n<p># Comments: 52</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"The Cody Computer","url":"https://www.codycomputer.org/","date":1735513397,"author":"classichasclass","unread":true,"content":"\n<p>Article URL: <a href=\"https://www.codycomputer.org/\">https://www.codycomputer.org/</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42544336\">https://news.ycombinator.com/item?id=42544336</a></p>\n<p>Points: 211</p>\n<p># Comments: 27</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Fish 4.0: The Fish Of Theseus (C++ to Rust rewrite summary)","url":"https://www.reddit.com/r/programming/comments/1hp8dhb/fish_40_the_fish_of_theseus_c_to_rust_rewrite/","date":1735513100,"author":"/u/eugay","unread":true,"content":"&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/eugay\"> /u/eugay </a> <br/> <span><a href=\"https://fishshell.com/blog/rustport/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/comments/1hp8dhb/fish_40_the_fish_of_theseus_c_to_rust_rewrite/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Linux 6.13-rc5 Released To Cap Off Linus Torvalds' Birthday Week","url":"https://www.reddit.com/r/linux/comments/1hp6y8l/linux_613rc5_released_to_cap_off_linus_torvalds/","date":1735509259,"author":"/u/gurugabrielpradipaka","unread":true,"content":"&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/gurugabrielpradipaka\"> /u/gurugabrielpradipaka </a> <br/> <span><a href=\"https://www.phoronix.com/news/Linux-6.13-rc5-Released\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/linux/comments/1hp6y8l/linux_613rc5_released_to_cap_off_linus_torvalds/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Show HN: Chorus, a Mac app that lets you chat with a bunch of AIs at once","url":"https://melty.sh/chorus","date":1735508842,"author":"Charlieholtz","unread":true,"content":"\n<p>There's so many cool models to try but they're all in different places. In Chorus you can chat with a bunch of models all at once, and add your own system prompts.<p>Like 4o with a CBT overview, or a succinct Claude. Excited to hear your thoughts!</p>\n<hr>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42543601\">https://news.ycombinator.com/item?id=42543601</a></p>\n<p>Points: 115</p>\n<p># Comments: 64</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Optimising my Rust solutions for Advent of Code","url":"https://www.reddit.com/r/rust/comments/1hp68dc/optimising_my_rust_solutions_for_advent_of_code/","date":1735507391,"author":"/u/hgwxx7_","unread":true,"content":"&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/hgwxx7_\"> /u/hgwxx7_ </a> <br/> <span><a href=\"https://nindalf.com/posts/optimising-rust/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/rust/comments/1hp68dc/optimising_my_rust_solutions_for_advent_of_code/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Jimmy Carter has died","url":"https://www.washingtonpost.com/obituaries/2024/12/29/jimmy-carter-president-dead/","date":1735506501,"author":"gkolli","unread":true,"content":"\n<p>Article URL: <a href=\"https://www.washingtonpost.com/obituaries/2024/12/29/jimmy-carter-president-dead/\">https://www.washingtonpost.com/obituaries/2024/12/29/jimmy-carter-president-dead/</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42543128\">https://news.ycombinator.com/item?id=42543128</a></p>\n<p>Points: 1124</p>\n<p># Comments: 704</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"[YT-X] Browse YouTube from the terminal; yt-dlp wrapper","url":"https://www.reddit.com/r/programming/comments/1hp5rro/ytx_browse_youtube_from_the_terminal_ytdlp_wrapper/","date":1735506210,"author":"/u/BenX855","unread":true,"content":"&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/BenX855\"> /u/BenX855 </a> <br/> <span><a href=\"https://github.com/Benexl/yt-x\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/comments/1hp5rro/ytx_browse_youtube_from_the_terminal_ytdlp_wrapper/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"A distributed rate limiter for Tokio/Tower","url":"https://www.reddit.com/r/rust/comments/1hp5bxv/a_distributed_rate_limiter_for_tokiotower/","date":1735505028,"author":"/u/doniec","unread":true,"content":"&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/doniec\"> /u/doniec </a> <br/> <span><a href=\"https://github.com/miedzinski/tower-ratelimit\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/rust/comments/1hp5bxv/a_distributed_rate_limiter_for_tokiotower/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"How I used sqlc to manage a persistent game world database for my MMO tutorial series","url":"https://www.reddit.com/r/golang/comments/1hp553o/how_i_used_sqlc_to_manage_a_persistent_game_world/","date":1735504522,"author":"/u/Saltytaro_","unread":true,"content":"<table> <tr><td> <a href=\"https://www.reddit.com/r/golang/comments/1hp553o/how_i_used_sqlc_to_manage_a_persistent_game_world/\"> <img src=\"https://external-preview.redd.it/Q8ilY9i8bG4uowqfFVk5WqQ8UlR62dYS1tLc-k5gU6M.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=72e45b590f58007ecd5fb022ca913606345eb3e1\" alt=\"How I used sqlc to manage a persistent game world database for my MMO tutorial series\" title=\"How I used sqlc to manage a persistent game world database for my MMO tutorial series\" /> </a> </td><td> <!-- SC_OFF --><div class=\"md\"><p>This is part #5 of my tutorial series showing how to make an MMO from scratch using Go and the Godot game engine. This one is particularly interesting because it goes through how to set up a database using sqlc and handwritten queries. This lesson, along with all the others, also comes in a written format on my website: <a href=\"https://www.tbat.me/projects/godot-golang-mmo-tutorial-series\">https://www.tbat.me/projects/godot-golang-mmo-tutorial-series</a></p> <p>Hope this is interesting or useful to some people!</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Saltytaro_\"> /u/Saltytaro_ </a> <br/> <span><a href=\"https://youtu.be/M__viodzggc?si=vVqgZoYakqBYGQZQ\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hp553o/how_i_used_sqlc_to_manage_a_persistent_game_world/\">[comments]</a></span> </td></tr></table>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Visualizing memory layout of Rust's data types","url":"https://www.reddit.com/r/rust/comments/1hp3xjm/visualizing_memory_layout_of_rusts_data_types/","date":1735501283,"author":"/u/EventHelixCom","unread":true,"content":"&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/EventHelixCom\"> /u/EventHelixCom </a> <br/> <span><a href=\"https://youtu.be/7_o-YRxf_cc?si=6__TBBF1wcln_JOJ\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/rust/comments/1hp3xjm/visualizing_memory_layout_of_rusts_data_types/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"The Zombocom Problem","url":"https://newsletter.squishy.computer/p/the-zombocom-problem","date":1735500602,"author":"headalgorithm","unread":true,"content":"\n<p>Article URL: <a href=\"https://newsletter.squishy.computer/p/the-zombocom-problem\">https://newsletter.squishy.computer/p/the-zombocom-problem</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42542280\">https://news.ycombinator.com/item?id=42542280</a></p>\n<p>Points: 231</p>\n<p># Comments: 68</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Television 0.8.0","url":"https://www.reddit.com/r/linux/comments/1hp2iy4/television_080/","date":1735497561,"author":"/u/damien__f1","unread":true,"content":"&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/damien__f1\"> /u/damien__f1 </a> <br/> <span><a href=\"https://i.redd.it/py7hnt911u9e1.png\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/linux/comments/1hp2iy4/television_080/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"How to use SOPS with GitOps?","url":"https://www.reddit.com/r/kubernetes/comments/1hp20m1/how_to_use_sops_with_gitops/","date":1735496218,"author":"/u/Bl4rc","unread":true,"content":"<!-- SC_OFF --><div class=\"md\"><p>I&#39;ve explored various tools aimed at integrating SOPS with GitOps workflows, such as:</p> <ul> <li><a href=\"https://github.com/viaduct-ai/kustomize-sops\">ksops</a></li> <li><a href=\"https://github.com/jkroepke/helm-secrets\">helm-secrets</a></li> <li><a href=\"https://fluxcd.io/flux/guides/mozilla-sops/#gitops-workflow\">flux</a> (which has built-in support for SOPS)</li> <li><a href=\"https://github.com/helmfile/helmfile\">helmfile</a></li> </ul> <p>While these are all great tools, none fully meet my needs. One of the things I love about SOPS is its simplicity: as long as I have the necessary private key, I can clone a repo and immediately access all the values used for deploying an application.</p> <h1>My Challenge</h1> <p>I frequently switch between deploying applications with Helm charts and using Kustomize. This is because some applications provide well-maintained Helm charts, while others only offer plain YAML manifests.</p> <p>Here’s where things get tricky:</p> <ol> <li><strong>For Helm charts</strong>: I’d like to encrypt the <code>values.yaml</code> file.</li> <li><strong>For plain YAML manifests</strong>: I prefer to use Kustomize and encrypt specific resources, like secrets, where needed.</li> </ol> <h1>Existing Solutions</h1> <ul> <li><strong>Helm-secrets</strong> works well for encrypting <code>values.yaml</code> files in Helm charts.</li> <li><strong>Ksops</strong> can handle encryption for Kustomize, but it requires enabling a feature flag and has uncertain long-term support, as Kustomize isn’t fully committed to supporting this use case.</li> </ul> <h1>What I’m Looking For</h1> <p>I need a solution that seamlessly integrates SOPS encryption into a workflow that supports both Helm and Kustomize. It should allow me to manage encrypted resources with minimal friction, regardless of whether I&#39;m dealing with Helm charts or plain YAMLs.</p> <p>Additionally, I’m looking for a solution that integrates well with GitOps tools like <strong>Argo CD</strong> and/or <strong>Flux</strong>. Ideally, it would simplify handling SOPS-encrypted resources within these platforms without requiring too many custom workarounds.</p> <p>Does anyone have a better approach, or know of a tool or workflow that bridges this gap?</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Bl4rc\"> /u/Bl4rc </a> <br/> <span><a href=\"https://www.reddit.com/r/kubernetes/comments/1hp20m1/how_to_use_sops_with_gitops/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/kubernetes/comments/1hp20m1/how_to_use_sops_with_gitops/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"'International Obfuscated C Code Contest' Will Relaunch, Celebrating 40th Anniversary","url":"https://developers.slashdot.org/story/24/12/29/1730224/international-obfuscated-c-code-contest-will-relaunch-celebrating-40th-anniversary?utm_source=rss1.0mainlinkanon&utm_medium=feed","date":1735493640,"author":"EditorDavid","unread":true,"content":"After a four-year hiatus, 2025 will see the return of the International Obfuscated C Code Contest. Started in 1984 (and inspired partly by a bug in the classic Bourne shell), it's \"the Internet's oldest contest,\" acording to their official social media account on Mastodon. \n\nThe contest enters its \"pending\" state today at 2024-12-29 23:58 UTC &mdash; meaning an opening date for submissions has been officially scheduled (for January 31st) as well as a closing date roughly eight weeks later on April 1st, 2025. That's according to the newly-released (proposed and tentative) rules and guidelines, listing contest goals like \"show the importance of programming style, in an ironic way\" and \"stress C compilers with unusual code.\" And the contest's home page adds an additional goal: \"to have fun with C!\" \n\nExcerpts from the official rules:\n\n\nRule 0 \nJust as C starts at 0, so the IOCCC starts at rule 0. :-) \n\nRule 1 \nYour submission must be a complete program.... \n\nRule 5 \nYour submission MUST not modify the content or filename of any part of your original submission including, but not limited to prog.c, the Makefile (that we create from your how to build instructions), as well as any data files you submit.... \n\n\nRule 6 \nI am not a rule, I am a free(void *human); \n while (!(ioccc(rule(you(are(number(6)))))) {\n ha_ha_ha();\n } \n\n \nRule 6 is clearly a reference to The Prisoner... (Some other rules are even sillier...) And the guidelines include their own jokes:\n You are in a maze of twisty guidelines, all different. \n\nThere are at least zero judges who think that Fideism has little or nothing to do with the IOCCC judging process.... \n\n\nWe suggest that you avoid trying for the 'smallest self-replicating' source. The smallest, a zero byte entry, won in 1994.\n \n\nAnd this weekend there was also a second announcement:\n\nAfter a 4 year effort by a number of people, with over 6168+ commits, the Great Fork Merge has been completed and the Official IOCCC web site has been updated! A significant number of improvements has been made to the IOCCC winning entries. A number of fixes and improvements involve the ability of reasonable modern Unix/Linux systems to be able to compile and even run them. \n\nThanks to long-time Slashdot reader &mdash; and C programmer &mdash; achowe for sharing the news.<p><div class=\"share_submission\" style=\"position:relative;\">\n<a class=\"slashpop\" href=\"http://twitter.com/home?status='International+Obfuscated+C+Code+Contest'+Will+Relaunch%2C+Celebrating+40th+Anniversary%3A+https%3A%2F%2Fdevelopers.slashdot.org%2Fstory%2F24%2F12%2F29%2F1730224%2F%3Futm_source%3Dtwitter%26utm_medium%3Dtwitter\"><img src=\"https://a.fsdn.com/sd/twitter_icon_large.png\"></a>\n<a class=\"slashpop\" href=\"http://www.facebook.com/sharer.php?u=https%3A%2F%2Fdevelopers.slashdot.org%2Fstory%2F24%2F12%2F29%2F1730224%2Finternational-obfuscated-c-code-contest-will-relaunch-celebrating-40th-anniversary%3Futm_source%3Dslashdot%26utm_medium%3Dfacebook\"><img src=\"https://a.fsdn.com/sd/facebook_icon_large.png\"></a>\n\n\n\n</div></p><p><a href=\"https://developers.slashdot.org/story/24/12/29/1730224/international-obfuscated-c-code-contest-will-relaunch-celebrating-40th-anniversary?utm_source=rss1.0moreanon&amp;utm_medium=feed\">Read more of this story</a> at Slashdot.</p>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Python in 2024: Faster, More Powerful, and More Popular Than Ever","url":"https://developers.slashdot.org/story/24/12/29/0534253/python-in-2024-faster-more-powerful-and-more-popular-than-ever?utm_source=rss1.0mainlinkanon&utm_medium=feed","date":1735461240,"author":"EditorDavid","unread":true,"content":"\"Over the course of 2024, Python has proven again and again why it's one of the most popular, useful, and promising programming languages out there,\" writes InfoWorld:\n\nThe latest version of the language pushes the envelope further for speed and power, sheds many of Python's most decrepit elements, and broadens its appeal with developers worldwide. Here's a look back at the year in Python. \n\nIn the biggest news of the year, the core Python development team took a major step toward overcoming one of Python's longstanding drawbacks: the Global Interpreter Lock or \"GIL,\" a mechanism for managing interpreter state. The GIL prevents data corruption across threads in Python programs, but it comes at the cost of making threads nearly useless for CPU-bound work. Over the years, various attempts to remove the GIL ended in tears, as they made single-threaded Python programs drastically slower. But the most recent no-GIL project goes a long way toward fixing that issue &mdash; enough that it's been made available for regular users to try out. \n\nThe no-GIL or \"free-threaded\" builds are still considered experimental, so they shouldn't be deployed in production yet. The Python team wants to alleviate as much of the single-threaded performance impact as possible, along with any other concerns, before giving the no-GIL builds the full green light. It's also entirely possible these builds may never make it to full-blown production-ready status, but the early signs are encouraging. \nAnother forward-looking feature introduced in Python 3.13 is the experimental just-in-time compiler or JIT. It expands on previous efforts to speed up the interpreter by generating machine code for certain operations at runtime. Right now, the speedup doesn't amount to much (maybe 5% for most programs), but future versions of Python will expand the JIT's functionality where it yields real-world payoffs.\n \nPython is now more widely used than JavaScript on GitHub (thanks partly to its role in AI and data science code).<p><div class=\"share_submission\" style=\"position:relative;\">\n<a class=\"slashpop\" href=\"http://twitter.com/home?status=Python+in+2024%3A+Faster%2C+More+Powerful%2C+and+More+Popular+Than+Ever%3A+https%3A%2F%2Fdevelopers.slashdot.org%2Fstory%2F24%2F12%2F29%2F0534253%2F%3Futm_source%3Dtwitter%26utm_medium%3Dtwitter\"><img src=\"https://a.fsdn.com/sd/twitter_icon_large.png\"></a>\n<a class=\"slashpop\" href=\"http://www.facebook.com/sharer.php?u=https%3A%2F%2Fdevelopers.slashdot.org%2Fstory%2F24%2F12%2F29%2F0534253%2Fpython-in-2024-faster-more-powerful-and-more-popular-than-ever%3Futm_source%3Dslashdot%26utm_medium%3Dfacebook\"><img src=\"https://a.fsdn.com/sd/facebook_icon_large.png\"></a>\n\n\n\n</div></p><p><a href=\"https://developers.slashdot.org/story/24/12/29/0534253/python-in-2024-faster-more-powerful-and-more-popular-than-ever?utm_source=rss1.0moreanon&amp;utm_medium=feed\">Read more of this story</a> at Slashdot.</p>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Fish 4.0: The Fish of Theseus","url":"https://fishshell.com/blog/rustport/","date":1735423635,"author":"jdxcode","unread":true,"content":"\n<p>Article URL: <a href=\"https://fishshell.com/blog/rustport/\">https://fishshell.com/blog/rustport/</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42535217\">https://news.ycombinator.com/item?id=42535217</a></p>\n<p>Points: 847</p>\n<p># Comments: 187</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Show HN: Anki AI Utils","url":"https://github.com/thiswillbeyourgithub/AnkiAIUtils","date":1735421434,"author":"Ey7NFZ3P0nzAe","unread":true,"content":"\n<p>Hi hn, I am nearly at the end of medical school so it is time I publish and \"advertise\" my open source scripts/apps for anki! Here's the pitch:<p><i>Anki AI Utils</i> is a suite of AI-powered tools designed to automatically improve cards you find challenging. Whether you're studying medicine, languages, or any complex subject, these tools can:<p>- <i>Explain</i> difficult concepts with clear, ChatGPT-generated explanations.<p>- <i>Illustrate</i> key ideas using Dall-E or Stable Diffusion-generated images.<p>- <i>Create mnemonics</i> tailored to your memory style, including support for the Major System.<p>- <i>Reformulate</i> poorly worded cards for clarity and better retention.<p><i>Key Features:</i><p>- <i>Adaptive Learning:</i> Uses semantic similarity to match cards with relevant examples.<p>- <i>Personalized Memory Hooks:</i> Builds on your existing mnemonics for stronger recall.<p>- <i>Automation Ready:</i> Run scripts daily to enhance cards you struggled with.<p>- <i>Universal Compatibility:</i> Works across all Anki clients (Windows, Mac, Linux, Android, iOS).<p><i>Example:</i><p>For a flashcard about febrile seizures, Anki AI Utils can:<p>- Generate a <i>Dall-E illustration</i> of a toddler holding a teacup next to a fireplace.<p>- Create <i>mnemonics</i> like \"A child stumbles near the fire, dances symmetrically, has one strike, and fewer than three fires.\"<p>- Provide an <i>explanation</i> of why febrile seizures occur and their diagnostic criteria.<p><i>Call for Contributors:</i><p>This project is battle-tested but needs help to become a polished Anki addon. If you’re a developer or enthusiast, join us to make these tools more accessible!<p><i>Check out my other projects on GitHub:</i> [Anki AI Utils](<a href=\"https://github.com/thiswillbeyourgithub\">https://github.com/thiswillbeyourgithub</a>)<p>Transform your Anki experience with AI—because learning should be smarter, not harder.</p>\n<hr>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42534931\">https://news.ycombinator.com/item?id=42534931</a></p>\n<p>Points: 237</p>\n<p># Comments: 35</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Apple Photos phones home on iOS 18 and macOS 15","url":"https://lapcatsoftware.com/articles/2024/12/3.html","date":1735413750,"author":"latexr","unread":true,"content":"\n<p>Article URL: <a href=\"https://lapcatsoftware.com/articles/2024/12/3.html\">https://lapcatsoftware.com/articles/2024/12/3.html</a></p>\n<p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=42533685\">https://news.ycombinator.com/item?id=42533685</a></p>\n<p>Points: 1249</p>\n<p># Comments: 928</p>\n","flags":null,"enclosureUrl":"","enclosureMime":""}]}