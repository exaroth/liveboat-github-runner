{"id":"USgKoryE83j5SszZjyr68sh7DjLn4j6MWUagcNjQES7kQ1n2HXebXN4bJpBn8stf6LqSMrbny1unc4R1hi6qmf","title":"top scoring links : golang","displayTitle":"Reddit - Go","url":"https://www.reddit.com/r/golang/top/.rss?sort=top&t=day&limit=6","feedLink":"https://www.reddit.com/r/golang/top/?sort=top&t=day&limit=6","is_query":false,"items":[{"title":"What are some good open source Golang websites?","url":"https://www.reddit.com/r/golang/comments/1hpnpja/what_are_some_good_open_source_golang_websites/","date":1735566937,"author":"/u/GrandAd5084","unread":true,"content":"<!-- SC_OFF --><div class=\"md\"><p>I&#39;m a beginner in web development and first I did some web development with javascript as backend language but now I am switching to go for backend.</p> <p>I want to know some industry standards to follow while writing go code in web development.</p> <p>Can anyone suggest me some good open source Golang websites code, so I can understand how it is used in web development.</p> <p>Any help is appreciatedðŸ™Œ</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/GrandAd5084\"> /u/GrandAd5084 </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1hpnpja/what_are_some_good_open_source_golang_websites/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hpnpja/what_are_some_good_open_source_golang_websites/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"My implementation of Redis in Golang","url":"https://www.reddit.com/r/golang/comments/1hpnp9p/my_implementation_of_redis_in_golang/","date":1735566914,"author":"/u/KingBig9811","unread":true,"content":"<!-- SC_OFF --><div class=\"md\"><p>I am made my own Redis server in Golang including my own RESP and RDB parser. It supports features like replication, persistence. I am still new to backend and Golang so i want feedback about anything that comes to your mind, be it code structuring or optimizations. <a href=\"https://github.com/vansh845\">https://github.com/vansh845</a></p> <p>Thank you.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/KingBig9811\"> /u/KingBig9811 </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1hpnp9p/my_implementation_of_redis_in_golang/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hpnp9p/my_implementation_of_redis_in_golang/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"What to expect from Go 1.24 - Part 1","url":"https://www.reddit.com/r/golang/comments/1hpl65g/what_to_expect_from_go_124_part_1/","date":1735557619,"author":"/u/ByteVoyagerX","unread":true,"content":"<table> <tr><td> <a href=\"https://www.reddit.com/r/golang/comments/1hpl65g/what_to_expect_from_go_124_part_1/\"> <img src=\"https://external-preview.redd.it/yrzVGKSr3TTZHEGj9EQwywT7t_WxsbNLK1NbqQBGqoY.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=940ad608ba263b9081c040d6f5b267f3d60b03de\" alt=\"What to expect from Go 1.24 - Part 1\" title=\"What to expect from Go 1.24 - Part 1\" /> </a> </td><td> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/ByteVoyagerX\"> /u/ByteVoyagerX </a> <br/> <span><a href=\"https://golangnugget.com/p/what-to-expect-from-go-1-24-part-1\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hpl65g/what_to_expect_from_go_124_part_1/\">[comments]</a></span> </td></tr></table>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Lightweight blogging package?","url":"https://www.reddit.com/r/golang/comments/1hpa218/lightweight_blogging_package/","date":1735517799,"author":"/u/bio_risk","unread":true,"content":"<!-- SC_OFF --><div class=\"md\"><p>Has anyone written (or come across) a lightweight blogging platform written in Go? Desired features (descending priority order):</p> <ul> <li><p>renders markdown files</p></li> <li><p>provides simple navigation</p></li> <li><p>uses LetsEncrypt</p></li> </ul> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/bio_risk\"> /u/bio_risk </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1hpa218/lightweight_blogging_package/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hpa218/lightweight_blogging_package/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"How I used sqlc to manage a persistent game world database for my MMO tutorial series","url":"https://www.reddit.com/r/golang/comments/1hp553o/how_i_used_sqlc_to_manage_a_persistent_game_world/","date":1735504522,"author":"/u/Saltytaro_","unread":true,"content":"<table> <tr><td> <a href=\"https://www.reddit.com/r/golang/comments/1hp553o/how_i_used_sqlc_to_manage_a_persistent_game_world/\"> <img src=\"https://external-preview.redd.it/Q8ilY9i8bG4uowqfFVk5WqQ8UlR62dYS1tLc-k5gU6M.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=72e45b590f58007ecd5fb022ca913606345eb3e1\" alt=\"How I used sqlc to manage a persistent game world database for my MMO tutorial series\" title=\"How I used sqlc to manage a persistent game world database for my MMO tutorial series\" /> </a> </td><td> <!-- SC_OFF --><div class=\"md\"><p>This is part #5 of my tutorial series showing how to make an MMO from scratch using Go and the Godot game engine. This one is particularly interesting because it goes through how to set up a database using sqlc and handwritten queries. This lesson, along with all the others, also comes in a written format on my website: <a href=\"https://www.tbat.me/projects/godot-golang-mmo-tutorial-series\">https://www.tbat.me/projects/godot-golang-mmo-tutorial-series</a></p> <p>Hope this is interesting or useful to some people!</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Saltytaro_\"> /u/Saltytaro_ </a> <br/> <span><a href=\"https://youtu.be/M__viodzggc?si=vVqgZoYakqBYGQZQ\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hp553o/how_i_used_sqlc_to_manage_a_persistent_game_world/\">[comments]</a></span> </td></tr></table>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Building git in golang","url":"https://www.reddit.com/r/golang/comments/1hp11ua/building_git_in_golang/","date":1735493717,"author":"/u/Zealousideal_Law7447","unread":true,"content":"<!-- SC_OFF --><div class=\"md\"><p>I am currently a PHP developer trying to take my first steps into Golang. After spening a couple of days solving some easy problems to get used to the go syntax I felt that I needed to build some sort of project to dig deeper into the language and to face the problems that algorithtm related coding exercises were not providing me.</p> <p>Something that I always wanted to do is to build my own version of git (yep, I am aware that this is quite a common project and that there is lots of implementations on the internet that I could check), in a couple of hours I was able to assemble a quite basic version of the project, some of the basic data structures, branches, checkout... Initially I was trying to mimic the architecture that I use in my php projects (something in the lines of src/service, src/entity) so basically I creted a service package and an entity package to start, but giving it a second look I was quite unhappy about my architecture, as every time that i needed an entity i would need to import the whole entity package, which did not feel nice.</p> <p>I dediced to stop coding an to take some time to research what are the architectural standards for git projects and how devs structure their code. I am well aware after my read that there is no standard in golang, but again, the aim of my project is to get a good grasp of how things should work when building a more complex project.</p> <p>My next attempt was to follow the coding standards recommended at <a href=\"https://github.com/golang-standards\">https://github.com/golang-standards</a> -- so i went from trying to do something like this:</p> <p>.<br/> .<br/> â””â”€â”€ gogit/<br/> â”œâ”€â”€ bin<br/> â”œâ”€â”€ cmd<br/> â”œâ”€â”€ internal/<br/> â”‚ â”œâ”€â”€ entity/<br/> â”‚ â”‚ â”œâ”€â”€ BranchEntity<br/> â”‚ â”‚ â”œâ”€â”€ CommitEntity<br/> â”‚ â”‚ â””â”€â”€ RepositoryEntity<br/> â”‚ â””â”€â”€ factory/<br/> â”‚ â”œâ”€â”€ BranchFactory<br/> â”‚ â”œâ”€â”€ RepositoryFactory<br/> â”‚ â””â”€â”€ CommitFactory<br/> â””â”€â”€ tests/<br/> â””â”€â”€ whatever_my_tests_are</p> <p>to something in the lines of this:</p> <p>.<br/> â””â”€â”€ gogit/<br/> â”œâ”€â”€ bin<br/> â”œâ”€â”€ cmd<br/> â”œâ”€â”€ internal/<br/> â”‚ â”œâ”€â”€ branch/<br/> â”‚ â”‚ â”œâ”€â”€ BranchEntity<br/> â”‚ â”‚ â””â”€â”€ BranchFactory<br/> â”‚ â”œâ”€â”€ commit/<br/> â”‚ â”‚ â”œâ”€â”€ CommitEntity<br/> â”‚ â”‚ â””â”€â”€ CommitFactory<br/> â”‚ â””â”€â”€ repository/<br/> â”‚ â”œâ”€â”€ RepositoryEntity<br/> â”‚ â””â”€â”€ RepositoryFactory<br/> â””â”€â”€ tests/<br/> â””â”€â”€ whatever_my_tests_are</p> <p>I think I am kind of missing out on something in the golang paradigm, not sure whether i should be creating factories anymore as this not OOP nor whether i should have separate classes for my &quot;entities&quot; trying to emulate what would happen in OOP in PHP. On top of that, this architecture has some cyclic dependency problems as, for instance, the CommitFactory in the commit package needs to have access to the branch package, while the branchService neeeds to have access to the commit entity to add a commit to the branch. What is my architectural problem?</p> <p>I would appreciate some guidance in this new adventure from some fellow golang devs :)</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Zealousideal_Law7447\"> /u/Zealousideal_Law7447 </a> <br/> <span><a href=\"https://www.reddit.com/r/golang/comments/1hp11ua/building_git_in_golang/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/golang/comments/1hp11ua/building_git_in_golang/\">[comments]</a></span>","flags":null,"enclosureUrl":"","enclosureMime":""}]}