{"id":"USgKoryE83j5SszZjyr68sh7DjLn4j6MWUagcNjQES7kQ1n2HXebXN4bJpBn8stf6LqSMrbny1unc4R1hi6qmf","title":"top scoring links : golang","displayTitle":"Reddit - Go","url":"https://www.reddit.com/r/golang/top/.rss?sort=top&t=day&limit=6","feedLink":"https://www.reddit.com/r/golang/top/?sort=top&t=day&limit=6","isQuery":false,"isEmpty":false,"isHidden":false,"itemCount":6,"items":[{"title":"How did you go about \"Writing an interpreter in Go\" (The book)","url":"https://www.reddit.com/r/golang/comments/1iau5os/how_did_you_go_about_writing_an_interpreter_in_go/","date":1737935210,"author":"/u/PeachKnight96","guid":376,"unread":true,"content":"<p>Did anyone here finish this book?</p><p>The author says we should follow along the book and type the code in our machine but I really don't understand this way of teaching. What am I learning if I only type this into my machine?</p>","contentLength":221,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"MoxyProxy, an Atreugo(fasthttp) proxy with web interface","url":"https://www.reddit.com/r/golang/comments/1iasbf8/moxyproxy_an_atreugofasthttp_proxy_with_web/","date":1737930237,"author":"/u/ShotgunPayDay","guid":374,"unread":true,"content":"<p>I wanted to make a proxy that was as easy as possible to configure with functionality that I've always wanted. Here is the list of features from the README:</p><ul><li>Built with Atreugo (fasthttp).</li><li>Simple Web Interface (html/template, HTMX, Surreal, BulmaCSS), hijacks /moxyproxy route</li><li>ACME autocert using TLS-ALPN-01. Activates upon setting DomainName and restarting application.</li><li>Automatically upgrade http:// to https:// when DomainName is set.</li><li>Wireguard Server automatic update/restart upon peer changes.</li><li>Wireguard Peer config generation through HTTPS GET /moxyproxy/wg with dedicated Token and new Peer Name.</li><li>Serve static assets from /moxyproxy/public and /moxyproxy/private (OAuth2 protected)</li><li>Built in OAuth2 to block non-logged in users and send JSON user data to upstream servers using \"moxyuser\" header.</li><li>User data is not stored in the proxy and is instead sent to client in compressed ZSTD then encrypted AES256/GCM cookie.</li><li>Built in RateLimiter that will return 429 Too Many Requests on any request.</li><li>Automatic IP banning (403 Forbidden) on 4xx Response which counts against the IPs LimiterBanCount for the day this includes responses from upstream servers: <ul><li>401 Unauthorized 5x penalty</li><li>400 Any other 400 1x penalty</li></ul></li><li>Minimal configuration needed to get started.</li></ul><p>It's still a work in progress and currently being used for my website and services.</p><p>Not production ready and there will probably be breaking changes. I still need to figure out a testing strategy and benchmarking to do fine tuning. I'd like to test HTTPS to HTTP with wireguard with a net/http server serving HTML which means using VPSs to test the round trip without it breaking the bank. Synthetic tests aren't going to show any real world performance.</p><p>Screenshots are in the README.</p>","contentLength":1726,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Someone has submitted my project on AUR.","url":"https://aur.archlinux.org/packages/bunster","date":1737905019,"author":"/u/yassinebenaid","guid":378,"unread":true,"content":"","contentLength":0,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://www.reddit.com/r/golang/comments/1iah7j9/someone_has_submitted_my_project_on_aur/"},{"title":"SQLC - migrating existing queries to a new schema","url":"https://www.reddit.com/r/golang/comments/1iaglnn/sqlc_migrating_existing_queries_to_a_new_schema/","date":1737903573,"author":"/u/Sliczzz","guid":373,"unread":true,"content":"<p>I've been happily using SQLC with Postgresql as an engine to enjoy type safe SQL in a project I've recently been working on. By now the application is quite mature and I have quite some queries (13 tables, 10-15 query files, 50-100 queries).</p><p>Now my application is evolving and I want to build another module, which needs its own separate schema. I could go all the way and split the application in two and have two databases, but for now a modular monolith with separate schemas will do just fine.</p><p>The problem I now have is that those queries/tables assume the schema being used is `public`. Now, I'd like to split my queries into 2 schemas (`game` and `lobby`), but from what I understand the only way to achieve this is to migrate every single query (and corresponding golang imports) to the new schema manually.</p><p>Is there a way to specify the schema context in which the queries are running and being generated without impacting the existing codebase too much (like, having to change all existing imports because the postgres schema changed)?</p>","contentLength":1041,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"sortedmap â€“ sorted map implementation for Go with a heap and iterators under the hood","url":"https://www.reddit.com/r/golang/comments/1iaeqla/sortedmap_sorted_map_implementation_for_go_with_a/","date":1737898681,"author":"/u/egregors","guid":375,"unread":true,"content":"<p>Check this out: a generic map that maintains order (by keys or values). To be honest, I was surprised not to find something like this in the current state of things. Perhaps it solves too specific problems, idk. But anyway, here is my implementation: <a href=\"https://github.com/egregors/sortedmap\">sortedmap</a>. I believe it could be useful for someone.</p><p>The constructor expects a custom  function to define the ordering rule. To maintain order, I use a generic heap of key-value pairs with an  insert time complexity. The map access API is mostly inspired by standard library  and .</p><p>The only thing I donâ€™t really like is the  method. In the current implementation, it requires a full scan of the heap to find the key-value pair to remove. Iâ€™ll probably find a more efficient way to handle this, but for now, in real-world use cases, it doesnâ€™t seem like a major issue.</p><p><strong>Why do I need a sorted map?</strong></p><p>Quite simple: I need a recursive category tree that can be edited at runtime and must always remain ordered.</p>","contentLength":957,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"New to Go: Built a Google Chat App with 150k Users â€“ Looking for Feedback on My Code","url":"https://www.reddit.com/r/golang/comments/1ia9k9g/new_to_go_built_a_google_chat_app_with_150k_users/","date":1737880750,"author":"/u/dyaskur","guid":377,"unread":true,"content":"<p>Iâ€™m still relatively new to Go. Previously, I worked with PHP, JavaScript/TypeScript, and Python. I started learning Go by building a Google Chat app. My main focus was to make the app functional rather than strictly following best practices like clean code, as I had very limited time to develop it.</p><p>The app is now released and has grown to 150k users! Initially, it only used the Google Translate API for translations. At the time, I assumed the free quota would be sufficient. However, the appâ€™s users quickly exceeded my expectations. In the first month alone, my billing increased by a staggering  due to the heavy google translate API usage.</p><p>To address this, I switched to using  via  (where I have a subscription), as itâ€™s more cost-effective. The app still uses Google Translate API as a fallback when Straico returns invalid or error responses.</p><p>Now, I want to add some new features to the app. But before that, Iâ€™m focusing on refactoring the existing code to improve its structure and maintainability. Iâ€™ve created a PR for this:<a href=\"https://github.com/dyaskur/google-chat-translator/pull/1\">https://github.com/dyaskur/google-chat-translator/pull/1</a> Iâ€™d love to get feedback or a review on my PR from experienced Go developers. Any advice or suggestions would be greatly appreciated!</p><p>To be honest, Iâ€™m struggling with creating  and  in Go. Iâ€™m still in the process of learning how to do it effectively. If anyone has good references or resources on these topics, Iâ€™d be grateful for the guidance!</p><p>Thank you all in advance, and Iâ€™m looking forward to your feedback! ðŸ˜Š</p>","contentLength":1530,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null}],"tags":["dev"]}