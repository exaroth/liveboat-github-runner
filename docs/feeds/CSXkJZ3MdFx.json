{"id":"CSXkJZ3MdFx","title":"Dev News","displayTitle":"Dev News","url":"","feedLink":"","isQuery":true,"isEmpty":false,"isHidden":false,"itemCount":51,"items":[{"title":"The missing cross-platform OS API for timers","url":"https://gaultier.github.io/blog/the_missing_cross_platform_os_api_for_timers.html","date":1738562790,"author":"/u/broken_broken_","guid":322,"unread":true,"content":"","contentLength":0,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://www.reddit.com/r/programming/comments/1igik53/the_missing_crossplatform_os_api_for_timers/"},{"title":"Resistance to Rust abstractions for DMA mapping [LWN.net]","url":"https://lwn.net/SubscriberLink/1006805/f75d238e25728afe/","date":1738552078,"author":"/u/OptimalFa","guid":330,"unread":true,"content":"<blockquote><table><tbody><tr><td><p>\nThe following subscription-only content has been made available to you \nby an LWN subscriber.  Thousands of subscribers depend on LWN for the \nbest news from the Linux and free software communities.  If you enjoy this \narticle, please consider <a href=\"https://lwn.net/subscribe/\">subscribing to LWN</a>.  Thank you\nfor visiting LWN.net!\n</p></td></tr></tbody></table></blockquote><div>\n           By January 30, 2025\n           </div>\nWhile the path toward the ability to write device drivers in Rust has been\nanything but smooth, steady progress has been made and that goal is close\nto being achieved — for some types of drivers at least.  Device drivers\nneed to be able to set up memory areas for direct memory access (DMA)\ntransfers, though; that means Rust drivers will need a set of\nabstractions to interface with the kernel's DMA-mapping subsystem.  Those\nabstractions have run into resistance that has the potential to block\nprogress on the Rust-for-Linux project as a whole.\n<p>\nDMA transfers move data directly between RAM and the device of interest,\nwithout involving the CPU.  It is difficult to get any sort of reasonable\nI/O performance without DMA, so almost all devices support it.  Making DMA\nwork, though, is not just a matter of handing a memory address to a\nperipheral device; there are many concerns that must be dealt with.  These\ninclude maintaining cache coherency, ensuring that pages are resident in\nRAM, handling device-specific addressing limitations, programming I/O\nmemory-management units, and more.  Plus, of course, every architecture\ndoes things differently.  The DMA-mapping layer exists to hide most of\nthese problems from device drivers behind an architecture-independent\ninterface.\n</p><p>\nDrivers written in Rust will need to do DMA, so they will need access to\nthe mapping layer.  There have been patches to provide some of that access\nin circulation for some time; Abdiel Janulgue posted <a href=\"https://lwn.net/ml/all/20250108122825.136021-1-abdiel.janulgue@gmail.com\">a version\nof this work</a> in early January.  This series adds a small Rust module\nwith sufficient support to set up coherent mappings (long-term mappings in\ncache-coherent memory) for drivers.  This work only covers part of the DMA\nAPI, but it is sufficient for simpler devices.  Upcoming drivers will\nrequire that these abstractions are in place.\n</p><p>\nBut Christoph Hellwig, who does a lot of work with the DMA-mapping layer,\n<a href=\"https://lwn.net/ml/all/20250108135951.GA18074@lst.de\">turned this submission\naway</a> with a message reading, in its entirety: \"<q>No rust code in\nkernel/dma, please</q>\" (despite the fact that the patch did not put any\ncode in that directory).  When pressed, he <a href=\"https://lwn.net/ml/all/20250108151858.GB24499@lst.de\">added</a> that developers\nshould keep these abstractions in their own code and <a href=\"https://lwn.net/ml/all/20250110083955.GA5395@lst.de\">said</a> that he had no\ninterest in maintaining multi-language code.  Rust developers should keep\ntheir wrapping code to themselves, he concluded.\n</p><p>\nDanilo Krummrich <a href=\"https://lwn.net/ml/all/Z4D5a5NYrAbNxUL6@pollux\">pointed out</a>\nthat the proposed abstractions were doing exactly that — keeping the Rust\ncode separate from the rest: \"<q>We wrote a single piece of Rust code that\nabstracts the C API for all Rust drivers, which we offer to maintain\nourselves</q>\".  The conversation then went quiet for several days, after\nwhich Krummrich <a href=\"https://lwn.net/ml/all/Z4kG5AcVeQKegLnb@pollux\">said</a>:\n\"<q>Since there hasn't been a reply so far, I assume that we're good with\nmaintaining the DMA Rust abstractions separately</q>\".\n</p><p>\nHellwig, though, <a href=\"https://lwn.net/ml/all/20250128092334.GA28548@lst.de\">made it\nclear</a> that he is not on board with that plan.  He does not want the\nRust code anywhere near the DMA layer, and that fact that somebody else\nwould be maintaining it does not change his view.  Adding another language\n(he was clear that he was talking about any language, not Rust in\nparticular) would, he said, make Linux as a whole \"\".  That has, for now, brought the conversation to a halt.\n</p><p>\nWithout DMA support, there can be no interesting drivers written in Rust.\nSo one option that the Rust-for-Linux developers have at this point is to\ngive up on the whole thing and find a less frustrating project to work on.\nAs appealing as this option might be, it still is probably not their\nfirst choice, though.\n</p><p>\nAn alternative would be to do what Hellwig is suggesting and put the\nabstractions into each driver that needs them.  That, however, is not a\npath toward a more maintainable kernel.  When the DMA API changes, as it\ninevitably will, numerous drivers will have to be fixed, one by one, rather\nthan fixing a single set of abstractions that are used by all.  So this,\ntoo, might not appear at the top of the list of options as seen by the\ndevelopers involved.\n</p><p>\nYet another approach might be to stash the DMA abstractions somewhere out\nof Hellwig's immediate sight — not in the  directory, in\nother words.  At that point it becomes just another user of the DMA API\nthat, in theory, is not subject to more scrutiny than any other driver.\nThe only problem with this idea is that Janulgue's patch already does that,\nand it was not sufficient.\n</p><p>\nSomeday, there will need to be a more decisive answer to this\nquestion.  Krummrich has tried to bring this about with <a href=\"https://lwn.net/ml/all/Z5qeoqRZKjiR1YAD@pollux\">a note</a> asking for Linus Torvalds\nor Greg Kroah-Hartman to make a decision regarding these abstractions.\nOther Rust developers have <a href=\"https://lwn.net/ml/all/293df3d54bad446e8fd527f204c6dc301354e340.camel@mailbox.org\">reiterated</a>\nthat they would take responsibility for the maintenance of this code, and\nthat it would not affect the DMA subsystem.  Jason Gunthorpe <a href=\"https://lwn.net/ml/all/20250130154646.GA2298732@nvidia.com\">questioned</a> that last\nclaim, noting that a 6.14 pull request was delayed due to a Rust build\nproblem, but Kroah-Hartman <a href=\"https://lwn.net/ml/all/2025013030-gummy-cosmic-7927@gregkh\">answered</a> that it was\n\"<q>a tooling issue that people missed due to the holidays</q>\" rather than\nan example of Rust code holding up development.  Neither he nor Torvalds\nhas made any decrees on whether the code in question will be merged, though.\n</p><p>\n\nBy allowing the entry of Rust, the kernel community has decided\n— on a provisional basis, at least — that it is indeed willing to maintain\na multi-language code base.  Perhaps, for now, the desire to banish Rust\ncode to the periphery of the kernel makes some sense, while Rust is still\nseen as an ongoing experiment.  If it is eventually decided that the Rust\nexperiment has failed, backing the existing Rust code out will be easier if\nit's confined to the edges.\n</p><p>\nBut it seems increasingly unlikely that the Rust experiment will be judged\nthat way.  Rust clearly can be used to write kernel code, and there would\nappear to be some significant advantages to doing that.  If the experiment\nhas indeed succeeded then, at some point, the language will need to be\ntreated as a first-class citizen within the kernel.  Over time, \"I don't\nwant to deal with more than one language\" will be an increasingly weak\nargument against a contribution written in Rust.\n</p><p>\nThat day may be a while in coming yet.  Already overworked kernel\nmaintainers will have to find time to learn Rust well enough to manage it\nwithin their subsystems.  Incoming Rust developers can shoulder some of\nthat burden, but they too will need time to acquire anywhere near the level of\nexperience that the current maintainers have — experience that the kernel\ncommunity depends on heavily.  A change of this magnitude to a body of code\nas large as the kernel was never going to be a quick or easy affair; it has\ngone as well as could have been expected so far, but there will be more,\nperhaps harder, obstacles to overcome in the future.</p>","contentLength":7052,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://www.reddit.com/r/rust/comments/1igfeja/resistance_to_rust_abstractions_for_dma_mapping/"},{"title":"The perfect splash.png for PXE bootloader!","url":"https://www.reddit.com/r/linux/comments/1igenct/the_perfect_splashpng_for_pxe_bootloader/","date":1738549754,"author":"/u/ed_mercer","guid":319,"unread":true,"content":"","contentLength":0,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Convincing Arguments for Go","url":"https://www.reddit.com/r/golang/comments/1ige21s/convincing_arguments_for_go/","date":1738547937,"author":"/u/ktoks","guid":306,"unread":true,"content":"<p>Hey all. I have a meeting coming up with mid-level managers. This meeting has been a long time coming, I've been pushing for it for years and I think I've finally gotten through to at least one of them. Wether he's onboard 100% or not is yet to be seen </p><p>Short explanation of the situation: we're an old enterprise company, old code, old dependencies, old developers, old managers, and a (mostly) old mindset, except when it comes to security. We have used mainly Perl in the past, but a few devs are starting to use Python more.</p><p>I'm trying to get them to add Go as a development option.</p><blockquote><p>Perl is 🤮 and Python doesn't quite cut it sometimes need shorter processing times types would reduce bugs I see on the reg strict error handling to reduce missed errors current parallel processing is costly</p></blockquote><p>Reasons I think they would care:</p><blockquote><p>less bugs than other compiled languages faster processing than current languages type safety parallelism baked in dead simple syntax and readability backward compatibility is better than most great community support lower cost and less server load</p></blockquote><p>One additional problem is that most folks think Go is for web, I've made arguments against that. The top reason is true even for Rust because most of my division isn't computer science and would be unable to understand Rust(I write in Rust too).</p><p>I need to flesh out some of these arguments and probably could add a few more, can you help me out?</p>","contentLength":1416,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Introducing deep research","url":"https://openai.com/index/introducing-deep-research/","date":1738541170,"author":"mfiguiere","guid":183,"unread":true,"content":"","contentLength":0,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://news.ycombinator.com/item?id=42913251"},{"title":"GarminDB","url":"https://github.com/tcgoetz/GarminDB","date":1738535274,"author":"haltcatchfire","guid":182,"unread":true,"content":"","contentLength":0,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://news.ycombinator.com/item?id=42912515"},{"title":"F-strings for C++26 proposal [pdf]","url":"https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2024/p3412r0.pdf","date":1738534750,"author":"HeliumHydride","guid":181,"unread":true,"content":"","contentLength":0,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://news.ycombinator.com/item?id=42912438"},{"title":"Emergence of a second law of thermodynamics in isolated quantum systems","url":"https://journals.aps.org/prxquantum/abstract/10.1103/PRXQuantum.6.010309","date":1738534530,"author":"westurner","guid":180,"unread":true,"content":"","contentLength":0,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://news.ycombinator.com/item?id=42912412"},{"title":"Steam breaks Go runtime","url":"https://steamcommunity.com/discussions/forum/0/595138100650327297/","date":1738532966,"author":"/u/TopAd8219","guid":309,"unread":true,"content":"<!DOCTYPE html>","contentLength":0,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://www.reddit.com/r/golang/comments/1ig8q28/steam_breaks_go_runtime/"},{"title":"Praise for John Arundels books.","url":"https://bitfieldconsulting.com/books","date":1738532695,"author":"/u/ThatGuyWB03","guid":307,"unread":true,"content":"","contentLength":0,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://www.reddit.com/r/golang/comments/1ig8maj/praise_for_john_arundels_books/"},{"title":"Costa Rican supermarket wins trademark battle against Nintendo","url":"https://ticotimes.net/2025/01/30/david-vs-goliath-costa-rican-super-mario-defeats-nintendo-in-court","date":1738530468,"author":"type0","guid":179,"unread":true,"content":"","contentLength":0,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://news.ycombinator.com/item?id=42911842"},{"title":"Flathub adds “We Love Games” section with games, emulators, and launchers","url":"https://osna.social/@razze/113936280189606079","date":1738530463,"author":"/u/BrageFuglseth","guid":318,"unread":true,"content":"","contentLength":0,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://www.reddit.com/r/linux/comments/1ig7qo2/flathub_adds_we_love_games_section_with_games/"},{"title":"How to learn Kubernetes in 3 days","url":"https://www.reddit.com/r/kubernetes/comments/1ig7iuk/how_to_learn_kubernetes_in_3_days/","date":1738529940,"author":"/u/Traditional_Cap1587","guid":311,"unread":true,"content":"<p>I have worked with Kubernetes but not extensively. I have a decent understanding of all the theory and have some hands on exposure but haven't done anything complex like deploying Microservices. Any recommendations on how to get my hands dirty with deploying Microservices apps on AWS EKS? </p>","contentLength":290,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Should We Sing the Praises of Agile, or Bury It?","url":"https://it.slashdot.org/story/25/02/02/1948240/should-we-sing-the-praises-of-agile-or-bury-it?utm_source=rss1.0mainlinkanon&utm_medium=feed","date":1738528440,"author":"EditorDavid","guid":242,"unread":true,"content":"\"Stakeholders must be included\" throughout an agile project \"to ensure the evolving deliverables meet their expectations,\" according to an article this week in Communications of the ACM. \n\nBut long-time Slashdot reader theodp complains it's a \"gushing how-to-make-Agile-even-better opinion piece.\"\n\nLike other pieces by Agile advocates, it's long on accolades for Agile, but short on hard evidence justifying why exactly Agile project management \"has emerged as a critical component for firms looking to improve project delivery speed and flexibility\" and the use of Agile approaches is being expanded across other departments beyond software development. Indeed, among the three examples of success offered in the piece to \"highlight the effectiveness of agile methods in navigating complex stakeholder dynamics and achieving project success\" is Atlassian's use of agile practices to market and develop its products, many of which are coincidentally designed to support Agile practices and teams (including Jira). How meta. \n\nCiting \"recent studies,\" the piece concludes its call for stakeholder engagement by noting that \"59% of organizations measure Agile success by customer or user satisfaction.\" But that is one of those metrics that can create perverse incentives. Empirical studies of user satisfaction and engagement have been published since the 1970's, and sadly one of the cruel lessons learned from them is that the easiest path to having satisfied users is to avoid working on difficult problems. Keep that in mind when you ponder why difficult user stories seem to languish forever in the Kanban and Scrum Board \"Ice Box\" column, while the \"Complete\" column is filled with low-hanging fruit. Sometimes success does come easy! So, are you in the Agile-is-Heaven or Agile-is-Hell camp?","contentLength":1798,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Facebook Admits Linux-Post Crackdown Was 'In Error', Fixes Moderation Error","url":"https://tech.slashdot.org/story/25/02/02/1837253/facebook-admits-linux-post-crackdown-was-in-error-fixes-moderation-error?utm_source=rss1.0mainlinkanon&utm_medium=feed","date":1738524840,"author":"EditorDavid","guid":241,"unread":true,"content":"Tom's Hardware reports:\n\nFacebook's heavy-handed censorship of Linux groups and topics was \"in error,\" the social media juggernaut has admitted. Responding to reports earlier this week, sparked by the curious censorship of the eminently wholesome DistroWatch, Facebook contacted PCMag to say that it had made a mistake and that the underlying issue had been rectified. \n\n\"This enforcement was in error and has since been addressed. Discussions of Linux are allowed on our services,\" said a Meta rep to PCMag. That is the full extent of the statement reproduced by the source... Copenhagen-hosted DistroWatch says it has appealed against the Community Standards-triggered ban shortly after it noticed it was in effect (January 19). PCMag received the Facebook admission of error on January 28. The latest statement from DistroWatch, which now prefers posting on Mastodon, indicates that Facebook has lifted the DistroWatch links ban. \n\n\nMore details from PCMag:\n\nMeta didn't say what caused the crackdown in the first place. But the company has been revamping some of its content moderation and plans to replace its fact-checking methodology with a user-driven Community Notes, similar to X. \"We're also going to change how we enforce our policies to reduce the kind of mistakes that account for the vast majority of the censorship on our platforms,\" the company said earlier this month, in another irony. \n\"Up until now, we have been using automated systems to scan for all policy violations, but this has resulted in too many mistakes and too much content being censored that shouldn't have been,\" Meta added in the same post.\n","contentLength":1628,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Waydroid – Android in a Linux container","url":"https://waydro.id/","date":1738524585,"author":"birdculture","guid":178,"unread":true,"content":"<p> We have started creating a few fully-integrated distros in order to demonstrate some of the possibilities that Waydroid can help achieve.  Each of the distros we produce will also showcase some of the work from our growing community of contributors. <p> Our initial alpha releases of this integration started with Ubuntu 20.04 (focal) and is now on Ubuntu 22.04 (jammy) as well as Debian 12 (bookworm), and includes many added tools and scripts to help open up what is possible. </p></p>","contentLength":477,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://news.ycombinator.com/item?id=42911042"},{"title":"What Okta Bcrypt incident can teach us about designing better APIs","url":"https://n0rdy.foo/posts/20250121/okta-bcrypt-lessons-for-better-apis/","date":1738523735,"author":"/u/_n0rdy_","guid":327,"unread":true,"content":"<p>Hello there! If you follow tech news, you might have heard about the <a href=\"https://trust.okta.com/security-advisories/okta-ad-ldap-delegated-authentication-username/\" target=\"_blank\">Okta security incident</a> that was reported on 1st of November. The TLDR of the incident was this:</p><blockquote><p>The Bcrypt algorithm was used to generate the cache key where we hash a  combined string of userId + username + password. Under a specific set of conditions, listed below, this could allow users to authenticate by  providing the username with the stored cache key of a previous  successful authentication.</p></blockquote><p>This means that if the user had a username above 52 chars, any password would suffice to log in. Also, if the username is, let’s say, 50 chars long, it means that the bad actor needs to guess only 3 first chars to get in, which is quite a trivial task for the computers these days. Too bad, isn’t it?</p><p>On the other hand, such long usernames are not very usual, which I agree with. However, some companies like using the entire name of the employee as the email address. So, let’s say, Albus Percival Wulfric Brian Dumbledore, a headmaster of Hogwarts, should be concerned, as  is 55 chars. Ooops!</p><p>This was possible due to the nature of Bcrypt hashing algorithm that has a maximum supported input length of 72 characters (read more <a href=\"https://en.wikipedia.org/wiki/Bcrypt#Maximum_password_length\" target=\"_blank\">here</a>), so in Okta case the characters above the limit were ignored while computing the hash, and therefore, not used in the comparison operation. We can reverse engineer that:</p><ul><li> - user id with separators if any</li><li>this way, the password will be outside the 72 chars limit, and, therefore, ignored by the Bcrypt algorithm</li></ul><p>However, there was one thing that made me wonder: if there is a known limit of the algorithm, why is it not enforced by the crypto libraries as a form of input validation? A simple <code>if input length &gt; 72 -&gt; return error</code> will do the trick. I assumed that they might have used some custom library for Bcrypt implementation and simply forgotten about the input validation, which can happen. So, I decided to check how other programming languages behave.</p><p>Let’s start with Go, and implement the Okta incident-like case with the help of the official <code>golang.org/x/crypto/bcrypt</code> library:</p><div><pre tabindex=\"0\"><code data-lang=\"go\"></code></pre></div><p>All the code samples can be found <a href=\"https://github.com/n0rdy/n0rdy-blog-code-samples/tree/main/20250122-bcrypt-api\" target=\"_blank\">here</a></p><ul><li>generates 18-chars long userId</li><li>generates 55-chars long username</li><li>concatenates them with each other and a dummy password <code>super-duper-secure-password</code> with the use of  as a separator</li><li>computes Bcrypt hash from the concatenated string</li><li>then concatenates the same userId and username with a different password </li><li>uses bcrypt API to compare whether the 2nd concatenated string matches the hash of the 1st one</li></ul><p>Let’s run the code and see the result:</p><div><pre tabindex=\"0\"><code data-lang=\"plain\"></code></pre></div><p>Good job, Go! If we check the source code of the <code>bcrypt.GenerateFromPassword(...)</code> function, we’ll see this piece of code at the very beginning:</p><div><pre tabindex=\"0\"><code data-lang=\"go\"></code></pre></div><p>Perfect! At this point, I became even more suspicious about the tool Okta used, as it seemed like the industry figured that out based on this example. Spoiler alert: it’s not that simple.</p><p><em>Btw, if you like my blog and don’t want to miss out on new posts, consider subscribing to my newsletter <a href=\"https://mail.n0rdy.foo/subscription/form\" target=\"_blank\">here</a>. You’ll receive an email once I publish a new post.</em></p><p>Java doesn’t support Bcrypt from its core API, but my simple Google search showed that Spring Security library has implemented it. For those who are not into Java ecosystem, Spring is the most used and battle-tested frameworks out there, that has libraries for almost anything: Web, DBs, Cloud, Security, AI, etc. Pretty powerful tool, that I’ve used a lot in the past, and still sometimes use for my side projects.</p><p>So, I added the latest version of Spring Security to the project and reproduced the same scenario, as in Go example above:</p><div><pre tabindex=\"0\"><code data-lang=\"java\"></code></pre></div><p>I ran the code, and to my great surprise, saw this outcome:</p><p>I took a peak at the implementation code, and was disappointed: even though there are a bunch of checks on salt:</p><pre tabindex=\"0\"><code>if (saltLength &lt; 28) {\n\tthrow new IllegalArgumentException(\"Invalid salt\");\n}\n...\nif (salt.charAt(0) != '$' || salt.charAt(1) != '2') {\n\tthrow new IllegalArgumentException(\"Invalid salt version\");\n}\n...\nminor = salt.charAt(2);\nif ((minor != 'a' &amp;&amp; minor != 'x' &amp;&amp; minor != 'y' &amp;&amp; minor != 'b') || salt.charAt(3) != '$') {\n\tthrow new IllegalArgumentException(\"Invalid salt revision\");\n}\n...\n</code></pre><p>I didn’t see any validation of the input that will be hashed. Hm…</p><p>I decided to check other Google results, and the next Java library in the list was  from Patrick Favre (<a href=\"https://github.com/patrickfav/bcrypt\" target=\"_blank\">link to GitHub repo</a>) with 513 starts and the last release version 0.10.2 (so, not stable) from 12th of February 2023 (almost 2 years old). This suggested that I’d not use it in production, but why not to run our tests.</p><h3>Bcrypt from Patrick Favre</h3><div><pre tabindex=\"0\"><code data-lang=\"java\"></code></pre></div><div><pre tabindex=\"0\"><code data-lang=\"plain\"></code></pre></div><p>Nice, good job, Patrick, you saved the day for Java!</p><p>After checking the source code, I found this piece:</p><div><pre tabindex=\"0\"><code data-lang=\"java\"></code></pre></div><p>and the strict strategy that threw the exception we’ve seen:</p><div><pre tabindex=\"0\"><code data-lang=\"java\"></code></pre></div><p>We can see that this strict strategy is used as a part of the default configs:</p><div><pre tabindex=\"0\"><code data-lang=\"java\"></code></pre></div><p>Let’s switch to JavaScript.</p><p>Here I used the <a href=\"https://www.npmjs.com/package/bcryptjs\" target=\"_blank\">bcryptjs</a> which has over 2 million weekly downloads based on the NPM stats.</p><div><pre tabindex=\"0\"><code data-lang=\"javascript\"></code></pre></div><p>Not great. The source code reveals that similar to Spring Security, the library validates the salt</p><div><pre tabindex=\"0\"><code data-lang=\"javascript\"></code></pre></div><p>but not the input length.</p><p>Let’s try if Python can do any better.</p><p>Using <a href=\"https://github.com/pyca/bcrypt\" target=\"_blank\">bcrypt</a> library with 1.3k starts and the latest release in November.</p><div><pre tabindex=\"0\"><code data-lang=\"python\"></code></pre></div><p>The result is same as we observed for most of our test subjects:</p><p>All right, but what about some newer and more safety-oriented language - let’s try Rust.</p><p>Here I need to be honest: since I’m not a Rust expert at all, I used a help of a Claude AI to write this code. So, if you see any issues there, please, let me know in the comments section, so I can fix that.</p><p>As a library, I used <a href=\"https://github.com/Keats/rust-bcrypt\" target=\"_blank\">rust-bcrypt</a> based on my AI friend advice.</p><div><pre tabindex=\"0\"><code data-lang=\"rust\"></code></pre></div><p>I can see the validation of the cost:</p><div><pre tabindex=\"0\"><code data-lang=\"rust\"></code></pre></div><p>but not of the input. And here is the place where the explicit truncation of 72 chars happens (the comment is from the library source code):</p><div><pre tabindex=\"0\"><code data-lang=\"rust\"></code></pre></div><p>That was my first question after seeing that the majority of the tools follow the pattern that leads to the vulnerability. <a href=\"https://en.wikipedia.org/wiki/Bcrypt\" target=\"_blank\">Wikipedia article about Bcrypt</a> gave a hint:</p><blockquote><p>Many implementations of bcrypt truncate the password to the first 72 bytes, following the OpenBSD implementation</p></blockquote><p>Interesting! Let’s check the OpenBSD implementation of this algorithm, and <a href=\"https://github.com/openbsd/src/blob/master/lib/libc/crypt/bcrypt.c\" target=\"_blank\">here is the link</a> to it. The first point of interest lies here:</p><div><pre tabindex=\"0\"><code data-lang=\"c\"></code></pre></div><p>And from that moment on,  is used as a limit to iterate over the input string within, for example:</p><div><pre tabindex=\"0\"><code data-lang=\"c\"></code></pre></div><p>Where  is passed as a  parameter. So this piece of code:</p><p>will make sure that no chars over the limit (72) will end up being processed.</p><p>Git blame shows that the  line is 11 years old</p><p>while the <code>if (j &gt;= databytes) j = 0;</code> is 28 years old (what were you busy with in 1997, ah?)</p><p>So, it’s been a while since the API has been reiterated.</p><p>Let me start with a short disclaimer: I have a huge respect for people who spend their free time and mental capacity on maintaining open-source projects. That’s a large amount of work, that is not paid, and, unfortunately, quite often not appreciated by the users of the tools. That’s why they have all the legal and ethical rights to build the project the way they see them. My opinions below are not targeted towards anyone in particular.</p><p>My initial goal was to create issues for each of the mentioned library, but I noticed that this behavior has been already reported to each of them:</p><p>Check the discussions and their outcomes by following those links.</p><p>As a guy who spent a few years of my career on building tools and solutions to be used by other software engineers, I understand the frustration: you invested your time and effort into writing a clear documentation and guides, but a certain number of your users don’t bother checking it at all, and just use the tool the way they think it should be used. However, that’s the reality that I had to accept and started thinking about how can I make my tools handle those use cases. Here are a few principles I came up with in that process.</p><h4>Don’t let the people use your API incorrectly</h4><p>In my opinion, from the API perspective, the approach when the tool silently cuts the part of the input and processes the remaining one only, it is an extremely poor design choice. What makes things worse is the fact that Bcrypt is used in the domain of security and sensitive data, and, as we can see, most of the tools mentioned above, use  as the name of the input parameter of the hashing method. <strong>The good design should explicitly reject the invalid input</strong> with the error / exception / any other mechanism the platform uses. So, basically, exactly what Go and Patrick’s Java library did. This way, incidents like Okta one would be impossible by design (btw, I’m not shifting the blame away from Okta, considering the domain they operate in).</p><p>It is ok, though, to offer the non-default unsafe option, that will let the users pass longer input that will be truncated if the user explicitly asks for that. A prefix/suffix like , , etc. can be a good addition to the names of the method that expose these options.</p><p>If we take a step back from the Bcrypt case, imagine other examples, if such a pattern becomes common in the industry:</p><ul><li>We created a new user account on HBO to watch a new season of Rick and Morty, and there is a warning that the max size of the password should not exceed 18 chars. However, the password generator of your password manager tool uses 25 chars as a default length of the produced password. So, the password manager inserts that password while creating an account, but the server cuts the last 7 chars, hashes the rest, and saves the hash to the DB. How easy would it be for us to be able to log in to HBO next time and watch a new episode?</li><li>The tech lead of the new project configured a linter tool, and set the max line length as 100 chars. While performing a check, linter removes the chars above the defined limit, and informs that the check has passed. How useful would it be?</li></ul><p>A good API design should remember that when it comes to tech, nobody likes surprises.</p><p>While following a few online discussions about the Bcrypt Okta incident, I noticed something else: while the majority of comments agreed that we should design APIs like these better, there were a few folks that took a very defensive stance and exposed their ego: “Read a paper before using anything!”, “APIs are only correcting the input after the stupid users!”, etc. Based on my experience, ego is a big enemy of engineering. And I wouldn’t be surprised if you have a story or two in that regard as well. So, yeah, let’s not bring our egos to our APIs.</p><p>Don’t get me wrong, I do understand the gist that the users should have some basic knowledge before using any tool. But let’s get back to the reality: how many different tools, programming languages, databases, protocols, frameworks, libraries, algorithms, data structures, clouds, AI models, etc. does a software engineer use per week these days? I tried to count for my use case, but stopped after the number had reached 30. Is it possible to know all of them deep? To know all the edge cases and limits? For some of them and to some degree is a reasonable ask, as well as having an expertise in 1 or 2, but definitely not all. The hard truth is that on average, the industry today requires the wide spectrum of knowledge over the deep one (check any job opening to verify that claim). Therefore, while designing the tools, why not to help our fellow colleagues? For example, if our tool accepts only positive numbers, let’s add <code>if num &lt; 1 -&gt; return error</code>  to our solution, and make the life simpler for somebody out there.</p><p>Especially, if the tool might be used in the security-sensitive context, where humans are usually the weak point in the thread modelling. The good API can help there.</p><p>It’s not so often that the API we design is something completely new to the world. Most likely, there are other solutions like ours out there. And the chances are that they’ve been already doing certain things the particular way. However, that doesn’t mean that we need to follow the same path. Kudos to the Go team and Patrick’s Java library for being brave to do things the different way as the industry does in the Bcrypt example. Let’s learn from them.</p><p>Regardless of the original design choices and intentions, it’s never too late to reiterate on some of them if we see a need or have discovered new information. That’s, actually, a place where a lot of us fail due to different reasons, with some of them listed above.</p><p>The Okta incident exposed large security issues out there. Our test showed, even 3 months after the incident, the industry is still vulnerable to the same outcome, so the chances are that more to come. However, we, as software engineers, can learn from that, and apply these lessons while designing APIs to make them predictable and easier to use.</p><p>I hope that was useful, and triggered some thoughts. Thanks a lot for reading my post, and see you in the following ones, there are plenty of topics to discuss. Have fun! =)</p>","contentLength":12880,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://www.reddit.com/r/programming/comments/1ig50uz/what_okta_bcrypt_incident_can_teach_us_about/"},{"title":"The legacy of lies in Alzheimer's science","url":"https://www.nytimes.com/2025/01/24/opinion/alzheimers-fraud-cure.html","date":1738522810,"author":"apsec112","guid":177,"unread":true,"content":"<p>Medical advances have beaten back many relentless assassins in recent decades, such as cancer and heart disease. A wide range of treatments share credit: surgery, medicines, radiation, genetic therapies and healthful habits. Mortality rates for those two diseases, the top causes of death in the United States, have fallen sharply. But in an aging population, Alzheimer’s death rates have gone in the opposite direction.</p><p>The disease afflicts nearly seven million Americans, about one in every nine people over the age of 65, making it a leading cause of death among older adults. Up to 420,000 adults in the prime of life — including people as young as 30 — suffer from early-onset Alzheimer’s. The annual number of new cases of dementia is expected to double by 2050.</p><p>Yet despite decades of research, no treatment has been created that arrests Alzheimer’s cognitive deterioration, let alone reverses it. That dismal lack of progress is partly because of the infinite complexity of the human brain, which has posed insurmountable challenges so far. Scientists, funders and drug companies have struggled to justify billions in costs and careers pursuing dead-end paths. But there’s another, sinister, factor at play.</p><p>Over the past 25 years, Alzheimer’s research has suffered a litany of ostensible fraud and other misconduct by world-famous researchers and obscure scientists alike, all trying to ascend in a brutally competitive field. During years of investigative reporting, I’ve uncovered many such cases, including several detailed for the first time in <a href=\"https://www.simonandschuster.com/books/Doctored/Charles-Piller/9781668031247\" title=\"\" rel=\"noopener noreferrer\" target=\"_blank\">my forthcoming book</a>.</p>","contentLength":1591,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://news.ycombinator.com/item?id=42910829"},{"title":"GNOME added HDR configuration merge requests","url":"https://gitlab.gnome.org/GNOME/gnome-control-center/-/merge_requests/2991","date":1738521474,"author":"/u/Existing-Code-1318","guid":317,"unread":true,"content":"<!DOCTYPE html>","contentLength":0,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://www.reddit.com/r/linux/comments/1ig43ta/gnome_added_hdr_configuration_merge_requests/"},{"title":"I made the most chaotic Go package ever and somehow got 8 stars? What?","url":"https://www.reddit.com/r/golang/comments/1ig42i3/i_made_the_most_chaotic_go_package_ever_and/","date":1738521387,"author":"/u/a7madx7","guid":310,"unread":true,"content":"<p>Hey everyone, so I did something dumb.</p><p>You know how we all have that \"utils\" package we copy-paste between projects? Well, I took all of mine, threw them in a GitHub repo, and called it . Yeah, really creative name, I know.</p><h2>The mess started like this:</h2><p>I got tired of writing the same error handling and logging stuff over and over. You know the drill: <code>go if err != nil { log.Printf(\"something broke: %v\", err) return nil, err } </code></p><p>So I made some wrappers: ```go // Now it's someone else's problem config := it.Must(LoadConfig())</p><p>// Or if you're scared of panics user := it.Should(GetUser()) ```</p><h2>Then things got out of hand</h2><p>I started adding everything I commonly use: - Rate limiters (because hammering APIs isn't cool) - Pools (because making new objects is expensive) - Math stuff (turns out loops aren't always the answer) - Load balancers (for when one function isn't enough) - Circuit Breaker (whatever that might be) - A Deboucer - A really ( and I mean really ) bad clone of Rust's Result type. - Exponential Retrial stuff. - A benchmarker, a time keeper &amp; a time measuring package. - Did I mention a graceful shutdown manager &amp; a version tracking packge?</p><p>People actually starred the repo. Like, 8 whole stars. That's 8 more than I expected. Either they really like bad ideas or they're as messy as I am.</p><p>\"Well, if people are gonna use this train wreck, might as well make it a TESTED train wreck.\"</p><p>So now it has: - Actually decent test coverage - Documentation (with bad jokes) - Examples that work - More features nobody asked for</p><p>Probably not. But if you do, at least you'll get some laughs from the docs while your code catches fire.</p><p>PS: If this post gets more upvotes than my repo has stars, I'll add whatever stupid feature gets the most upvotes in the comments.</p><p>PS: I hope I made you smile.</p><p>Edit 1: Yes, I know it breaks every Go package design principle. No, I won't fix it. Yes, I'll probably add more stuff.</p><p>Edit 2: WoW, Just WoW, 102+ Stars up till now, I am in loss of words, <a href=\"https://www.reddit.com/r/golang\">r/golang</a> is such a nice community to be part of, thanks guys.</p>","contentLength":2038,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Simple wgpu (24.0.1) + winit (0.30.8) template","url":"https://www.reddit.com/r/rust/comments/1ig3ys7/simple_wgpu_2401_winit_0308_template/","date":1738521130,"author":"/u/Foxicution","guid":328,"unread":true,"content":"<div><p>Recently I decided to try out <a href=\"https://github.com/gfx-rs/wgpu\">wgpu</a> and ran into issues trying to get a basic triangle render working.</p><ol><li>The official examples were very hard to gasp for me, as they contained a lot of abstractions.</li><li>The standalone examples were a lot better, but they didn't contain instructions on how to compile for WebAssembly.</li><li>Other resources were usually outdated and didn't work for the current versions of wgpu and winit.</li></ol><p>Because of this I made myself a <a href=\"https://github.com/Foxicution/wgpu-template\">minimal working example</a> for the current version of winit and wgpu to use as a template for other projects and thought it might be useful to some other people.</p><p>Feedback is highly appreciated, and hope this can help people get into wgpu quicker.</p></div>   submitted by   <a href=\"https://www.reddit.com/user/Foxicution\"> /u/Foxicution </a>","contentLength":712,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"[Media] Flashing own code to e-link price tag only using a pico","url":"https://www.reddit.com/r/rust/comments/1ig37ah/media_flashing_own_code_to_elink_price_tag_only/","date":1738519252,"author":"/u/tracyspacygo","guid":332,"unread":true,"content":"","contentLength":0,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Everyone knows your location: tracking myself down through in-app ads","url":"https://timsh.org/tracking-myself-down-through-in-app-ads/","date":1738516051,"author":"apokryptein","guid":176,"unread":true,"content":"<p>Recently I read about a <a href=\"https://www.404media.co/hackers-claim-massive-breach-of-location-data-giant-threaten-to-leak-data/?ref=timsh.org\" rel=\"noreferrer\">massive geolocation data leak from Gravy Analytics</a>, which exposed more than 2000 apps, both in AppStore and Google Play, that secretly collect geolocation data without user consent. Oftentimes, even without developers` knowledge. </p><p>I looked into the list (<a href=\"https://docs.google.com/spreadsheets/d/1Ukgd0gIWd9gpV6bOx2pcSHsVO6yIUqbjnlM4ewjO6Cs/edit?gid=1257088277&amp;ref=timsh.org#gid=1257088277\" rel=\"noreferrer\">link here</a>) and found at least 3 apps I have installed on my iPhone. Take a look for yourself! This made me come up with an idea to track myself down externally, e.g. to buy my geolocation data leaked by some application. </p><p>After more than couple dozen hours of trying, here are the main takeaways: </p><ol><li>I found a couple requests sent by my phone with + 5 requests that leak , which can be turned into geolocation using reverse DNS. </li><li>Learned a lot about the RTB (real-time bidding) auctions and OpenRTB protocol and was shocked by the amount and types of data sent with the bids to ad exchanges. </li><li>Gave up on the idea to buy my location data from a data broker or a tracking service, because I don't have a big enough company to take a trial or $10-50k to buy a huge database with the data of millions of people + me. Well maybe I do, but such expense seems a bit irrational. <p>Turns out that EU-based peoples` data is almost the most expensive. </p></li></ol><p>But still, I know my location data was collected and I know where to buy it! </p><p>My setup for this research included:</p><ul><li>My old iPhone 11 restored to factory defaults + new apple id. Felt too uncomfortable to do all this on my current phone. </li><li>Charles Proxy to record all traffic coming in and out. I set up the SSL certificate on the iPhone to decrypt all https traffic.</li><li>A simple game called Stack by KetchApp - I remember playing it at school 10-12 years ago. Choosing it as a lab rat felt nostalgic. To my surprise, there were a lot of KetchApp games on the list. </li></ul><p>Ok, here we go: only 1 app installed without the default Apple ones, Charles on, launching Stack in 3, 2, 1.... </p><p>These are the requests that the app sends in the first minute after launch. Take a look at the timing of the requests - almost every split second. </p><p>Let's take a look at the contents of the requests. I actually checked every single one of them - but I'll leave out only the interesting ones here. </p><p>Let's start with the juiciest request sent to <code>https://o.isx.unity3d.com</code> - the first one that included my geo, while I <strong>disabled Location Services</strong> on iPhone for all apps! If you are as naive as I was before this, you might be surprised - what does Unity, the 3D engine, have to do with the in-app advertisement or location tracking? <p>Perhaps that's just some monitoring data to help improve the engine? </p></p><p>Turns out that Unity's main revenue stream (they made $2 bln+ in 2023) is Unity Ads - \"Mobile Game Ad Network\". Sounds quite interesting.</p><p>Below is the request body in json format sent to Unity Ads. I will only leave the  fields worth mentioning - the actual size is 200+ keys. </p><pre><code>{\n  \"ts\": \"2025-01-18T23:27:39Z\", // Timestamp\n  \"c\": \"ES\", // Country code,\n  \"d\": \"sports.bwin.es\", // Domain; the app or website where the ad will be displayed.\n  \"bn\": \"molocoads-eu-banner\", // WTF is moloco ads? We'll see!\n  \"cip\": \"181.41.[redacted]\", // my IP !!\n  \"dm\": \"iPhone12,1\", \n  \"ct\": \"2\", // Connection type; e.g., Wi-Fi\n  \"car\": \"Yoigo\", // mobile network operator\n  \"ifv\": \"6B00D8E5-E37B-4EA0-BB58-[redacted]\", // ID for Vendor. We'll get back to it!\n  \"lon\": \"2.[redacted]\", // Longitude ... \n  \"lat\": \"41.[redacted]\", // Latitude ... \n  \"sip\": \"34.227.224.225\", // Server IP (Amazon AWS in US) \n  \"uc\": \"1\", // User consent for tracking = True; OK what ?!\n}</code></pre><p>Ok, so my IP + location + timestamp + some  id are shared with Unity → Moloco Ads → Bwin, and then I see the actual Bwin ad in the game. Wonderful! </p><div><div>As a quick note - location shared was not very precise (but still in the same postal index), I guess due to the fact that iPhone was connected to WiFi and had no SIM installed. If it was LTE, I bet the lat/lon would be much more precise. </div></div><h3>Hello Facebook... What are you doing here?</h3><p>Next interesting request that leaks my IP + timestamp (= geo-datapoint) is Facebook.What?!</p><ul><li>I don't have any Meta [Facebook] app installed on this iPhone</li><li>I didn't link the app nor my Apple ID to any Facebook account</li><li>I didn't consent to Facebook getting my IP address!</li></ul><pre><code>{ \n\t\"bundles\": {\n\t\t\"bidder_token_info\": {\n\t\t\t\"data\": {\n\t\t\t\t\"bt_extras\": {\n                  \"ip\":\"181.41.[redacted], // nice Extras, bro\n                  \"ts\":1737244649\n\t\t\t},\n\t\t\t\"fingerprint\": null\n\t\t},\n        {\n          \"a lot of data: yes a loooooooot\"\n         }</code></pre><p>We'll talk more about this one in the next section. </p><h3>Why do you need my screen brightness level? </h3><pre><code>{\n  \"osVersion\":\"16.7.1\",\n  \"connectionType\":\"wifi\",\n  \"eventTimeStamp\":1737244651,\n  \"vendorIdentifier\":\"6B00D8E5-E37B-[redacted]\", // ifv once again \n  \"wiredHeadset\":false, // excuse me? \n  \"volume\":0.5,\n  \"cpuCount\":6,\n  \"systemBootTime\":1737215978,\n  \"batteryStatus\":3,\n  \"screenBrightness\":0.34999999403953552,\n  \"freeMemory\":507888,\n  \"totalMemory\":3550640, // is this RAM?\n  \"timeZone\":\"+0100\",\n  \"deviceFreeSpace\":112945148\n  \"networkOperator\":\"6553565535\"\n  \"advertisingTrackingId\":\"00000000-0000....\", // interesting ...\n  }</code></pre><p>There's no \"personal information\" here, but honestly this amount of data shared with an arbitrary list of 3rd parties is scary. Why do they need to know my screen brightness, memory amount, current volume and if I'm wearing headphones? </p><p>I know the \"right\" answer - to help companies target their audience better! For example, if you're promoting a mobile app that is 1 GB of size, and the user only has 500 MB of space left - don't show him the ad, right?</p><p>But I also heard lots of controversies on this topic. Like Uber dynamically adjusting taxi price based on your battery level - because you're not waiting for a cheaper option with 4% left while standing in the street. </p><p>I can't know if that or another one is true. But the fact that this data is available and accessible by advertisers suggests that they should at least think of using it. </p><p>Ok, enough with the requests. We can already see the examples of different ip and geolocation leaks.  + timestamp was adjust.com - but the request body was too boring to include. </p><p>You might've already noticed  and  ==  in the requests above - what are those? </p><p>IFV, or IDFV, is \"ID for Vendor\". This is my id unique for each vendor, a.k.a developer - in this case, KetchApp. <p>This checks out: I installed another KetchApp game to quickly record the requests, and the </p> value was the same for it. </p><p>Advertising Tracking ID, on the other hand, is the cross-vendor value, the one that is shared with an app if you choose \"Allow app to track your activity across ...\". As you can see above, it was actually set to  because I \"Asked app not to track\". </p><p>I checked this by manually disabling and enabling tracking option for the Stack app and comparing requests in both cases. </p><h3><strong>And that's the only difference between allowing and disallowing tracking</strong></h3><p>I understand there might be nothing shocking to you in it - this is not really kept secret, you can go and check the docs for Apple developers, for example. </p><p>But I believe this is  communicated correctly to the end users, you and me, in any adequate way, shape or form: the free apps you install and use <strong>collect your precise location</strong> with timestamp and send it to some 3rd-party companies. </p><p>The only thing that stops anyone with access to bid data (yet another ad buying agent, or ad exchange, or a dataset bought or rented from data broker, as you'll see later) from tracking you down with all trips you make daily is this  that is not shared when you disallow apps to \"track you across apps\" to \"enhance and personalise your ads experience\". </p><p>By the way: if you're using 10 apps from the same vendor (Playrix, KetchApp or another 1000-app company) and allow  to track you – it would mean that the data collected in all 10 apps will be enriched with your IDFA which can later be exchanged to your personal data. </p><p>At the same time, there is so much data in the requests that I'd expect ad exchanges to find some loophole ID that would allow cross-app tracking without the need for IDFA. I found at least 20 ids like  and ,  and  (these 2 are shared with Facebook), and so on. </p><p>By the way, the fact that Facebook collected my IP + timestamp without any adequate consent / app connection from my end is crazy. I think Facebook is more than capable of connecting the dots and my Meta Account to this hit as soon as I login to Instagram or Facebook app on the same IP address. </p><p>Let's get back to the request that leaked my location for a second and look at its trace. We'll focus on the parties in the middle:</p><p>stack<strong> →  o.isx.unity3d.com → molocoads →</strong> bwin (advertiser)</p><p>Unity [ads] is an SSP (supply-side platform) that acts as a collector of data from the app via SDK. As an app developer, you don't need to worry about gathering the right data, registering as a publisher on an ad exchange or whatever - just install the SDK and receive the money. </p><p>Moloco ads is a DSP network that resells data from multiple SSPs (like Unity, Applovin, Chartboost). Basically, from almost every one of the requested hosts I've seen pop up in Charles Proxy.It then applies some \"smart optimisation\" and connects a vacant banner space on your phone screen with the advertiser.</p><p>Sounds like moloco aggregates a lot of data and basically anyone (<em>- any company that becomes an ad partner</em>) can access the data by bidding lower than others. Or imagine a real ad exchange that bids normally and collects all of the data along the way \"as a side gig\". <p>Basically, this is how intelligence companies and data brokers get their data. </p></p><p>At this point I was looking for any mentions of Moloco on Telegram and Reddit, and I ran into this post that answered a lot of my questions:</p><blockquote>They access it if they integrate with the provider of bidstream, which would be the SSP. It's on the SSP to verify the vendor to whom they give access to bids. Usually, the requirement would be that you actually... bid. SSPs want you to spend money, that's how their business makes revenue. They might open up only part of the traffic to specific vendors (i.e.. if you don't bid worldwide, you won't get the bidstream worldwide, only in the regions in which you operate).</blockquote><p>Let's move further. When I found out how the data gets out, I started looking for any place where it's being sold. It was a quick search.</p><p>I found a data marketplace called <a href=\"https://datarade.ai/data-categories/device-graph-data?ref=timsh.org\" rel=\"noreferrer\">Datarade</a> which is a panel with all sorts of data. When I searched for MAID-specific data, hundreds of options showed up, like these two: </p><p>The price of the Redmob dataset surprised me, - $120k a year... for what?Let's now take a look at their promo:</p><p>Check out the list of features on the right - do any of them look familiar? : \"low latency\" means they know your location from the last time any of the apps shared it. It can be as little as 5 seconds ago. What's even better is that Redmob provides a  of the data. </p><p>I tried to request it from their website, but the sample never landed in my mailbox (surprise-surprise, timsh.org doesn't seem like a customer with high potential). Thankfully, this sample is public on <a href=\"https://marketplace.databricks.com/details/caa4c07a-b27e-4876-9c9c-3f3c2bbbc11f/Redmob_SAMPLE-Redmob-MAID-Data-for-Identity-Graph-I-Global-I-15B-Users-RealTime?ref=timsh.org\" rel=\"noreferrer\">Databricks Marketplace</a> with this annotation:</p><blockquote>Enhance your products and services using our global location data covering over 1.5 billion devices. Using our extensive location dataset, you can unearth concealed patterns, conduct rapid analyses, and obtain profound knowledge.<p>We can also provide region-specific data (MENA, Africa, APAC, etc.) based on your specific requirements. Our pricing model includes an annual licensing option, and we provide free sample data so that you can evaluate the quality of our dataset for yourself. </p></blockquote><p>To me, the most absurd part is the  column - the source of the data can't be more obvious. I'm also quite interested in the  column - if it's the birthyear, where did they get it from? Never mind, who cares about your birthyear.</p><p>All right, imagine I bought the access to a huge stream of Redmob data. But my goal is to track and stalk people like myself or anyone else, so I need some way to exchange MAIDs () for the actual personal info: name, address, phone number... </p><p>No problem! This kind of dataset is surprisingly also present on Datarade. Take a look at a sample table with  type that is provided by \"<a href=\"https://www.agrmarketingsolutions.com/data-nuggets/?ref=timsh.org\" rel=\"noreferrer\">AGR Marketing Solutions</a>\":</p><p>Inside - all personal info (full name, email, phone number, physical address, property ownership... and IDFAs. </p><p>Congrats, you have just reached the bottom of this rabbit hole. Let's wrap it up and make a couple of bold statements.</p><h2>How to track yourself down?</h2><p>Easy! Just follow this simple step-by-step guide:</p><ol><li>Use some free apps for a bit. Move around and commute - this makes the geo data more valuable. </li><li>\"Allow\" or \"ask not to track\" - a combo of IP + location + User-agent + geolocation will still be leaked to hundreds of \"3rd parties\" regardless of your choice.</li><li>Wait for a few seconds until fake DSPs and data brokers receive your data.</li><li>Exchange your full name or phone number for an IDFA (if present), IP address and user-agent through the  data purchased somewhere.</li><li>Now, access the \"Mobility data\" consisting of geolocation history, and filter it using the values from the previous step. </li></ol><p>Congratulations! You found yourself. </p><p>I <a href=\"https://excalidraw.com/?ref=timsh.org#json=Ip5AaR-FPppPmtL3AcrBg,-woEvDuI7vER5B7skpT3zA\" rel=\"noreferrer\">created a flowchart</a> that includes almost all actors and data mentioned above - now you can see how it's all connected. </p><p>This is the worst thing about these data trades that happen constantly around the world - each small part of it is (or seems) legit. It's the bigger picture that makes them look ugly. </p><p>Thanks for reading this story until the end!My research was heavily influenced by these posts and investigations: </p>","contentLength":13600,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://news.ycombinator.com/item?id=42909921"},{"title":"DocumentDB: Open-Source MongoDB implementation based on PostgreSQL (from Microsoft)","url":"https://opensource.microsoft.com/blog/2025/01/23/documentdb-open-source-announcement/","date":1738512549,"author":"/u/mariuz","guid":326,"unread":true,"content":"","contentLength":0,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://www.reddit.com/r/programming/comments/1ig0jlp/documentdb_opensource_mongodb_implementation/"},{"title":"How to hide restart count in kubectl get pod command.","url":"https://www.reddit.com/r/kubernetes/comments/1ig0do9/how_to_hide_restart_count_in_kubectl_get_pod/","date":1738512118,"author":"/u/Budget-Agent9524","guid":313,"unread":true,"content":"<div><p>I tried using custom column command but then ready cloumns print true/false instead of 1/1.</p></div>   submitted by   <a href=\"https://www.reddit.com/user/Budget-Agent9524\"> /u/Budget-Agent9524 </a>","contentLength":130,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Ask HN: What is interviewing like now with everyone using AI?","url":"https://news.ycombinator.com/item?id=42909166","date":1738509572,"author":"ramesh31","guid":175,"unread":true,"content":"<div>Have you gone back to in-person whiteboards? More focus on practical problems? I really have no idea how the traditional tech interview is supposed to work now when problems are trivially solvable by GPT.</div>","contentLength":204,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://news.ycombinator.com/item?id=42909166"},{"title":"What is PKCE Flow?","url":"https://www.hemantasundaray.com/blog/pkce-flow","date":1738507682,"author":"/u/sundaray","guid":323,"unread":true,"content":"<p>Proof Key for Code Exchange (PKCE, pronounced \"pixy\") is an extension of the Authorization Code grant type.</p><p>The Authorization Code grant type is used by OAuth 2.0 confidential and public clients to exchange an authorization code for an access token.</p><p>However, OAuth 2.0 public clients using the Authorization Code grant type are susceptible to authorization code interception attacks. This occurs when an attacker intercepts the authorization code within the client's operating system, in communication paths that aren't protected by TLS. The PKCE flow mitigates this security risk.</p><p>The PKCE flow has 5 main steps:</p><h3><a href=\"https://www.hemantasundaray.com/blog/pkce-flow#step-1-client-generates-a-code-verifier-and-a-code-challenge\"></a>Step 1: Client generates a code verifier and a code challenge</h3><p>The client first creates a code verifier.</p><p>A code verifier is a cryptographic random string with a minimum length of 43 characters and maximum length of 128 characters. The code verifier should have high entropy (<em>a high degree of randomness</em>), so that it’s practically impossible for anyone to guess its value.</p><p>The client then derives a code challenge from the code verifier in 3 steps:</p><ol><li>Converts the code verifier string into its byte form.</li><li>Converts the bytes into a fixed-length binary hash using the  algorithm (<em>known as the code challenge method</em>). This conversion is one-way, meaning you can't derive the original code verifier from the hash.</li><li>Converts the binary hash into a string with only URL-safe characters using base64url encoding.</li></ol><h3><a href=\"https://www.hemantasundaray.com/blog/pkce-flow#step-2-client-sends-an-authorization-request\"></a>Step 2: Client sends an Authorization Request</h3><p>The client sends an Authorization Request to the Authorization Server. In the request, it includes two important pieces of information: the code challenge and the code challenge method. The Authorization Server stores both these pieces of information.</p><h3><a href=\"https://www.hemantasundaray.com/blog/pkce-flow#step-3-authorization-server-issues-an-authorization-code\"></a>Step 3: Authorization Server issues an Authorization Code</h3><p>The Authorization Server responds by issuing an authorization code. Note that the server typically stores the code challenge and the code challenge method in an encrypted form in the authorization code itself.</p><h3><a href=\"https://www.hemantasundaray.com/blog/pkce-flow#step-4-client-sends-an-access-token-request\"></a>Step 4: Client sends an Access Token Request</h3><p>The client proceeds to request an access token. This request includes the authorization code and the original code verifier ().</p><h3><a href=\"https://www.hemantasundaray.com/blog/pkce-flow#step-5-authorization-server-issues-an-access-token\"></a>Step 5: Authorization Server issues an Access Token</h3><p>Before issuing an access token, the Authorization Server verifies that the request for access token has come from the same client that made the initial authorization request. This verification happens in two steps:</p><ol><li>The server takes the code verifier and transforms it into a code challenge using the code challenge method it had stored (<em>alongside the original code challenge</em>) in step 1.</li><li>The server then compares this newly generated code challenge with the original code challenge. If they match, proving it's the same client, the server issues an access token.</li></ol><h2><a href=\"https://www.hemantasundaray.com/blog/pkce-flow#how-pkce-flow-prevents-authorization-code-interception-attacks\"></a>How PKCE flow prevents authorization code interception attacks</h2><p>Let's say an attacker intercepts the authorization code. However, the attacker would not be able to exchange the stolen authorization code for an access token, because the attacker wouldn’t have the corresponding code verifier. Note that the code verifier can’t be intercepted by the attacker because it’s sent over TLS.</p><h2><a href=\"https://www.hemantasundaray.com/blog/pkce-flow#important-note-about-pkce\"></a>Important note about PKCE</h2><p>While PKCE was originally designed to secure native applications (<em>applications that are installed directly on a user’s devices such as a smartphone, or desktop and run natively on the operating system</em>), it's now recommended for all types of OAuth clients (<em>including confidential clients like server-side web applications</em>) because it provides strong protection against authorization code interception attacks.</p>","contentLength":3572,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://www.reddit.com/r/programming/comments/1ifyr4z/what_is_pkce_flow/"},{"title":"Void is booting on Apple ARM-powered devices","url":"https://voidlinux.org/news/2025/02/new-images.html","date":1738505356,"author":"/u/daemonpenguin","guid":316,"unread":true,"content":"<h2>Feburary 2025 Image Release: Arm64 Extravaganza</h2><p>We’re pleased to announce that the 20250202 image set has been promoted to\ncurrent and is now generally available.</p><p>This release introduces support for several arm64 UEFI devices:</p><p>Live ISOs for  and  should also support other arm64\ndevices that support UEFI and can run a mainline (standard) kernel.</p><p>Additionally, this image release includes:</p><ul><li>Xfce 4.20 in -flavored live ISOs</li><li>Linux 6.6.69 in Raspberry Pi PLATFORMFSes and images</li><li><a href=\"https://man.voidlinux.org/xgenfstab.1\"></a>, a new script from \nto simplify generation of  for chroot installs</li></ul><p>and the following changes:</p><ul><li>Fixed issue where systems with Nvidia graphics cards would not boot without \n (<a href=\"https://github.com/void-linux/void-packages/pull/52545\">void-packages #52545</a>)</li><li>Raspberry Pi platform images are now smaller by default, but will grow the root partition to fit the storage\n device upon first boot using . See\n <a href=\"https://docs.voidlinux.org/installation/guides/arm-devices/index.html#pre-built-images\">the handbook</a>\n for more details\n (<a href=\"https://github.com/void-linux/void-mklive/pull/379\">void-mklive #379</a>)</li><li> now includes a post-installation menu to enable services on the installed system\n (<a href=\"https://github.com/void-linux/void-mklive/pull/389\">void-mklive #389</a>)</li><li> and  PLATFORMFSes and platform images should now\nsupport the recently-released Raspberry Pi 500 and CM5.</li></ul><p>You may verify the authenticity of the images by following the instructions in\n<a href=\"https://docs.voidlinux.org/installation/index.html#verifying-images\">the handbook</a>,\nand using the following minisign key information:</p><div><div><pre><code>untrusted comment: minisign public key 4D56E70F102AF9F9\nRWT5+SoQD+dWTeOdNuc4Q/jq2+3+jpql7+JJp4WukkxTdpsZlk2EGuPj\n</code></pre></div></div>","contentLength":1321,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://www.reddit.com/r/linux/comments/1ifxyyy/void_is_booting_on_apple_armpowered_devices/"},{"title":"This really doesn't help.","url":"https://www.reddit.com/r/linux/comments/1ifxs7p/this_really_doesnt_help/","date":1738504798,"author":"/u/Separate-Solution801","guid":320,"unread":true,"content":"","contentLength":0,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"I got tired of tracking software versions manually... So I built \"Veno\"","url":"https://www.reddit.com/r/rust/comments/1ifxknr/i_got_tired_of_tracking_software_versions/","date":1738504109,"author":"/u/Marekzan","guid":331,"unread":true,"content":"<p>At work, I deal with multiple software artifacts—repositories, container images, Helm charts. Some of them are critical, and keeping them up to date is non-negotiable. But tracking them manually? That’s a nightmare.</p><p>At first, I tried the usual methods: setting up email notifications, following RSS feeds, even writing a few scripts to scrape version numbers. But each artifact lived in its own ecosystem—some on GitHub, others on DockerHub or ArtifactHub. Some had built-in notification systems, some didn’t. And worst of all, I had no .</p><p>I needed a way to track everything in one place. Not just track, but also get notified in the right way. Some updates needed an email. Others were better suited for a Slack message or a webhook trigger for automation, or all of them (just to be sure ;) ).</p><p>So I built —a simple tool that lets you define  (the things you care about) and attach  (the places you want updates to go). One configuration file, multiple sinks, and no more version-hunting.</p><p>Right now, Veno supports <strong>GitHub, DockerHub, and ArtifactHub</strong> as sources, with notifications via <strong>Email, Webhooks, Google Chat, and Slack</strong>. A CLI version is up and running, and a web service is in the works. Eventually, I want to add <strong>scheduled tracking (daemon mode)</strong> so it runs in the background.</p><p>If you're in the same boat—managing multiple software artifacts and tired of manually checking for updates—Veno might be useful for you. I’d love feedback, feature requests, and contributors! </p><p>Would this be useful for your workflow? Let me know what you'd like to see in a tool like this!</p><p>: I started learning Rust about 6 months ago, so I'd appreciate some feedback about idiomatic Rust and or other tips how to improve! The version checking logic is still kind of janky and the GitHub logic only supports semver currently.<p> I am going to improve upon the version logic in future releases!</p></p>","contentLength":1880,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"I got Linux running in a PDF file via a RISC-V emulator compiled to JS","url":"https://www.reddit.com/r/linux/comments/1ifwpl0/i_got_linux_running_in_a_pdf_file_via_a_riscv/","date":1738501201,"author":"/u/vk6_","guid":321,"unread":true,"content":"","contentLength":0,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Managing Secrets in Docker Compose — A Developer's Guide | Phase Blog","url":"https://phase.dev/blog/docker-compose-secrets/","date":1738501036,"author":"/u/ascendence","guid":325,"unread":true,"content":"<p>It's truly remarkable how much the direction of software engineering is dictated by inertia. Brendan Eich in 1995 designed JavaScript to be a client side scripting language of choice for the Netscape browser, over the years it has evolved to be on the client, server and other technologies like serverless. Similarly, Docker Compose has evolved from a local development tool into a popular choice for deploying applications, even in production environments. While Docker has published guidelines for <a href=\"https://docs.docker.com/compose/how-tos/production/\" rel=\"nofollow\">using Compose in production</a>, one critical aspect often overlooked by users is secure secret management.</p><p>In this guide, we'll explore the best practices for managing secrets in modern Docker Compose deployments and discuss common pitfalls to avoid. We'll progressively build up from basic approaches to more secure configurations.</p><h2>The Problem with Environment Variables</h2><p>Most Docker Compose setups handle secrets in one of two ways: either by hardcoding them directly in the compose file or using a  file:</p><p>While convenient, this approach has several security implications:</p><ol><li>Environment variables are accessible to all processes in a container</li><li>They often appear in logs during debugging</li><li>They can be exposed through application errors</li><li>They make it difficult to maintain separation of concerns between services</li></ol><p>Let's demonstrate why this is problematic. With a basic Postgres container running:</p><p>We can easily inspect all environment variables:</p><p>We can also directly print all environment variables from within the container:</p><p>This exposure of secrets through environment variables has led to numerous security incidents over the years:</p><p>Although the first two examples presume an application misconfiguration and most modern web application frameworks try their best to censor secrets in error logs, this can be a pretty serious issue.</p><p>Let's explore three progressively more secure approaches to managing secrets in Docker Compose.</p><p>First, ensure you're running Docker Compose version 2.30.0 or later for full secrets support:</p><p>Your application should also be configured to read secrets from files rather than environment variables. Here's a pattern we recommend for python, as an example:</p><ul><li>Prioritizes reading secrets from files using the  suffix convention</li><li>Maintains compatibility with environment variables as a fallback</li></ul><ol><li>For a given secret  check if  environment variable containing a file path exists, if yes - read the  secret from the file</li><li>Else, read the secret from the  environment variable</li></ol><h3>Approach 1: Environment Variables - Mount secrets inside your containers based on the values of host environment variables</h3><p>The following implementation uses Docker Compose's secrets feature to read environment variables from the host and mount them as files via a virtual filesystem in each of your services:</p><p>This mounts secrets as read-only virtual filesystem under :</p><ul><li>Easy setup - Simply mount the values of environment variables in memory as a filesystem</li><li>Secrets never written to disk - Secrets remain in memory, reducing attack surface from filesystem access</li><li>Better isolation between services - Each service only receives the secrets provisioned to it</li><li>Read-only mounting - Prevents accidental or malicious corruption of secrets by containers</li></ul><ul><li>Secrets exposed as host environment variables - Secrets must exist as environment variables on the host system - This can be addresses by using runtime secret injection via a secret manager such as <a href=\"https://phase.dev\" rel=\"nofollow\">Phase</a>.</li><li>World-readable within container - Any user, user group or process within the container can read the secrets (addressed in the next section)</li><li>Requires service restart for updates - Changes to secrets require restarting affected services to take effect</li></ul><p>Using things like  on your host system to set secrets as environment can create other unwanted externalities like your secrets getting logged in your shell history. You can use the <a href=\"https://docs.phase.dev/cli/usage#4-run-and-inject-secrets\" rel=\"nofollow\">Phase CLI</a> to to improve the overall secret management workflow by injecting secrets directly inside the docker compose process during runtime. Here's an example:</p><h3>Approach 2: File-Based Secrets - Mount secrets on the host system inside your container</h3><p>The following implementation uses Docker Compose's secrets feature to mount files containing secrets from the host in each of your services:</p><ul><li>Better isolation between services - Each service only receives the secrets provisioned to it</li><li>Dynamic secret updates without restarts - Services can read updated secrets without container restarts</li><li>Inherits host file permissions - Secret files maintain their permission attributes from the host system</li><li>Read-only mounting - Prevents accidental or malicious corruption of secrets by containers</li></ul><ul><li>Secrets written to disk on the host system - Creates potential security risk from filesystem access or backups</li><li>Requires secure file management - Additional operational overhead to secure secret files</li><li>World-readable by default - All users/processes in container can read secrets unless explicitly restricted - Addressed in the next section</li></ul><p>To make creation of secrets on the host system easier and to improve the overall secret management workflow you can use the <a href=\"https://docs.phase.dev/cli/commands#secrets-get\" rel=\"nofollow\">Phase CLI</a>. Here's an example:</p><h3>Controlling access to secrets supplied to your services</h3><p>Now that we have figured out how to supply secrets securely to your services, next let's take a look how at how we can better protect them once provisioned inside our containers:</p><p>Docker Compose supports what they call a 'long syntax' for declaring how secrets are provisioned and controlling their access with more granularity within the respective service's containers.</p><ul><li>: The name of the secret as it exists on the platform.</li><li>: The name of the file to be mounted in /run/secrets/ in the service's task container, or absolute path of the file if an alternate location is required. Defaults to source if not specified.</li><li> and : The numeric UID or GID that owns the file within /run/secrets/ in the service's task containers. Default value is USER running container.</li><li>: The permissions for the file to be mounted in /run/secrets/ in the service's task containers, in octal notation. The default value is world-readable permissions (mode 0444). The writable bit must be ignored if set. The executable bit may be set.</li></ul><p>You can find the  and the  of for a given image by looking at the Dockerfile or if it's your own image add one.</p><p>Here's a postgresql example:</p><ul><li>Restricts secret access to specific users/groups</li><li>Prevents other users from reading secrets</li><li>Maintains write protection</li></ul><p>You can verify the permissions:</p><p>For more information on the Docker Compose secrets long syntax, please see the <a href=\"https://docs.docker.com/reference/compose-file/services/#long-syntax-4\" rel=\"nofollow\">Docker docs</a></p><p>While this is a good start for your docker compose secrets, below are some of the things that you should most consider when dealing with informational fissile materials like secrets:</p><ol><li><p>Keep secrets away from source code, container files and images. Ivory and ebony, AC/AD and secrets and source code and container images; never the two shall meet.</p></li><li><p>Control access to secrets and keep them in sync and up to date with the rest of your team and deployments securely. Please do not add secrets to your git repository, drop your .env files over Slack or add them to your Notion docs as part of getting started with a project.</p></li><li><p>Don't reuse secrets across different environments. Your production database password should never be the same as the  that you are using for local development. Compromise of one will mean de-facto compromise of all.</p></li><li><p>Encrypt secrets at all times, whether they are in flight over a network making they way to your production deployment or waiting in a database patiently to be pulled. <em>\"Dance like no one is watching, but encrypt like everyone is\"</em> - Werner Vogels, Chief Technical Officer Amazon.</p></li><li><p>Keep track of all changes and actions over your secrets. <a href=\"https://www.youtube.com/watch?v=H9DrxT5meE8\" rel=\"nofollow\">It's 4:30 in the morning, do you know where your secrets are?</a> Keep tabs on the who, what, when, and where so you can infer the  if and when there is an incident. Given the outsized number of breaches that occur due to a secret compromise, you will need those audit logs during an investigation.</p></li></ol><p>Some or all of these points may seem obvious to most of you reading this, but what may not be as obvious is how tricky and tedious it can be to follow security best practices without losing development velocity. Consider using open-source secrets management platform like <a href=\"https://phase.dev\" rel=\"nofollow\">Phase</a> which can help streamline the process. We are a bit biased plugging our own solution, but we think you'll find it useful.</p><p>Docker Compose's secret management capabilities have matured significantly, offering features typically found in larger container orchestration systems. While there are still some areas of improvements and limitations around permission enforcement (see <a href=\"https://github.com/docker/compose/issues/12362\" rel=\"nofollow\">docker/compose#12362</a>), the available options provide a solid foundation for securing secrets in both development and smaller production environments.</p>","contentLength":8794,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://www.reddit.com/r/programming/comments/1ifwnz9/managing_secrets_in_docker_compose_a_developers/"},{"title":"Configurature: Simple, flexible, and powerful application configuration for Go.","url":"https://www.reddit.com/r/golang/comments/1ifwa5o/configurature_simple_flexible_and_powerful/","date":1738499587,"author":"/u/PopAdministrative923","guid":305,"unread":true,"content":"<p>Configurature is a Go library that provides declarative app configuration using structs. Configuration values can be specified (in value precedence order) on the command line, using environment variables, and/or in a config file (yaml or json).</p>","contentLength":244,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Was Building Something, But Now Having Self-Doubt","url":"https://www.reddit.com/r/golang/comments/1ifvwi7/was_building_something_but_now_having_selfdoubt/","date":1738498139,"author":"/u/unbeatable697","guid":308,"unread":true,"content":"<p>Initially, I started building a CLI file-sharing platform in Go. I am almost done with the project, with only some CLI and backend parts remaining. However, now I feel like it might not be worth completing since I doubt anyone will use or appreciate it.</p><p>I originally started this project to learn Go, and through it, I have gained experience with CRUD operations and more. Now, I'm in a dilemma—should I complete this project or move on to something else?</p><p>By the way, I’m using GitHub as the storage backend, allowing users to upload files and download them on any PC by providing a name and password.</p><p>also even if I complete it is it worth to add in resume otherwise i dont see any point of making it. as people are not going to use it</p>","contentLength":737,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Lambdas/serverless functions/functions as a service - any opinions?","url":"https://www.reddit.com/r/kubernetes/comments/1ifvqhv/lambdasserverless_functionsfunctions_as_a_service/","date":1738497481,"author":"/u/leeliop","guid":314,"unread":true,"content":"<div><p>If so what did you think? How much friction was there? Is it worth it rather than throwing a bunch of functions into a service and routing the ingress?</p></div>   submitted by   <a href=\"https://www.reddit.com/user/leeliop\"> /u/leeliop </a>","contentLength":181,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Show HN: Lume – OS lightweight CLI for MacOS and Linux VMs on Apple Silicon","url":"https://github.com/trycua/lume","date":1738496782,"author":"sandropuppo","guid":169,"unread":true,"content":"<p>We just open-sourced Lume - a tool we built after hitting walls with existing virtualization options on Apple Silicon. No GUI, no complex stacks - just a single binary that lets you spin up macOS or Linux VMs via CLI or API.</p><p>Why we built Lume:\n- Run native macOS VMs in 1 command, using Apple Virtualization.Framework: `lume run macos-sequoia-vanilla:latest`</p><p>- API server to manage VMs programmatically `POST /lume/vms`</p><p>- A python SDK on github.com/trycua/pylume</p><p>Run prebuilt macOS images in just 1 step:\nlume run macos-sequoia-vanilla:latest</p><p>Local API Server:\n`lume` exposes a local HTTP API server that listens on `<a href=\"http://localhost:3000/lume\" rel=\"nofollow\">http://localhost:3000/lume</a>`, enabling automated management of VMs.</p><p>HN devs - would love raw feedback on the API design and whether this solves your Apple Silicon VM pain points. What would make you replace UTM/Multipass/Docker Desktop with this?</p>","contentLength":856,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://news.ycombinator.com/item?id=42908061"},{"title":"I thought TypeScript's type system was powerful. Until I tried Rust","url":"https://www.reddit.com/r/rust/comments/1ifurb2/i_thought_typescripts_type_system_was_powerful/","date":1738493365,"author":"/u/nikitarevenco","guid":333,"unread":true,"content":"<p>My first language was JavaScript. Then TypeScript. TypeScript caught many bugs which I've experienced with JS, such as spending 2 hours debugging because I accidentally wrote \"false\" instead of false. TypeScript caught these bugs. I was amazed by how \"powerful\" its type system is</p><p>Then I tried Rust. I've been programming in Rust for about 2 months now. </p><p>Rust's type system to TypeScript is like TypeScript's type system to JavaScript. I wouldn't have believed these worlds before Rust. Having a type system which actually co-exists with your code is really, really delightful.</p><p>When a value claims to have some type in TypeScript, you can't be sure that it actually is that type. Any of the 100s of function calls used to derive this value may have used an  assertion, and if this assertion is wrong then the type is invalid. If an invalid type is somewhere deep enough it can spread like the plague, but you won't know.</p><p>TypeScript's type inference compared to Rust's is weaker. This means there are often situations where you're forced to use an  assertion. And that's pretty bad, because now you've introduced an extra chance for incorrect types to be introduces and proliferate in your code</p><p>When people said \"haha using JavaScript on the backend\", I thought TypeScript is the solution. But if you want to be certain your program will work correctly you'll have to be extra careful when using TypeScript, values can claim to be some type while not actually being that type.</p><p>In some sense, using an  assertion is similar to using  in Rust. You're making a promise that your program upholds some invariants that the compiler can't infer itself. And the Rust community places a lot of importance on properly documenting why certain invariants are upheld for  blocks. But  are not treated nearly the same, they're often just used without a second thought. And that's a problem</p><p>Having a strong type system is one of the most important factors about a language, to me at least. Type systems allow you to express the purpose of your program in a way that your code never will.</p><p>I am super grateful to Rust and Haskell for opening my eyes on type systems. I'm also super grateful for all the work done on the TypeScript compiler. While it's far from perfect, I understand it's the way it is and has to be that way. There's not much TS can do since it compiles to the same old JavaScript. TypeScript it is an essential layer of protection on top of your JavaScript. </p><p>But I'm really looking forward to a future where we don't need to use TypeScript anymore, and Rust frameworks such as Dioxus can become popular like Next.js (I can dream...)</p>","contentLength":2623,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Unexpected Benefits of Building Your Own Tools","url":"https://tiniuc.com/make-more-tools/","date":1738492875,"author":"/u/tiniucIx","guid":324,"unread":true,"content":"<ul></ul><p>Recently I've been thinking a lot about some of the tools I've made, and I have found an insight from game development that I think can apply to the software engineering industry as a whole.</p><h2>The origin of the insight</h2><p>I'm <a href=\"https://tiniuc.com/botnet-of-ares/\">working on a hacking simulator, Botnet of Ares</a> and part of the work involves designing and balancing the parameters for the various Exploits that the player can use. For context, these Exploits are kind of equivalent to items in an Role-Playing Game. They have stats similar to \"Damage\", \"Attack Speed\", \"Mana Cost\", except framed in the context of a computer thread performing work - so the rough equivalents in my game would be \"Machine Speed\", \"Loss Wait Time\" &amp; the various \"Per Machine\" costs, respectively.</p><p>This used to be done in a spreadsheet, and the process involved copy-pasting ~10 fields every time I wanted to move something into or out of the game.</p><img src=\"https://tiniuc.com/make-more-tools/exploit-spreadsheet.png\" alt=\"Spreadsheet editor for Botnet of Ares Exploits, with ~10 user input fields and ~10 descriptive &amp; balance related fields.\"><p>At some point I realized that I am spending an eternity staring at spreadsheets and it was just no fun for this sort of task. Furthermore, I was wasting a lot of time copy-pasting things into Godot (the game engine I am using), play-testing, noticing something is wrong, going back to the spreadsheet, editing, copy-pasting again etc. etc. etc.</p><p>So I decided to implement my own editor which can save &amp; load directly using the Godot  format. It's super quick &amp; dirty &amp; not optimized at all, but it's already made the process of creating content for the game much faster.</p><img src=\"https://tiniuc.com/make-more-tools/exploit-editor.png\" alt=\"Exploit Editor for Botnet of Ares. Has similar fields to the Spreadsheet editor, but provides much more information and is significantly faster to work with.\"><p>All this is is a little editor that lets me input stats for the various exploits, shows a bit of info on the right side about its balance, and then outputs a scene file that can be loaded directly into the game.</p><p>What this has made me realize is that <strong>speeding up part of a workflow can provide value far beyond the mere time savings</strong>: it also unlocks new ways of working that were not possible before. For example, with the Exploit Editor I can go over entire lines of devices and balance them in relation to each other. This used to be incredibly tedious to do with the spreadsheet because of all the tedious copy-pasting required to import from the editor. But now, I can edit dozens of scenes and remain in a state of flow throughout.</p><p>The editor has made the creation of these Exploits at least an order of magnitude faster, and has also increased the quality of content I can make by letting me iterate much faster. Not too shabby for ~4 hours of work!</p><h2>Iteration velocity: the insight from game development</h2><p>I was motivated to build the Exploit Editor for Botnet of Ares thanks to a common principle in game development: to design a good game, you must iterate through as many versions of the game as you can, keeping the parts that are fun, getting rid of the ones that are not &amp; improving the game at any step. Essentially, the more iterations of the design you can make, the higher quality your game will be - limited, of course, by your budget.</p><p>I built the Exploit Editor because I could not iterate through various item designs quickly enough, and as a result I now have many more items in the game, and they are all higher quality than they would be without this tool.</p><p>This is a well-known principle in the games development industry - in bigger studios there is often a team dedicated to building &amp; supporting tools &amp; editors for designers &amp; other folks to use. And I think this principle has applications far beyond game development.</p><h2>Application from work - the chilictl utility</h2><p>During my day job I have worked on an utility called \"chilictl.\" It allows one to list embedded devices connected to the PC, see basic information about them &amp; flash a new application.</p><pre><code>$ ./chilictl list\n2020-12-16 12:53:35.897 NOTE:  Cascoda SDK v0.14 Dec 16 2020\nDevice Found:\n        Device: Chili2\n        App: mac-dongle\n        Version: v0.21-71-g49212790\n        Serial No: FBC647CDB300A0DA \n        Path: 0001:0051:00\n        Available: Yes\n        External Flash Chip Available: Yes\n$ ./chilictl flash -s FBC647CDB300A0DA -df \"~/sdk-chili2/bin/ldrom_hid.bin\"\n2020-12-16 12:56:46.510 NOTE:  Cascoda SDK v0.14 Dec 16 2020\nFlasher [FBC647CDB300A0DA]: INIT -&gt; REBOOT\nFlasher [FBC647CDB300A0DA]: REBOOT -&gt; ERASE\nFlasher [FBC647CDB300A0DA]: ERASE -&gt; FLASH\nFlasher [FBC647CDB300A0DA]: FLASH -&gt; VERIFY\nFlasher [FBC647CDB300A0DA]: VERIFY -&gt; VALIDATE\nFlasher [FBC647CDB300A0DA]: VALIDATE -&gt; COMPLETE\n</code></pre><p>All of these things are things you could already do in other ways before the tool was created. For example, you could find the serial number by connecting to the USB debug API &amp; looking for the right . Or you could flash devices by digging through your drawer, getting your JLink programmer out, making sure the flimsy 10-pin JTAG cable hasn't snapped a wire internally like the other 5 you've had to throw out this year, opening the correct programming utility &amp; then finally flashing.</p><p>You can see where I'm going with this. A single utility was created that removes 90% of the tedium. The tool would have been worth it for this reason alone, but now my colleagues have incorporated it in countless workflows. Here are some examples:</p><ul><li>automated Hardware-In-The-Loop nightly test harness that notifies people whenever someone's  broken prod</li><li>modifying serial numbers &amp; security credentials en masse, for tests &amp; development work that requires devices with different identities.</li><li>unit tests for the parts of the code that were prone to bugs &amp; hard to keep an eye on until now</li><li>tests and experiments involving different binaries across dozens of devices</li><li>simply programming the hardware you're working on without having to fiddle with wires</li></ul><p>The crucial insight is that <strong>none of these applications would have been obvious without being able to flash devices an order of magnitude faster</strong>. And  was not designed to be built into these! All of these applications were unlocked once we had experience with the new utility.</p><p>One of the highest returns on investment I've had on workflow automation was the script below. It rebuilds an OpenWRT image from scratch with updated dependencies.</p><pre data-lang=\"bash\"><code data-lang=\"bash\">#!/bin/sh\n./scripts/feeds update -a\n./scripts/feeds install -a\nmake clean\nmake -j12\n# Write logs to file, for debugging\n#make -j12 V=sc -k 2&gt;&amp;1 | tee build_log.txt\ncmatrix -b\n</code></pre><p>Ive lost count of how many times I ran  without first updating the feed I was working on! The call to  at the end plays a Matrix inspired stream of green characters the moment the build finishes. This solves the problem of starting the build, working on something else &amp; not noticing that the build has completed even when it was a rather high priority task!</p><p>Lets say this script took five minutes to write. If it saves one rebuild, <em>it has already paid for itself four times over</em>. It has saved  more time since. Thanks to this script, debugging certain things that used to take a whole day now can be done in just a few hours.</p><p>I think many people could benefit from creating more tools for their own needs. Think of the fraction of your work that you hate the most, and see if there's any way you can remove some of the tedium from it. Even a little bit of automation helps a lot if you are automating a common frustrating task.</p><p>And often, you will find that these tools will let you work in new and surprising ways. Ways in which would not have been obvious had you not built the tool in the first place. This leads not just to building your application faster, but <em>building a higher quality application</em> as well thanks to the benefits of iterative development. As the saying goes, quantity has a quality all its own.</p>\n\n    \n    tagged\n    \n\t<a href=\"https://tiniuc.com/tags/development/\">Development</a>","contentLength":7515,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://www.reddit.com/r/programming/comments/1ifunbl/unexpected_benefits_of_building_your_own_tools/"},{"title":"Reverse-engineering and analysis of SanDisk High Endurance microSDXC card (2020)","url":"https://ripitapart.com/2020/07/16/reverse-engineering-and-analysis-of-sandisk-high-endurance-microsdxc-card/","date":1738492360,"author":"userbinator","guid":174,"unread":true,"content":"<blockquote><p>Thank you for contacting SanDisk® Global customer care. We really appreciate you being a part of our SanDisk® family.</p><p>I understand that you wish to know more about the SanDisk® High Endurance video monitoring card, as such please allow me to inform you that all our SanDisk® memory cards uses Multi level cell technology (MLC) flash. However, the read/write cycles for the flash memory is not published nor documented only the read and write speed in published as such they are 100 MB/S &amp; 40 MB/s. The 64 GB card can record Full HD video up to 10,000 hours. To know more about the card you may refer to the link below:</p><p>Best regards,\nAllan B.<p>\nSanDisk® Global Customer Care</p></p></blockquote><p>I’ll give them a silver star that says “You Tried” at least.</p><p>While (micro)SD cards feel like a solid monolithic piece of technology, they’re made up of multiple different chips, each performing a different role. A basic SD card will have a controller that manages the NAND Flash chips and communicates with the host (PC, camera, etc.), and the NAND Flash itself (made up of 1 or more Flash dies). Bunnie Huang’s blog, Bunnie Studios, has an excellent article on the internals of SD cards, including counterfeits and how they’re made – check it out <a href=\"https://www.bunniestudios.com/blog/?p=3554\" target=\"_blank\" rel=\"noopener\">here</a>.</p><div data-shortcode=\"caption\"><a href=\"https://ripitapart.com/wp-content/uploads/2019/10/sd-card-anatomy-2.png\"><img aria-describedby=\"caption-attachment-2132\" data-attachment-id=\"2132\" data-permalink=\"https://ripitapart.com/2020/07/16/reverse-engineering-and-analysis-of-sandisk-high-endurance-microsdxc-card/sd-card-anatomy/\" data-orig-file=\"https://ripitapart.com/wp-content/uploads/2019/10/sd-card-anatomy-2.png\" data-orig-size=\"268,476\" data-comments-opened=\"1\" data-image-meta=\"{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}\" data-image-title=\"SD Card Anatomy\" data-image-description=\"<p>Block diagram of a typical SD card.</p>\n\" data-image-caption=\"<p>Block diagram of a typical SD card.</p>\n\" data-medium-file=\"https://ripitapart.com/wp-content/uploads/2019/10/sd-card-anatomy-2.png?w=169\" data-large-file=\"https://ripitapart.com/wp-content/uploads/2019/10/sd-card-anatomy-2.png?w=268\" src=\"https://ripitapart.com/wp-content/uploads/2019/10/sd-card-anatomy-2.png?w=584\" alt=\"SD Card Anatomy\" srcset=\"https://ripitapart.com/wp-content/uploads/2019/10/sd-card-anatomy-2.png 268w, https://ripitapart.com/wp-content/uploads/2019/10/sd-card-anatomy-2.png?w=84&amp;h=150 84w\" sizes=\"(max-width: 268px) 100vw, 268px\"></a><p>Block diagram of a typical SD card.</p></div><p>MicroSD cards often (but not always!) include test pads, used to program/test the NAND Flash during manufacture. These can be exploited in the case of <a href=\"https://blog.acelaboratory.com/pc-3000-flash-monolith-pinout-research.html\" target=\"_blank\" rel=\"noopener\">data recovery</a>, or to reuse microSD cards that have a defective controller or firmware by turning the card into a piece of raw NAND Flash – check out Gough Lui’s adventures <a href=\"https://goughlui.com/2015/04/05/teardown-optimization-comsol-8gb-usb-flash-stick-au6989sn-gt-sdtnrcama-008g/\" target=\"_blank\" rel=\"noopener\">here</a>. Note that there is no set standard for these test pads (even for the same manufacturer!), but there are common patterns for some manufacturers like SanDisk that make reverse-engineering easier.</p><p>microSD cards fall into a category of “monolithic” Flash devices, as they combine a controller and raw NAND Flash memory into a single, inseparable package. Many manufacturers break out the Flash’s data bus onto hidden (and nearly completely undocumented) test pads, which some other memory card and USB drive manufacturers take advantage of to make cheap storage products using failed parts; the controller can simply be electrically disabled and the Flash is then used as if it were a regular chip.</p><p>In the case of SanDisk cards, there is very limited information on their cards’ test pad pinouts. Each generation has slight differences, but the layout is mostly the same. </p><p><strong>CORRECTION (July 22, 2020):</strong><em>Upon further review, I might have accidentally created a discrepancy between the leaked pinouts online, versus my own documentation in terms of power polarity; see the “Test Pad Pinout” section.</em></p><p>My card (and many of their higher-end cards – that is, not their Ultra lineup) features test pads that aren’t covered by solder mask, but are instead covered by some sort of screen-printed epoxy with a laser-etched serial number on top. With a bit of heat and some scraping, I was able to remove the (very brittle) coating on top of the test pads; this also removed the serial number which I believe is an anti-tamper measure by SanDisk.</p><p>After cleaning off any last traces of the epoxy coating, I was greeted with the familiar SanDisk test pad layout, plus a few extra on the bottom.</p><p>The breakout board is relatively simple in concept: for each test pad, bring out a wire that goes to a bigger test point for easier access, and wire up the normal SD bus to an SD connector to let the controller do its work with twiddling the NAND Flash bus. Given how small each test pad is (and how many), things get a bit… messy.</p><p>I started by using double-side foam adhesive tape to secure the SD card to a piece of perfboard. I then tinned all of the pads and soldered a small 1uF ceramic capacitor across the card’s power (Vcc) and ground (GND) test pads. Using 40-gauge (0.1 mm, or 4-thousandths of an inch!) magnet wire, I mapped each test pad to its corresponding machine-pin socket on the perfboard. Including the extra test pads, that’s a total of 28 tiny wires!</p><p>For the SD connector side of things, I used a flex cable for the <a href=\"http://xtc2clip.org/how-it-works\" target=\"_blank\" rel=\"noopener\">XTC 2 Clip</a> (a tool used to service HTC Android devices), as it acted as a flexible “remote SD card” and broke out the signals to a small ribbon cable. I encased the flex cable with copper tape to act as a shield against electrical noise and to provide physical reinforcement, and soldered the tape to the outer pads on the perfboard for reinforcement. The ribbon cable end was then tinned and each SD card’s pin was wired up with magnet wire. The power lines were then broken out to an LED and resistor to indicate when the card was receiving power.</p><p>With all of the test pads broken out to an array of test pins, it was time to make sense of what pins are responsible for accessing the NAND Flash inside the card.</p><div data-shortcode=\"caption\"><a href=\"https://ripitapart.com/wp-content/uploads/2020/07/sandisk-high-endurance-microsd-test-pad-pinout.png\"><img aria-describedby=\"caption-attachment-2165\" data-attachment-id=\"2165\" data-permalink=\"https://ripitapart.com/sandisk-high-endurance-microsd-test-pad-pinout/\" data-orig-file=\"https://ripitapart.com/wp-content/uploads/2020/07/sandisk-high-endurance-microsd-test-pad-pinout.png\" data-orig-size=\"1666,935\" data-comments-opened=\"1\" data-image-meta=\"{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}\" data-image-title=\"SanDisk High Endurance microSD Test Pad Pinout\" data-image-description=\"<p>Diagram of the test pads on SanDisk’s High Endurance microSD card.</p>\n\" data-image-caption=\"<p>Diagram of the test pads on SanDisk’s High Endurance microSD card.</p>\n\" data-medium-file=\"https://ripitapart.com/wp-content/uploads/2020/07/sandisk-high-endurance-microsd-test-pad-pinout.png?w=300\" data-large-file=\"https://ripitapart.com/wp-content/uploads/2020/07/sandisk-high-endurance-microsd-test-pad-pinout.png?w=584\" src=\"https://ripitapart.com/wp-content/uploads/2020/07/sandisk-high-endurance-microsd-test-pad-pinout.png?w=584&amp;h=328\" alt=\"Diagram of the test pads on SanDisk's High Endurance microSD card.\" width=\"584\" height=\"328\" srcset=\"https://ripitapart.com/wp-content/uploads/2020/07/sandisk-high-endurance-microsd-test-pad-pinout.png?w=584 584w, https://ripitapart.com/wp-content/uploads/2020/07/sandisk-high-endurance-microsd-test-pad-pinout.png?w=1168 1168w, https://ripitapart.com/wp-content/uploads/2020/07/sandisk-high-endurance-microsd-test-pad-pinout.png?w=150 150w, https://ripitapart.com/wp-content/uploads/2020/07/sandisk-high-endurance-microsd-test-pad-pinout.png?w=300 300w, https://ripitapart.com/wp-content/uploads/2020/07/sandisk-high-endurance-microsd-test-pad-pinout.png?w=768 768w, https://ripitapart.com/wp-content/uploads/2020/07/sandisk-high-endurance-microsd-test-pad-pinout.png?w=1024 1024w\" sizes=\"(max-width: 584px) 100vw, 584px\"></a><p>Diagram of the test pads on SanDisk’s High Endurance microSD card. (click to enlarge)</p></div><p>The overall test pad pinout was the same for other microSD cards from SanDisk</p><p><strong>CORRECTION (July 22, 2020):</strong><em>I might actually have just gotten my own documentation mixed up in terms of the power and ground test pads. Regardless, one should always be careful to ensure the correct power polarity is sent to a device.</em></p><p>I used my <a href=\"https://www.dreamsourcelab.com/shop/logic-analyzer/dslogic-plus/\" target=\"_blank\" rel=\"noopener\">DSLogic Plus</a> logic analyzer to analyze the signals on all of the pins. Since the data pinout was previously discovered, the hard part of figuring out what each line represented (data bus, control, address, command, write-protect, ready/busy status) was already done for me. However, not all of the lines were immediately evident as the pinouts I found online only included the bare minimum of lines to make the NAND Flash accessible, with one exception being a control line that places the controller into a reset state and releases its control of the data lines (this will be important later on).</p><p>By sniffing the data bus at the DSLogic’s maximum speed (and using its 32 MB onboard buffer RAM), I was able to get a clear snapshot of the commands being sent to the NAND Flash from the controller during initialization.</p><h2>Bus Sniffing &amp; NAND I/O 101 (writing commands, address, reading data)</h2><p>In particular, I was looking for two commands: RESET (0xFF), and READ ID (0x90). When looking for a command sequence, it’s important to know how and when the data and control lines change. I will try to explain it step-by-step, but if you’re interested there is an <a href=\"https://user.eng.umd.edu/~blj/CS-590.26/micron-tn2919.pdf\" target=\"_blank\" rel=\"noopener\">introductory white paper</a> by Micron that explains all of the fundamentals of NAND Flash with much more information about how NAND Flash works.</p><p>When a RESET command is sent to the NAND Flash, first the /CE (Chip Select, Active Low) line is pulled low. Then the CLE (Command Latch Enable) line is pulled high; the data bus is set to its intended value of 0xFF (all binary ones); then the /WE (Write Enable, Active Low) line is pulsed from high to low, then back to high again (the data bus’ contents are committed to the chip when the /WE line goes from low to high, known as a “rising edge”); the CLE line is pulled back low to return to its normal state. The Flash chip will then pull its R/B (Ready/Busy Status) line low to indicate it is busy resetting itself, then releases the line back to its high state when it’s finished.</p><p>The READ ID command works similarly, except after writing the command with 0x90 (binary 1001 0000) on the data bus, it then pulls the ALE (Address Latch Enable) line high instead of CLE, and writes 0x00 (all binary zeroes) by pulsing the /WE line low. The chip transfers its internally programmed NAND Flash ID into its internal read register, and the data is read out from the device on each rising edge of the /RE (Read Enable, Active Low) line; for most devices this is 4 to 8 bytes of data.</p><p>For each NAND Flash device, it has a (mostly) unique ID that identifies the manufacturer, and other functional data that is defined by that manufacturer; in other words, only the manufacturer ID, assigned by the <a href=\"https://en.wikipedia.org/wiki/JEDEC\" target=\"_blank\" rel=\"noopener\">JEDEC Technology Association</a>, is well-defined.</p><p>The first byte represents the Flash manufacturer, and the rest (2 to 6 bytes) define the device’s characteristics, as set out by the manufacturer themselves. Most NAND vendors are very tight-lipped when it comes to datasheets, and SanDisk (and by extension, Toshiba/Kioxia) maintain very strict control, save for some slightly outdated leaked Toshiba datasheets. Because the two aforementioned companies share their NAND fabrication facilities, we can reasonably presume the data structures in the vendor-defined bytes can be referenced against each other.</p><p>In the case of the SanDisk High Endurance 128GB card, it has a NAND Flash ID of 0x45 48 9A B3 7E 72 0D 0E. Some of these values can be compared against a <a href=\"http://www.datasheet.hk/view_download.php?id=2027929&amp;file=0515%5Ctc58teg5dcjtai0_7779332.pdf\" target=\"_blank\" rel=\"noopener\">Toshiba datasheet</a>:</p><table><thead><tr><th>Description/Interpretation</th></tr></thead><tbody><tr><td><ul><li>I/O voltage: Presumed 1.8 volts (measured with multimeter)</li><li>Device capacity: Presumed 128 GB&nbsp;(unable to confirm against datasheet)</li></ul></td></tr><tr><td><ul><li>NAND type: TLC (Triple-Level Cell / 3 bits per cell)</li><li>Flash dies per /CE: 4 (card uses four 32GB Flash chips internally)</li></ul></td></tr><tr><td><ul><li>Block size: 12 MiB (768 pages per block) excluding spare area (determined outside datasheet)</li><li>Page size: 16,384 bytes / 16 kiB excluding spare area</li></ul></td></tr><tr><td><ul><li>Planes per /CE: 8 (2 planes per die)</li></ul></td></tr><tr><td><ul><li>Interface type: Asynchronous</li><li>Process geometry: BiCS3 3D NAND (determined outside datasheet)</li></ul></td></tr><tr><td><ul><li>Unknown (no information listed in datasheet)</li></ul></td></tr><tr><td><ul><li>Unknown (no information listed in datasheet)</li></ul></td></tr></tbody></table><p>Although not all byte values could be conclusively determined, I was able to determine that the , but at least it is  which improves endurance dramatically compared to traditional/planar NAND. Unfortunately, from this information alone, I cannot determine whether the card’s controller takes advantage of any SLC caching mechanisms for write operations.</p><p>The chip’s process geometry was determined by looking up the first four bytes of the Flash ID, and cross-referencing it to a line from a configuration file in Silicon Motion’s <a href=\"https://www.usbdev.ru/files/smi/\" target=\"_blank\" rel=\"noopener\">mass production tools</a> for their <a href=\"http://www.siliconmotion.com/download.php?t=U0wyRnpjMlYwY3k4eU1ERTVMekV3THpBNUwzQnliMlIxWTNReE16Z3lNamd4TWpVMkxuQmtaajA5UFZOTk16STNNU0J3Y205a2RXTjBJR0p5YVdWbUM%3D\" target=\"_blank\" rel=\"noopener\">SM3271</a> USB Flash drive controller, and their <a href=\"http://en.siliconmotion.com/download/product-brief/SM2258XT_Product_Brief_ENG_Q1109.pdf\" target=\"_blank\" rel=\"noopener\">SM2258XT</a> DRAM-less SSD controller. These tools revealed supposed part numbers of SDTNAIAMA-256G and SDUNBIEMM-32G respectively, but I don’t think this is accurate for the specific Flash configuration in this card.</p><p>I wanted to make sure that I was getting the correct ID from the NAND Flash, so I rigged up a Texas Instruments <a href=\"https://www.ti.com/tool/MSP-EXP430FR2433\" target=\"_blank\" rel=\"noopener\">MSP430FR2433 development board</a> and wrote some (very) rudimentary code to send the required RESET and READ ID commands, and attempt to extract any extra data from the chip’s hidden JEDEC Parameter Page along the way.</p><p>My first roadblock was that the MSP430 would reset every time it attempted to send the RESET command, suggesting that too much current was being drawn from the MSP430 board’s limited power supply. This can occur during <a href=\"https://en.wikipedia.org/wiki/Bus_contention\" target=\"_blank\" rel=\"noopener\">bus contention</a>, where two devices “fight” each other when trying to set a certain digital line both high and low at the same time. I was unsure what was going on, since publicly-available information didn’t mention how to disable the card’s built-in controller (doing so would cause it to <a href=\"https://en.wikipedia.org/wiki/Three-state_logic#Tri-state_Buffer\" target=\"_blank\" rel=\"noopener\">tri-state</a> the lines, effectively “letting go” of the NAND bus and allowing another device to take control).</p><p>I figured out that the A1 test pad (see diagram) was the controller’s reset line (pulsing this line low while the card was running forced my card reader to power-cycle it), and by holding the line low, the controller would release its control of the NAND Flash bus entirely. After this, my microcontroller code was able to read the Flash ID correctly and consistently.</p><div data-shortcode=\"caption\"><a href=\"https://ripitapart.com/wp-content/uploads/2019/10/sandisk-he-128gb-nand-flash-id-1.png\"><img aria-describedby=\"caption-attachment-2122\" data-attachment-id=\"2122\" data-permalink=\"https://ripitapart.com/2020/07/16/reverse-engineering-and-analysis-of-sandisk-high-endurance-microsdxc-card/sandisk-he-128gb-nand-flash-id/\" data-orig-file=\"https://ripitapart.com/wp-content/uploads/2019/10/sandisk-he-128gb-nand-flash-id-1.png\" data-orig-size=\"877,375\" data-comments-opened=\"1\" data-image-meta=\"{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}\" data-image-title=\"SanDisk High Endurance SD Card NAND Flash ID\" data-image-description=\"\" data-image-caption=\"<p>Reading out the card’s Flash ID with my own microcontroller code.</p>\n\" data-medium-file=\"https://ripitapart.com/wp-content/uploads/2019/10/sandisk-he-128gb-nand-flash-id-1.png?w=300\" data-large-file=\"https://ripitapart.com/wp-content/uploads/2019/10/sandisk-he-128gb-nand-flash-id-1.png?w=584\" src=\"https://ripitapart.com/wp-content/uploads/2019/10/sandisk-he-128gb-nand-flash-id-1.png?w=584\" alt=\"Reading out the card's Flash ID with my own microcontroller code.\" srcset=\"https://ripitapart.com/wp-content/uploads/2019/10/sandisk-he-128gb-nand-flash-id-1.png 877w, https://ripitapart.com/wp-content/uploads/2019/10/sandisk-he-128gb-nand-flash-id-1.png?w=150&amp;h=64 150w, https://ripitapart.com/wp-content/uploads/2019/10/sandisk-he-128gb-nand-flash-id-1.png?w=300&amp;h=128 300w, https://ripitapart.com/wp-content/uploads/2019/10/sandisk-he-128gb-nand-flash-id-1.png?w=768&amp;h=328 768w\" sizes=\"(max-width: 877px) 100vw, 877px\"></a><p>Reading out the card’s Flash ID with my own microcontroller code.</p></div><h2>JEDEC Parameter Page… or at least what SanDisk made of it!</h2><p>The JEDEC Parameter Page, if present, contains detailed information on a Flash chip’s characteristics with far greater detail than the NAND Flash ID – and it’s well-standardized so parsing it would be far easier. However, it turns out that SanDisk decided to ignore the standard format, and decided to use their own proprietary Parameter Page format! Normally the page starts with the ASCII string “JEDEC”, but I got a repeating string of “SNDK” (corresponding with their <a href=\"https://www.marketbeat.com/stocks/NASDAQ/SNDK/\" target=\"_blank\" rel=\"noopener\">stock symbol</a>) with other data that didn’t correspond to anything like the JEDEC specification! Oh well, it was worth a try.</p><p>I collected the data with the same Arduino sketch as shown above, and pulled 1,536 bytes’ worth of data; I wrote a quick <a href=\"https://ideone.com/eLclhy#stdin\" target=\"_blank\" rel=\"noopener\">program on Ideone</a> to provide a nicely-formatted hex dump of the first 512 bytes of the Parameter Page data:</p><pre>Offset 00:01:02:03:04:05:06:07:08:09:0A:0B:0C:0D:0E:0F 0123456789ABCDEF\n------ --+--+--+--+--+--+--+--+--+--+--+--+--+--+--+-- ----------------\n0x0000 53 4E 44 4B 53 4E 44 4B 53 4E 44 4B 53 4E 44 4B SNDKSNDKSNDKSNDK\n0x0010 53 4E 44 4B 53 4E 44 4B 53 4E 44 4B 53 4E 44 4B SNDKSNDKSNDKSNDK\n0x0020 08 08 00 08 06 20 00 02 01 48 9A B3 00 05 08 41 ..... ...H.....A\n0x0030 48 63 6A 08 08 00 08 06 20 00 02 01 48 9A B3 00 Hcj..... ...H...\n0x0040 05 08 41 48 63 6A 08 08 00 08 06 20 00 02 01 48 ..AHcj..... ...H\n0x0050 9A B3 00 05 08 41 48 63 6A 08 08 00 08 06 20 00 .....AHcj..... .\n0x0060 02 01 48 9A B3 00 05 08 41 48 63 6A 08 08 00 08 ..H.....AHcj....\n0x0070 06 20 00 02 01 48 9A B3 00 05 08 41 48 63 6A 08 . ...H.....AHcj.\n0x0080 08 00 08 06 20 00 02 01 48 9A B3 00 05 08 41 48 .... ...H.....AH\n0x0090 63 6A 08 08 00 08 06 20 00 02 01 48 9A B3 00 05 cj..... ...H....\n0x00A0 08 41 48 63 6A 08 08 00 08 06 20 00 02 01 48 9A .AHcj..... ...H.\n0x00B0 B3 00 05 08 41 48 63 6A 08 08 00 08 06 20 00 02 ....AHcj..... ..\n0x00C0 01 48 9A B3 00 05 08 41 48 63 6A 08 08 00 08 06 .H.....AHcj.....\n0x00D0 20 00 02 01 48 9A B3 00 05 08 41 48 63 6A 08 08  ...H.....AHcj..\n0x00E0 00 08 06 20 00 02 01 48 9A B3 00 05 08 41 48 63 ... ...H.....AHc\n0x00F0 6A 08 08 00 08 06 20 00 02 01 48 9A B3 00 05 08 j..... ...H.....\n0x0100 41 48 63 6A 08 08 00 08 06 20 00 02 01 48 9A B3 AHcj..... ...H..\n0x0110 00 05 08 41 48 63 6A 08 08 00 08 06 20 00 02 01 ...AHcj..... ...\n0x0120 48 9A B3 00 05 08 41 48 63 6A 08 08 00 08 06 20 H.....AHcj..... \n0x0130 00 02 01 48 9A B3 00 05 08 41 48 63 6A 08 08 00 ...H.....AHcj...\n0x0140 08 06 20 00 02 01 48 9A B3 00 05 08 41 48 63 6A .. ...H.....AHcj\n0x0150 08 08 00 08 06 20 00 02 01 48 9A B3 00 05 08 41 ..... ...H.....A\n0x0160 48 63 6A 08 08 00 08 06 20 00 02 01 48 9A B3 00 Hcj..... ...H...\n0x0170 05 08 41 48 63 6A 08 08 00 08 06 20 00 02 01 48 ..AHcj..... ...H\n0x0180 9A B3 00 05 08 41 48 63 6A 08 08 00 08 06 20 00 .....AHcj..... .\n0x0190 02 01 48 9A B3 00 05 08 41 48 63 6A 08 08 00 08 ..H.....AHcj....\n0x01A0 06 20 00 02 01 48 9A B3 00 05 08 41 48 63 6A 08 . ...H.....AHcj.\n0x01B0 08 00 08 06 20 00 02 01 48 9A B3 00 05 08 41 48 .... ...H.....AH\n0x01C0 63 6A 08 08 00 08 06 20 00 02 01 48 9A B3 00 05 cj..... ...H....\n0x01D0 08 41 48 63 6A 08 08 00 08 06 20 00 02 01 48 9A .AHcj..... ...H.\n0x01E0 B3 00 05 08 41 48 63 6A 08 08 00 08 06 20 00 02 ....AHcj..... ..\n0x01F0 01 48 9A B3 00 05 08 41 48 63 6A 08 08 00 08 06 .H.....AHcj.....</pre><p>Further analysis with my DSLogic showed that the controller itself requests a total of 4,128 bytes (4 kiB + 32 bytes) of Parameter Page data, which is filled with the same repeating data as shown above.</p><p>When looking at the logic analyzer data, I noticed that the controller sends the READ ID command twice, but the first time it does so without resetting the Flash (which should normally be done as soon as the chip is powered up!). The data that the Flash returned was… strange to say the least.</p><table><thead><tr></tr></thead><tbody><tr><td><ul><li>I/O voltage: Unknown (no data)</li><li>Device capacity: Unknown (no data)</li></ul></td></tr><tr><td><ul><li>NAND type: SLC (Single-Level Cell / 1 bit per cell)</li></ul></td></tr><tr><td><ul><li>Block size: 4 MB excluding spare area</li><li>Page size: 16,384 bytes / 16 kiB excluding spare area</li></ul></td></tr><tr><td><ul><li>Interface type: Asynchronous</li><li>Process geometry: 70 nm planar</li></ul></td></tr></tbody></table><p>This confused me initially when I was trying to find the ID from the logic capture alone; after talking to a contact who has experience in NAND Flash data recovery, they said this is expected for SanDisk devices, which make liberal use of vendor-proprietary commands and data structures. If the fourth byte is to be believed, it says the block size is 4 megabytes, which I think is plausible for a modern Flash device. The rest of the information doesn’t really make any sense to me apart from the first byte indicating the chip is made by Toshiba.</p><p>I shouldn’t have to go this far in hardware reverse-engineering to just ask a simple question of what Flash SanDisk used in their high-endurance card. You’d think they would be proud to say they use 3D NAND for higher endurance and reliability, but I guess not!</p><p>For those that are interested, I’ve included the logic captures of the card’s activity shortly after power-up. I’ve also included the (very crude) Arduino sketch that I used to read the NAND ID and Parameter Page data manually:</p>","contentLength":16742,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://news.ycombinator.com/item?id=42907766"},{"title":"Show HN: Modest – musical harmony library for Lua","url":"https://github.com/esbudylin/modest","date":1738492350,"author":"esbudylin","guid":168,"unread":true,"content":"<p>This is a project I've been building in my spare time over the past few months. It's a library that provides methods for working with musical harmony ‒ intervals, notes, chords. For example, it can parse almost any chord symbol (Fmaj7, CminMaj9, etc) and turn it into notes, or it can identify a chord from a given set of notes.</p><p>I started this project with the idea of using formal grammar to parse chord symbols. I wanted to use it instead of a hand-written parser, which is the common approach among similar libraries. Lua caught my attention because of Lpeg, a Parsing Expression Grammar library that is both fast and easy to use. An additional motivation for using Lua was the lack of comparable libraries for it, even though the language is commonly used in audio programming.</p><p>However, despite being a Lua library, the project itself is written in Fennel — a \"lispy\" language that transpiles to Lua. Fennel has features that make writing code for the Lua platform much more pleasant: a concise syntax, macros, and destructuring — a feature Lua sorely lacks!</p><p>In the process, I definitely learned a lot about music theory, although my new knowledge is quite one-sided. By working on this library, I know a thing or two about types and structure of chords, but I learned almost nothing about their composition and transformation. Perhaps these will be the directions I explore next in the project.</p>","contentLength":1402,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://news.ycombinator.com/item?id=42907765"},{"title":"Analyzing the codebase of Caffeine, a high performance caching library","url":"https://adriacabeza.github.io/2024/07/12/caffeine-cache.html","date":1738489025,"author":"synthc","guid":173,"unread":true,"content":"","contentLength":0,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://news.ycombinator.com/item?id=42907488"},{"title":"When can I claim that I have little bit of knowledge about Kubernetes?","url":"https://www.reddit.com/r/kubernetes/comments/1iftiic/when_can_i_claim_that_i_have_little_bit_of/","date":1738487842,"author":"/u/Keeper-Name_2271","guid":315,"unread":true,"content":"<p>I've been learning kubernetes starting from last year. And I must have spent about 50hrs on udemy courses, labbing. However, I still can't do anything. As I said \"I attempted labbing\", I could not deploy what I want with kubernetes. Mostly, I was doing nginx deployment using k8s(:D).</p><p>Now, I, as a 2yoe support engineer; whose job in k8s is basically restarting pods using rancher, wants to know what should I learn in order to be considered as a kubernetes beginner(as a person who primarily works with kubernetes)...</p>","contentLength":517,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Python developer getting started with Rust","url":"https://www.reddit.com/r/rust/comments/1ift6e5/python_developer_getting_started_with_rust/","date":1738486340,"author":"/u/InfluenceFit478","guid":329,"unread":true,"content":"<p>I’m a Python developer (mostly backend and data related work, approx 12 years) and I’m seeing a big part of my toolchain transitioning to having a core built in Rust (polars, orjson, Pydantic, uv, ruff). All of these tools seem super exciting and I’m keen to contribute to some of them. However, I’d have to start from scratch learning Rust.</p><p>Any suggestions on where to start? </p>","contentLength":384,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"How to switch job?","url":"https://www.reddit.com/r/kubernetes/comments/1ift1qm/how_to_switch_job/","date":1738485746,"author":"/u/Localhost_notfound","guid":312,"unread":true,"content":"<p>I was in this perception if I clear CK-A I will be able to get good raise, I cleared my exam in june 2024. I have 3.5 yrs of experience in DevOps on prem and as well as on aws. How ever I am not getting a decent salary I am getting 11LPA. What am I doing wrong? I am not even getting any calls if I am trying to switch!</p>","contentLength":319,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"CDC: Unpublished manuscripts mentioning certain topics must be pulled or revised","url":"https://insidemedicine.substack.com/p/breaking-news-cdc-orders-mass-retraction","date":1738471948,"author":"KittenInABox","guid":212,"unread":true,"content":"","contentLength":0,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://news.ycombinator.com/item?id=42905937"},{"title":"Slashdot Asks: Do You Remember Your High School's 'Computer Room'?","url":"https://developers.slashdot.org/story/25/02/02/0233216/slashdot-asks-do-you-remember-your-high-schools-computer-room?utm_source=rss1.0mainlinkanon&utm_medium=feed","date":1738463760,"author":"EditorDavid","guid":233,"unread":true,"content":"Bill Gates' blog has been updated with short videos about his upcoming book, including one about how his school ended up with an ASR-33 teletype that could connect their Seattle classroom to a computer in California. \"The teachers faded away pretty quickly,\" Gates adds, \"But about six of us stayed hardcore. One was Paul Allen...\" — the future co-founder of Microsoft. And the experience clearly meant a lot to Gates. \"Microsoft just never would've happened without Paul — and this teletype room.\" \n\nIn a longer post thanking his \"brilliant\" teachers, Gates calls his teletype experience \"an encounter that would shape my entire future\" and \"opened up a whole new world for me.\" Gates also thanks World War II Navy pilot and Boeing engineer Bill Dougall, who \"was instrumental in bringing computer access to our school, something he and other faculty members pushed for after taking a summer computer class... The fascinating thing about Mr. Dougall was that he didn't actually know much about programming; he exhausted his knowledge within a week. But he had the vision to know it was important and the trust to let us students figure it out.\" \n\nGates shared a similar memory about the computer-room's 20-something overseer Fred Wright, who \"intuitively understood that the best way to get students to learn was to let us explore on our own terms. There was no sign-up sheet, no locked door, no formal instruction.\"\n\nInstead, Mr. Wright let us figure things out ourselves and trusted that, without his guidance, we'd have to get creative... Some of the other teachers argued for tighter regulations, worried about what we might be doing in there unsupervised. But even though Mr. Wright occasionally popped in to break up a squabble or listen as someone explained their latest program, for the most part he defended our autonomy... \nMr. Wright gave us something invaluable: the space to discover our own potential.\n \n\nAny Slashdot readers have a similarly impactful experience? Share your own thoughts and memories in the comments. \n\nDo you remember your high school's computer room?","contentLength":2089,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Macrodata Refinement","url":"https://lumon-industries.com/","date":1738446376,"author":"gaws","guid":172,"unread":true,"content":"<!DOCTYPE html>","contentLength":0,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://news.ycombinator.com/item?id=42902691"},{"title":"Show HN: ESP32 RC Cars","url":"https://github.com/mattsroufe/esp32_rc_cars","date":1738435891,"author":"mattsroufe","guid":167,"unread":true,"content":"<p>This is a projected I started that blends both the fun of playing a split screen multiplayer driving game and controlling real rc cars.</p><p>The cars can also be controlled via bluetooth gamepads and is meant to be easily hackable.</p>","contentLength":225,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://news.ycombinator.com/item?id=42901007"},{"title":"Grafana is the goat... Let's deploy the LGTM stack","url":"https://www.youtube.com/watch?v=1X3dV3D5EJg","date":1738423479,"author":"Fireship","guid":441,"unread":true,"content":"<article>Get up to 67% off VPS at Hostinger. Use code FIRESHIP for an extra discount at https://hostinger.com/fireship\n\n#linux #programming #softwareengineer \n\n💬 Chat with Me on Discord\n\nhttps://discord.gg/fireship\n\n🔗 Resources\n\nDocker 101 https://youtu.be/rIrNIzy6U_g\nFull Deno Course https://fireship.io/courses/deno\nGrafana on GitHub https://github.com/grafana/grafana\n\n🔥 Get More Content - Upgrade to PRO\n\nUpgrade at https://fireship.io/pro\nUse code YT25 for 25% off PRO access \n\n🎨 My Editor Settings\n\n- Atom One Dark \n- vscode-icons\n- Fira Code Font\n\n🔖 Topics Covered\n\nWhat is Grafana? \nHow to get started with software observability?\nWhat is Open Telemetry?\nHow to deploy LGTM stack?\nHow monitor Linux server performance?</article>","contentLength":733,"flags":null,"enclosureUrl":"https://www.youtube.com/v/1X3dV3D5EJg?version=3","enclosureMime":"","commentsUrl":null},{"title":"CDC data are disappearing","url":"https://www.theatlantic.com/health/archive/2025/01/cdc-dei-scientific-data/681531/","date":1738410738,"author":"doener","guid":211,"unread":true,"content":"<p data-flatplan-paragraph=\"true\"><em><small>Updated at 5:53 p.m. on January 31, 2025</small></em></p><p data-flatplan-paragraph=\"true\"> Last night, scientists began to hear cryptic and foreboding warnings from colleagues:<em> Go to the CDC website, and download your data now. </em>They were all telling one another the same thing: Data on the website were about to disappear, or be altered, to comply with the Trump administration’s ongoing attempt to scrub federal agencies of any mention of gender, DEI, and accessibility. “I was up until 2 a.m.,” Angela Rasmussen, a virologist at the Vaccine and Infectious Disease Organization at the University of Saskatchewan who relies on the CDC’s data to track viral outbreaks, told me. She archived whatever she could.</p><p data-flatplan-paragraph=\"true\">The full scope of the purge isn’t yet clear. One document obtained by  indicated that the government was, as of yesterday evening, intending to target and replace, at a minimum, several “suggested keywords”—including “pregnant people, transgender, binary, non-binary, gender, assigned at birth, binary [], non-binary [], cisgender, queer, gender identity, gender minority, anything with pronouns”—in CDC content. While these terms are often politicized, some represent demographic variables that researchers collect when tracking the ebb and flow of diseases and health conditions across populations. Should they be reworded, or even removed entirely, from data sets to comply with the executive order, researchers and health-care providers might have a much harder time figuring out how diseases affect specific communities—making it more challenging to serve Americans on the whole.</p><p data-flatplan-paragraph=\"true\">CDC data’s “explicit purpose” is to guide researchers toward the places and people who most need attention, Patrick Sullivan, an epidemiologist at Emory University and a former CDC Epidemic Intelligence Service officer, told me. As the changes unfold before him, he said, “it’s hard to understand how this benefits health.”</p><p data-flatplan-paragraph=\"true\">When I contacted the CDC, a spokesperson redirected my requests for comment to the Department of Health and Human Services. After this story was published, an HHS spokesperson said that “all changes to the HHS website and HHS division websites are in accordance with President Trump’s January 20 Executive Orders” on gender and DEI.</p><p data-flatplan-paragraph=\"true\">The government appears to understand that these changes could have scientific implications: The document directing a review of CDC content suggests that some work could be altered without “changing the meaning or scientific integrity of the content,” and that any such changes should be considered “routine.” Changing other content, according to the document, would require review by an expert precisely because any alterations would risk scientific integrity. But the document does not specify how data would be sorted into those categories, or at whose discretion.</p><p data-flatplan-paragraph=\"true\">“My fear is that in the short term, entire data sets would be taken down,” then reappear with demographic variables removed or altered to conform with DEI restrictions, Katie Biello, an epidemiologist at Brown, told me. Excising mention of gender and sexual orientation, for instance, from public-health data sets could require stripping entire columns of data out. If the government chooses to define sex as binary, transgender people and nonbinary people, among others, could be effectively erased. In response to the ongoing changes, some groups of researchers are now rushing to archive the CDC website in full.</p><p data-flatplan-paragraph=\"true\">Acknowledging and addressing health differences among demographic groups is a basic epidemiological tenet, Biello told me, “so we know where to target our health interventions.” She pointed to examples in her own field: Gay men have <a data-event-element=\"inline link\" href=\"https://www.cdc.gov/sti/about/about-stis-and-gay-men.html\">higher rates of STIs</a>, but <a data-event-element=\"inline link\" href=\"https://pmc.ncbi.nlm.nih.gov/articles/PMC9067055/\">lower rates of obesity</a>; transgender women have <a data-event-element=\"inline link\" href=\"https://www.statnews.com/2024/01/25/transgender-women-hiv-socioeconomic-risks-cdc/\">higher rates of HIV</a>, but lower rates of prostate cancer. More broadly, demographic changes to data sets could limit the country’s ability to identify which Americans are most at risk from an expansive list of conditions including adolescent depression, STIs, even sex-specific cancers. Changing data sets in this way would be tantamount to “erasing our ability to use data and evidence” to care for people, Rachel Hardeman, a health-equity expert at the University of Minnesota, told me.</p><p data-flatplan-paragraph=\"true\">Jennifer Nuzzo, an epidemiologist at Brown, pointed to mpox as a recent example of how replacing “gender” with “sex,” or ignoring sexual orientation, could limit effective public-health responses. At the beginning of the United States’ 2022 outbreak, neither researchers nor the public had much clarity on who was most affected, leading to widespread panic. “Officials were talking about the situation as if it was a risk we equally faced,” Nuzzo said. By collecting detailed demographic information, researchers were able to show that the disease was primarily affecting men who have sex with men, allowing officials to more efficiently allocate resources, including vaccines, and bring the epidemic under control before it affected Americans more widely.</p><p data-flatplan-paragraph=\"true\">A scrub such as this could also change how the government allocates funds for long-standing threats to public health, which could widen health-equity gaps, or reverse progress in combatting them. Rates of STIs more generally have recently begun to <a data-event-element=\"inline link\" href=\"https://www.nytimes.com/2024/11/12/health/syphilis-gonorrhea-chlamydia-cdc.html\">plateau</a> in the U.S., after decades of steady increase—but altering data that focus interventions on, say, transgender populations, or men who have sex with men, could undo those gains. If no data exist to prove that a health issue concentrates within a particular community, that “provides a justification to cut funding,” one researcher told me. (Several scientists who spoke with me for this article requested anonymity, for fear of retaliation for speaking out about the loss of federal data.) Sullivan, whose work focuses on HIV surveillance, compared the government’s actions to, effectively, destroying the road map to determining who in America most needs screening, pre-exposure prophylaxis, and treatment.</p><p data-flatplan-paragraph=\"true\">Much of the data on the CDC website have been aggregated from states, so it would be possible for researchers to reassemble those data sets, Nuzzo pointed out. But that’s an onerous task, and several scientists told me they never thought they’d be in a position where they’d have to scramble to squirrel away publicly available federal data. Nuzzo also worried that states might be reluctant in the future to share data with the federal government, or might decide not to bother collecting certain data at all. On the most basic scientific level, changing federal-government data means those data become unreliable. Public-health data are collected with the intention of sussing out which populations most need health interventions; altering those data leaves behind a skewed portrait of reality.</p>","contentLength":6778,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://news.ycombinator.com/item?id=42897696"},{"title":"Show HN: TalkNotes – A site that turns your ideas into tasks","url":"https://www.talknotes.tech/","date":1738410213,"author":"ajlkshdaksjd","guid":166,"unread":true,"content":"<div><h3>Turn any audio into smart notes</h3><div>Turn hours of note taking into seconds. Record voice notes or upload recorded audio, and let the AI transcribe &amp; structure them into actionable text. Create todo lists, notes, flashcards, transcripts, and more! Works in 100+ languages.</div></div>","contentLength":266,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://news.ycombinator.com/item?id=42897662"}],"tags":["dev"]}