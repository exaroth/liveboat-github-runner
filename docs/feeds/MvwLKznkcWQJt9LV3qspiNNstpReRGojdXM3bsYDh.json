{"id":"MvwLKznkcWQJt9LV3qspiNNstpReRGojdXM3bsYDh","title":"Kubernetes Blog","displayTitle":"Dev - Kubernetes Blog","url":"https://kubernetes.io/feed.xml","feedLink":"https://kubernetes.io/","isQuery":false,"isEmpty":false,"isHidden":false,"itemCount":1,"items":[{"title":"Spotlight on SIG Architecture: Enhancements","url":"https://kubernetes.io/blog/2025/01/21/sig-architecture-enhancements/","date":1737417600,"author":"","guid":730,"unread":true,"content":"<p><em>This is the fourth interview of a SIG Architecture Spotlight series that will cover the different\nsubprojects, and we will be covering <a href=\"https://github.com/kubernetes/community/blob/master/sig-architecture/README.md#enhancements\">SIG Architecture:\nEnhancements</a>.</em></p><p>In this SIG Architecture spotlight we talked with <a href=\"https://github.com/kikisdeliveryservice\">Kirsten\nGarrison</a>, lead of the Enhancements subproject.</p><h2>The Enhancements subproject</h2><p><strong>Frederico (FSM): Hi Kirsten, very happy to have the opportunity to talk about the Enhancements\nsubproject. Let's start with some quick information about yourself and your role.</strong></p><p>: I’m a lead of the Enhancements subproject of SIG-Architecture and\ncurrently work at Google. I first got involved by contributing to the service-catalog project with\nthe help of <a href=\"https://github.com/carolynvs\">Carolyn Van Slyck</a>. With time, <a href=\"https://github.com/kubernetes/sig-release/blob/master/releases/release-1.17/release_team.md\">I joined the Release\nteam</a>,\neventually becoming the Enhancements Lead and a Release Lead shadow. While on the release team, I\nworked on some ideas to make the process better for the SIGs and Enhancements team (the opt-in\nprocess) based on my team’s experiences. Eventually, I started attending Subproject meetings and\ncontributing to the Subproject’s work.</p><p><strong>FSM: You mentioned the Enhancements subproject: how would you describe its main goals and areas of\nintervention?</strong></p><p><strong>FSM: The improvement of the KEP process was (and is) one in which SIG Architecture was heavily\ninvolved. Could you explain the process to those that aren’t aware of it?</strong></p><p>: <a href=\"https://kubernetes.io/releases/release/#the-release-cycle\">Every release</a>, the SIGs let the\nRelease Team know which features they intend to work on to be put into the release. As mentioned\nabove, the prerequisite for these changes is a KEP - a standardized design document that all authors\nmust fill out and approve in the first weeks of the release cycle. Most features <a href=\"https://kubernetes.io/docs/reference/command-line-tools-reference/feature-gates/#feature-stages\">will move\nthrough 3\nphases</a>:\nalpha, beta and finally GA so approving a feature represents a significant commitment for the SIG.</p><p>The KEP serves as the full source of truth of a feature. The <a href=\"https://github.com/kubernetes/enhancements/blob/master/keps/NNNN-kep-template/README.md\">KEP\ntemplate</a>\nhas different requirements based on what stage a feature is in, but it generally requires a detailed\ndiscussion of the design and the impact as well as providing artifacts of stability and\nperformance. The KEP takes quite a bit of iterative work between authors, SIG reviewers, api review\nteam and the Production Readiness Review team before it is approved. Each set of reviewers is\nlooking to make sure that the proposal meets their standards in order to have a stable and\nperformant Kubernetes release. Only after all approvals are secured, can an author go forth and\nmerge their feature in the Kubernetes code base.</p><p><strong>FSM: I see, quite a bit of additional structure was added. Looking back, what were the most\nsignificant improvements of that approach?</strong></p><p>: In general, I think that the improvements with the most impact had to do with focusing on\nthe core intent of the KEP. KEPs exist not just to memorialize designs, but provide a structured way\nto discuss and come to an agreement about different facets of the change. At the core of the KEP\nprocess is communication and consideration.</p><p>To that end, some of the significant changes revolve around a more detailed and accessible KEP\ntemplate. A significant amount of work was put in over time to get the\n<a href=\"https://github.com/kubernetes/enhancements\">k/enhancements</a> repo into its current form -- a\ndirectory structure organized by SIG with the contours of the modern KEP template (with\nProposal/Motivation/Design Details subsections). We might take that basic structure for granted\ntoday, but it really represents the work of many people trying to get the foundation of this process\nin place over time.</p><p>As Kubernetes matures, we’ve needed to think about more than just the end goal of getting a single\nfeature merged. We need to think about things like: stability, performance, setting and meeting user\nexpectations. And as we’ve thought about those things the template has grown more detailed. The\naddition of the Production Readiness Review was major as well as the enhanced testing requirements\n(varying at different stages of a KEP’s lifecycle).</p><p>: We’re currently working on two things:</p><ol><li><em>Creating a Process KEP template.</em> Sometimes people want to harness the KEP process for\nsignificant changes that are more process oriented rather than feature oriented. We want to\nsupport this because memorializing changes is important and giving people a better tool to do so\nwill only encourage more discussion and transparency.</li><li> While our template changes aim to be as non-disruptive as possible, we\nbelieve that it will be easier to track and communicate those changes to the community better with\na versioned KEP template and the policies that go alongside such versioning.</li></ol><p>Both features will take some time to get right and fully roll out (just like a KEP feature) but we\nbelieve that they will both provide improvements that will benefit the community at large.</p><p><strong>FSM: You mentioned improvements: I remember when project boards for Enhancement tracking were\nintroduced in recent releases, to great effect and unanimous applause from release team members. Was\nthis a particular area of focus for the subproject?</strong></p><p>: The Subproject provided support to the Release Team’s Enhancement team in the migration away\nfrom using the spreadsheet to a project board. The collection and tracking of enhancements has\nalways been a logistical challenge. During my time on the Release Team, I helped with the transition\nto an opt-in system of enhancements, whereby the SIG leads \"opt-in\" KEPs for release tracking. This\nhelped to enhance communication between authors and SIGs before any significant work was undertaken\non a KEP and removed toil from the Enhancements team. This change used the existing tools to avoid\nintroducing too many changes at once to the community. Later, the Release Team approached the\nSubproject with an idea of leveraging GitHub Project Boards to further improve the collection\nprocess. This was to be a move away from the use of complicated spreadsheets to using repo-native\nlabels on <a href=\"https://github.com/kubernetes/enhancements\">k/enhancement</a> issues and project boards.</p><p><strong>FSM: That surely adds an impact on simplifying the workflow...</strong></p><p>: Removing sources of friction and promoting clear communication is very important to the\nEnhancements Subproject. At the same time, it’s important to give careful consideration to\ndecisions that impact the community as a whole. We want to make sure that changes are balanced to\ngive an upside and while not causing any regressions and pain in the rollout. We supported the\nRelease Team in ideation as well as through the actual migration to the project boards. It was a\ngreat success and exciting to see the team make high impact changes that helped everyone involved in\nthe KEP process!</p><p><strong>FSM: For those reading that might be curious and interested in helping, how would you describe the\nrequired skills for participating in the sub-project?</strong></p><p>: Familiarity with KEPs either via experience or taking time to look through the\nkubernetes/enhancements repo is helpful. All are welcome to participate if interested - we can take\nit from there.</p><p><strong>FSM: Excellent! Many thanks for your time and insight -- any final comments you would like to\nshare with our readers?</strong></p><p>: The Enhancements process is one of the most important parts of Kubernetes and requires\nenormous amounts of coordination and collaboration of people and teams across the project to make it\nsuccessful. I’m thankful and inspired by everyone’s continued hard work and dedication to making the\nproject great. This is truly a wonderful community.</p>","contentLength":7334,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null}],"tags":["dev","k8s"]}