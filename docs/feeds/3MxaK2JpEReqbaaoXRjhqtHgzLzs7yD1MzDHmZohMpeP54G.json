{"id":"3MxaK2JpEReqbaaoXRjhqtHgzLzs7yD1MzDHmZohMpeP54G","title":"Martin Fowler","displayTitle":"Dev - Martin Fowler","url":"https://martinfowler.com/feed.atom","feedLink":"https://martinfowler.com/feed.atom","isQuery":false,"isEmpty":false,"isHidden":false,"itemCount":8,"items":[{"title":"Bliki: Expansion Joints","url":"https://martinfowler.com/bliki/ExpansionJoints.html","date":1755489600,"author":"Martin Fowler","guid":398,"unread":true,"content":"<p>Back in the days when I did live talks, one of my abilities was to finish\n  on time, even if my talk time was cut at the last moment (perhaps due to the\n  prior speaker running over). The key to my ability to do this was to use\n  Expansion Joints - parts of the talk that I'd\n  pre-planned so I could cover them quickly or slowly depending on how much time\n  I had.</p><p>The way I'd do this would be to plan for some topics to be optional. The\n  talk would work if I skipped over them, but I could also witter on about them\n  for five (or ten) minutes. Ideally, each of these topics would get one slide,\n  usually with a bunch of key phrases on it - the headings of what I'd talk\n  about should I be talking about it. When I got to the slide, I'd look at how\n  time was going with the talk. If (as was usually the case) I was running short\n  of time, I could cover the slide in about thirty seconds, saying something\n  like: “in doing this, there's a bunch of things you need to consider, but they\n  are out of scope for today's talk”.</p><p>If, however, I did have time, I could then spend some time talking about\n  them. The slide would be simple, and not provide much of a <a href=\"https://martinfowler.com/bliki/VisualChannel.html\">Visual Channel</a>, but that wasn't so important, after all this material\n  was optional in the first place.</p><p>The single flex-slide was my favorite Expansion Joint, as it was easy to\n  use. Sometimes however my optional topic required a proper visual channel,\n  necessitating dedicated slides. My solution here was good control over\n  slide handling. Presentation tools include the ability to skip over slides\n  while I'm talking, and I made sure I practiced how to use them so I could skip\n  a bunch of slides without the audience knowing. It's crucial here that it's\n  invisible to the audience, I find it looks sloppy if anyone says “in the\n  interests of time I'll skip over these slides”. To do this, however, I do need\n  access to my laptop while presenting, venues that only provide a clicker while\n  loading the slides on some other machine lack that control. That started to\n  happen in my last couple of years, much to my annoyance.</p><p>When creating talks, I was always worried that I would run out of things to\n  say, even though experience told me I reliably crammed more stuff in than I\n  could possibly cover. Expansion Joints helped with this, I could aggressively\n  trim the core talk to less than I needed, and rely on the Expansion Joints to\n  fill the gap. In practice I usually didn't need the Expansion Joints anyway, but\n  their presence helped my confidence.</p><p>Using Expansion Joints was particularly important for me as I never\n  rehearsed my talks. I was always someone whose ability to present was driven by\n  adrenaline. Talking to a rubber duck just didn't work, the duck was clearly\n  every bit as bored as I was. Consequently the first time I gave a talk, I was\n  hazy as to how long it would take. Yet with Expansion Joints in place, I was\n  able to finish a talk right on time.</p><p>Expansion Joints enabled me to give the same talk\n  to different time slots. Sometimes I'd have thirty minutes, sometimes\n  forty-five. With Expansion Joints, I didn't need to change my slides,\n  particularly handy if a time cut (or more rarely a time increase) appeared at the\n  last moment. (Although in my later years, I handled this by doing a <a href=\"https://martinfowler.com/bliki/SuiteOfTalks.html\">Suite Of Talks</a>.)</p><p>Talks that encourage audience interaction need these because we can never\n  predict how much time the interaction will use up. Sometimes we get a steady\n  stream of questions, other times (particularly in Scandinavia, or\n  upper-Midwest America) a lack of questions had me blasting through the agenda.\n  Any such talk needed a double-dose of this temporal ballast.</p><p>Expansion Joints are at their most useful in later parts of the talk, as\n  it's then that I have the most information on how much time I have. Earlier\n  ones can still be handy, particularly if they come after an interactive\n  section when I'd like to rebase my timing.</p><div><p>The name was coined by Neal Ford, Matthew McCullough, and Nathaniel\n    Schutta in their excellent book <a href=\"https://www.amazon.com/gp/product/0321820800/ref=as_li_tl?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=0321820800&amp;linkCode=as2&amp;tag=martinfowlerc-20\">Presentation Patterns</a>.</p></div>","contentLength":4090,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Team OKRs in Action","url":"https://martinfowler.com/articles/team-okr.html","date":1755094560,"author":"Martin Fowler","guid":397,"unread":true,"content":"<p>OKRs have become a popular way to connect strategy with execution in\n      large organizations. But when they are set in a top‑down cascade, they\n      often lose their meaning. Teams receive objectives they didn’t help\n      create, and the result is weak commitment and little real change.\n       describes how \n      high‑performing teams can work in another way. They define their own\n      objectives in an organization that uses a collaborative process to align\n      the team’s OKRs with the broader strategy. With these Team OKRs in place,\n      they create a shared purpose and become the base for a regular cycle of\n      planning, check‑ins, and retrospectives.</p>","contentLength":682,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Impact Intelligence, addressing common objections","url":"https://martinfowler.com/articles/impact-intel.html#objections","date":1755003720,"author":"Martin Fowler","guid":396,"unread":true,"content":"<p> concludes his article in impact\n      intelligence by addressing <a href=\"https://martinfowler.com/articles/impact-intel.html#objections\">five common objections</a> to this activity,\n      including slowing down, lack of agility and collaboration, and the\n      unpredictability of innovation.</p>","contentLength":217,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Quick but worthwhile links","url":"https://martinfowler.com/articles/20250806-links.html","date":1754572860,"author":"Martin Fowler","guid":395,"unread":true,"content":"<blockquote><p>Just met with a 2000+ eng company. Their developers are saving 2+ hours per week thanks to Copilot.</p><ul><li>3 hrs per week due to slow builds</li><li>4 hrs per week on dev environment toil</li><li>2 hrs per week waiting for code reviews</li></ul><p>AI is not a silver bullet.</p></blockquote><p> found it useful to get an AI assistant to <a href=\"https://nik1379616.substack.com/p/can-we-make-ai-code-assistants-smarter\">write its own coding rules</a> by analyzing his code, and then asking it to refine them as worked with it.</p><blockquote><p>the central paradox of using AI assistants effectively: to offload cognitive work to an AI, you must first do the meta-cognitive work of codifying your own development philosophy and collaboration style.</p></blockquote><p>I agree with   that there is a valuable distinction between <a href=\"https://www.honeycomb.io/blog/disposable-code-is-here-to-stay\">disposable versus durable code</a>, and that makes a difference in how we use AI with it.</p><blockquote><p>The difference between disposable code and durable code is not about whether the code was generated by AI or written by a human, or even how difficult it was to write. The cost is defined by the standards you are building to, and the rest of the software development lifecycle: how well you expect to maintain it, extend it, migrate it, understand its behavior, or fix it when it breaks. This is the expensive part of software development, the type that requires deep expertise and familiarity with your language and environment. Disposable code is cheap because you don’t even try to maintain it.</p></blockquote><blockquote><p>It’s not fake intelligence, or artificial empathy, or HAL 9000 with manners. It’s something else. Something that thinks differently, not defectively.</p></blockquote><blockquote><p>Event Sourcing provides perfect episodic memory by storing the complete history of domain changes as immutable events. Every decision, every state transition, every business event is preserved with full context.</p><p>Repository patterns offer domain-focused memory interfaces that understand business concepts. A CustomerRepository knows how to retrieve customer information in ways that preserve business meaning, not just raw data.</p><p>Bounded contexts from Domain-Driven Design partition memory into semantic boundaries, preventing the concept pollution that plagues pure vector-based approaches.</p><p>Aggregates function as cohesive memory clusters with consistency boundaries—exactly what we need for reliable agent behavior.</p></blockquote>","contentLength":2195,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Actions to improve impact intelligence","url":"https://martinfowler.com/articles/impact-intel.html#ActionsToImproveImpactIntelligence","date":1754572800,"author":"Martin Fowler","guid":394,"unread":true,"content":"<p> continues his article on impact\n      intelligence by outlining <a href=\"https://martinfowler.com/articles/impact-intel.html#ActionsToImproveImpactIntelligence\">five actions</a> that can be done to improve impact\n      intelligence: introduce robust demand management, pay down measurement\n      debt introduce impact validation, offer your CFO/COO an alternative to\n      ROI, equip your teams.</p>","contentLength":295,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"The Reformist CTO’s Guide to Impact Intelligence","url":"https://martinfowler.com/articles/impact-intel.html","date":1754486580,"author":"Martin Fowler","guid":393,"unread":true,"content":"<p>The productivity of knowledge workers is hard to quantify and often\n      decoupled from direct business outcomes. The lack of understanding leads\n      to many initiatives, bloated tech spend, and ill-chosen efforts to improve\n      this productivity.  begins an article that\n      looks at how to avoid this by developing an <a href=\"https://martinfowler.com/articles/impact-intel.html\">intelligence of the\n      business impact of their work</a> across a network connecting output to\n      proximate and downstream impact.</p>","contentLength":459,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"How far can we push AI autonomy in code generation?","url":"https://martinfowler.com/articles/pushing-ai-autonomy.html","date":1754401980,"author":"Martin Fowler","guid":392,"unread":true,"content":"<p> reports on a <a href=\"https://martinfowler.com/articles/pushing-ai-autonomy.html\">series of\n      experiments</a> we did to explore how far Generative AI can currently\n      be pushed toward autonomously developing high-quality, up-to-date software\n      without human intervention. As a test case, we created an agentic workflow\n      to build a simple Spring Boot application end to end. We found that the\n      workflow could ultimately generate these simple applications, but still\n      observed significant issues in the results—especially as we increased the\n      complexity. The model would generate features we hadn't asked for, make\n      shifting assumptions around gaps in the requirements, and declare success\n      even when tests were failing. We concluded that while many of our\n      strategies — such as reusable prompts or a reference application — are\n      valuable for enhancing AI-assisted workflows, a human in the loop to\n      supervise generation remains essential.</p>","contentLength":927,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Partner with the AI, throw away the code","url":"https://martinfowler.com/articles/exploring-gen-ai/partner-with-ai-and-throw-away-the-code.html","date":1753971360,"author":"Martin Fowler","guid":391,"unread":true,"content":"<p> shows why the common metric of AI code\n      acceptance has big hole. An LLM <a href=\"https://martinfowler.com/articles/exploring-gen-ai/partner-with-ai-and-throw-away-the-code.html\">can be helpful</a> even if you throw away its\n      code.</p>","contentLength":131,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null}],"tags":["dev"]}