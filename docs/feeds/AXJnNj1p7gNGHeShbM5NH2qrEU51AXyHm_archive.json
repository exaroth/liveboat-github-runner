{"id":"AXJnNj1p7gNGHeShbM5NH2qrEU51AXyHm","title":"Julia Evans","displayTitle":"Dev - Julia Evans","url":"https://jvns.ca/atom.xml","feedLink":"https://jvns.ca/atom.xml","isQuery":false,"isEmpty":false,"isHidden":false,"itemCount":2,"items":[{"title":"Some terminal frustrations","url":"https://jvns.ca/blog/2025/02/05/some-terminal-frustrations/","date":1738774620,"author":"Julia Evans","guid":32,"unread":true,"content":"<blockquote><p>What’s the most frustrating thing about using the terminal for you?</p></blockquote><p>1600 people answered, and I decided to spend a few days categorizing all the\nresponses. Along the way I learned that classifying qualitative data is not\neasy but I gave it my best shot. I ended up building a custom\n<a href=\"https://github.com/jvns/classificator\">tool</a> to make it faster to categorize\neverything.</p><p>As with all of my surveys the methodology isn’t particularly scientific. I just\nposted the survey to Mastodon and Twitter, ran it for a couple of days, and got\nanswers from whoever happened to see it and felt like responding.</p><p>Here are the top categories of frustrations!</p><p>I think it’s worth keeping in mind while reading these comments that</p><ul><li>40% of people answering this survey have been using the terminal for </li><li>95% of people answering the survey have been using the terminal for at least 4 years</li></ul><p>These comments aren’t coming from total beginners.</p><p>Here are the categories of frustrations! The number in brackets is the number\nof people with that frustration. I’m mostly writing this up for myself because\nI’m trying to write a zine about the terminal and I wanted to get a sense for\nwhat people are having trouble with.</p><p>People talked about struggles remembering:</p><ul><li>the syntax for CLI tools like awk, jq, sed, etc</li><li>keyboard shortcuts for tmux, text editing, etc</li></ul><blockquote><p>There are just so many little “trivia” details to remember for full\nfunctionality. Even after all these years I’ll sometimes forget where it’s 2\nor 1 for stderr, or forget which is which for  and .</p></blockquote><h3>switching terminals is hard (91)</h3><p>People talked about struggling with switching systems (for example home/work\ncomputer or when SSHing) and running into:</p><ul><li>OS differences in keyboard shortcuts (like Linux vs Mac)</li><li>systems which don’t have their preferred text editor (“no vim” or “only vim”)</li><li>different versions of the same command (like Mac OS grep vs GNU grep)</li><li>a shell they aren’t used to (“the subtle differences between zsh and bash”)</li></ul><p>as well as differences inside the same system like pagers being not consistent\nwith each other (git diff pagers, other pagers).</p><blockquote><p>I got used to fish and vi mode which are not available when I ssh into\nservers, containers.</p></blockquote><p>Lots of problems with color, like:</p><ul><li>programs setting colors that are unreadable with a light background color</li><li>finding a colorscheme they like (and getting it to work consistently across different apps)</li><li>color not working inside several layers of SSH/tmux/etc</li><li>not wanting color at all and struggling to turn it off</li></ul><p>This comment felt relatable to me:</p><blockquote><p>Getting my terminal theme configured in a reasonable way between the terminal\nemulator and fish (I did this years ago and remember it being tedious and\nfiddly and now feel like I’m locked into my current theme because it works\nand I dread touching any of that configuration ever again).</p></blockquote><p>Half of the comments on keyboard shortcuts were about how on Linux/Windows, the\nkeyboard shortcut to copy/paste in the terminal is different from in the rest\nof the OS.</p><p>Some other issues with keyboard shortcuts other than copy/paste:</p><ul><li>using  in a browser-based terminal and closing the window</li><li>the terminal only supports a limited set of keyboard shortcuts (no\n, no , no , lots of  shortcuts aren’t\npossible like )</li><li>the OS stopping you from using a terminal keyboard shortcut (like by default\nMac OS uses  for something else)</li><li>issues using emacs in the terminal</li><li>backspace not working (2)</li></ul><h3>other copy and paste issues (75)</h3><p>Aside from “the keyboard shortcut for copy and paste is different”, there were\na lot of OTHER issues with copy and paste, like:</p><ul><li>how tmux and the terminal emulator both do copy/paste in different ways</li><li>dealing with many different clipboards (system clipboard, vim clipboard, the\n“middle click” clipboard on Linux, tmux’s clipboard, etc) and potentially\nsynchronizing them</li><li>random spaces added when copying from the terminal</li><li>pasting multiline commands which automatically get run in a terrifying way</li><li>wanting a way to copy text without using the mouse</li></ul><p>There were lots of comments about this, which all came down to the same basic\ncomplaint – it’s hard to discover useful tools or features! This comment kind of\nsummed it all up:</p><blockquote><p>How difficult it is to learn independently. Most of what I know is an\nassorted collection of stuff I’ve been told by random people over the years.</p></blockquote><h3>steep learning curve (44)</h3><p>A lot of comments about it generally having a steep learning curve. A couple of\nexample comments:</p><blockquote><p>After 15 years of using it, I’m not much faster than using it than I was 5 or\nmaybe even 10 years ago.</p></blockquote><blockquote><p>That I know I could make my life easier by learning more about the shortcuts\nand commands and configuring the terminal but I don’t spend the time because it\nfeels overwhelming.</p></blockquote><p>Some issues with shell history:</p><ul><li>history not being shared between terminal tabs (16)</li><li>limits that are too short (4)</li><li>history not being restored when terminal tabs are restored</li><li>losing history because the terminal crashed</li><li>not knowing how to search history</li></ul><blockquote><p>It wasted a lot of time until I figured it out and still annoys me that\n“history” on zsh has such a small buffer;  I have to type “history 0” to get\nany useful length of history.</p></blockquote><ul><li>documentation being generally opaque</li><li>lack of examples in man pages</li><li>programs which don’t have man pages</li></ul><p>Here’s a representative comment:</p><blockquote><p>Finding good examples and docs. Man pages often not enough, have to wade\nthrough stack overflow</p></blockquote><p>A few issues with scrollback:</p><ul><li>programs printing out too much data making you lose scrollback history</li><li>resizing the terminal messes up the scrollback</li><li>GUI programs that you start in the background printing stuff out that gets in\nthe way of other programs’ outputs</li></ul><blockquote><p>When resizing the terminal (in particular: making it narrower) leads to\nbroken rewrapping of the scrollback content because the commands formatted\ntheir output based on the terminal window width.</p></blockquote><p>Lots of comments about how the terminal feels hampered by legacy decisions and\nhow users often end up needing to learn implementation details that feel very\nesoteric. One example comment:</p><blockquote><p>Most of the legacy cruft, it would be great to have a green field\nimplementation of the CLI interface.</p></blockquote><p>Lots of complaints about POSIX shell scripting. There’s a general feeling that\nshell scripting is difficult but also that switching to a different less\nstandard scripting language (fish, nushell, etc) brings its own problems.</p><blockquote><p>Shell scripting. My tolerance to ditch a shell script and go to a scripting\nlanguage is pretty low. It’s just too messy and powerful. Screwing up can be\ncostly so I don’t even bother.</p></blockquote><p>Some more issues that were mentioned at least 10 times:</p><ul><li>(31) inconsistent command line arguments: is it -h or help or –help?</li><li>(24) keeping dotfiles in sync across different systems</li><li>(23) performance (e.g. “my shell takes too long to start”)</li><li>(20) window management (potentially with some combination of tmux tabs, terminal tabs, and multiple terminal windows. Where did that shell session go?)</li><li>(17) generally feeling scared/uneasy (“The debilitating fear that I’m going\nto do some mysterious Bad Thing with a command and I will have absolutely no\nidea how to fix or undo it or even really figure out what happened”)</li><li>(16) terminfo issues (“Having to learn about terminfo if/when I try a new terminal emulator and ssh elsewhere.”)</li><li>(16) lack of image support (sixel etc)</li><li>(15) SSH issues (like having to start over when you lose the SSH connection)</li><li>(15) various tmux/screen issues (for example lack of integration between tmux and the terminal emulator)</li><li>(13) the terminal getting messed up for various reasons (pressing , ing a binary, etc)</li><li>(12) quoting/escaping in the shell</li><li>(11) various Windows/PowerShell issues</li></ul><p>There were also 122 answers to the effect of “nothing really” or “only that I\ncan’t do EVERYTHING in the terminal”</p><blockquote><p>Think I’ve found work arounds for most/all frustrations</p></blockquote><p>I’m not going to make a lot of commentary on these results, but here are a\ncouple of categories that feel related to me:</p><ul><li>remembering syntax &amp; history (often the thing you need to remember is something you’ve run before!)</li><li>discoverability &amp; the learning curve (the lack of discoverability is definitely a big part of what makes it hard to learn)</li><li>“switching systems is hard” &amp; “it feels outdated” (tools that haven’t really\nchanged in 30 or 40 years have many problems but they do tend to be always\n no matter what system you’re on, which is very useful and makes them\nhard to stop using)</li></ul><p>Trying to categorize all these results in a reasonable way really gave me an\nappreciation for social science researchers’ skills.</p>","contentLength":8518,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"What's involved in getting a \"modern\" terminal setup?","url":"https://jvns.ca/blog/2025/01/11/getting-a-modern-terminal-setup/","date":1736588761,"author":"Julia Evans","guid":31,"unread":true,"content":"<p>Hello! Recently I ran a terminal survey and I asked people what frustrated\nthem. One person commented:</p><blockquote><p>There are so many pieces to having a modern terminal experience. I wish it\nall came out of the box.</p></blockquote><p>My immediate reaction was “oh, getting a modern terminal experience isn’t that\nhard, you just need to….”, but the more I thought about it, the longer the\n“you just need to…” list got, and I kept thinking about more and more\ncaveats.</p><p>So I thought I would write down some notes about what it means to me personally\nto have a “modern” terminal experience and what I think can make it hard for\npeople to get there.</p><h3>what is a “modern terminal experience”?</h3><p>Here are a few things that are important to me, with which part of the system\nis responsible for them:</p><ul><li><strong>multiline support for copy and paste</strong>: if you paste 3 commands in your shell, it should not immediatly run them all! That’s scary! (, )</li><li>: if I run a command in my shell, it should be saved forever, not deleted after 500 history entries or whatever. Also I want commands to be saved to the history immediately when I run them, not only when I exit the shell session ()</li><li>: I can’t live without having my  and  in my prompt ()</li><li>: this is important to me because I find it MUCH easier to theme neovim with 24-bit colour support than in a terminal with only 256 colours ()</li><li> between vim and my operating system so that when I copy in Firefox, I can just press  in vim to paste (, maybe the OS/terminal emulator too)</li><li>: for example commands like git should have command-specific autocomplete ()</li><li> ()</li><li>: I spend a lot of time in my terminal, I want it to look nice and I want its theme to match my terminal editor’s theme. (, )</li><li><strong>automatic terminal fixing</strong>: If a programs prints out some weird escape\ncodes that mess up my terminal, I want that to automatically get reset so\nthat my terminal doesn’t get messed up ()</li><li>: I want  to work ( or )</li><li><strong>being able to use the scroll wheel in programs like </strong>: ( and )</li></ul><p>There are a million other terminal conveniences out there and different people\nvalue different things, but those are the ones that I would be really unhappy\nwithout.</p><h3>how I achieve a “modern experience”</h3><ol><li>use the  shell. Mostly don’t configure it, except to:\n<ul><li>set the  environment variable to my favourite terminal editor</li></ul></li><li>use any terminal emulator with 24-bit colour support. In the past I’ve used\nGNOME Terminal, Terminator, and iTerm, but I’m not picky about this. I don’t really\nconfigure it other than to choose a font.</li><li>use , with a configuration that I’ve been very slowly building over the last 9 years or so (the last time I deleted my vim config and started from scratch was 9 years ago)</li></ol><p>A few things that affect my approach:</p><ul><li>I don’t spend a lot of time SSHed into other machines</li><li>I’d rather use the mouse a little than come up with keyboard-based ways to do everything</li><li>I work on a lot of small projects, not one big project</li></ul><h3>some “out of the box” options for a “modern” experience</h3><p>What if you want a nice experience, but don’t want to spend a lot of time on\nconfiguration? Figuring out how to configure vim in a way that I was satisfied\nwith really did take me like ten years, which is a long time!</p><p>My best ideas for how to get a reasonable terminal experience with minimal\nconfig are:</p><ul><li>terminal emulator: almost anything with 24-bit colour support, for example all of these are popular:\n<ul><li>linux: GNOME Terminal, Konsole, Terminator, xfce4-terminal</li><li>mac: iTerm (Terminal.app doesn’t have 256-colour support)</li><li>cross-platform: kitty, alacritty, wezterm, or ghostty</li></ul></li><li>shell config:\n<ul><li>set the  environment variable to your favourite terminal text\neditor</li><li>maybe alias  to </li></ul></li><li>text editor: this is a tough one, maybe <a href=\"https://micro-editor.github.io/\">micro</a> or <a href=\"https://helix-editor.com/\">helix</a>? I haven’t used\neither of them seriously but they both seem like very cool projects and I\nthink it’s amazing that you can just use all the usual GUI editor commands\n( to copy,  to paste,  to select all) in micro and\nthey do what you’d expect. I would probably try switching to helix except\nthat retraining my vim muscle memory seems way too hard. Also helix doesn’t\nhave a GUI or plugin system yet.</li></ul><p>Personally I  use xterm, rxvt, or Terminal.app as a terminal emulator,\nbecause I’ve found in the past that they’re missing core features (like 24-bit\ncolour in Terminal.app’s case) that make the terminal harder to use for me.</p><p>I don’t want to pretend that getting a “modern” terminal experience is easier\nthan it is though – I think there are two issues that make it hard. Let’s talk\nabout them!</p><h3>issue 1 with getting to a “modern” experience: the shell</h3><p>bash and zsh are by far the two most popular shells, and neither of them\nprovide a default experience that I would be happy using out of the box, for\nexample:</p><ul><li>you need to customize your prompt</li><li>they don’t come with git completions by default, you have to set them up</li><li>by default, bash only stores 500 (!) lines of history and (at least on Mac OS)\nzsh is only configured to store 2000 lines, which is still not a lot</li><li>I find bash’s tab completion very frustrating, if there’s more than\none match then you can’t tab through them</li></ul><p>And even though <a href=\"https://jvns.ca/blog/2024/09/12/reasons-i--still--love-fish/\">I love fish</a>, the fact\nthat it isn’t POSIX does make it hard for a lot of folks to make the switch.</p><p>Of course it’s totally possible to learn how to customize your prompt in bash\nor whatever, and it doesn’t even need to be that complicated (in bash I’d\nprobably start with something like <code>export PS1='[\\u@\\h \\W$(__git_ps1 \" (%s)\")]\\$ '</code>, or maybe use <a href=\"https://starship.rs/\">starship</a>).\nBut each of these “not complicated” things really does add up and it’s\nespecially tough if you need to keep your config in sync across several\nsystems.</p><p>An extremely popular solution to getting a “modern” shell experience is\n<a href=\"https://ohmyz.sh/\">oh-my-zsh</a>. It seems like a great project and I know a lot\nof people use it very happily, but I’ve struggled with configuration systems\nlike that in the past – it looks like right now the base oh-my-zsh adds about\n3000 lines of config, and often I find that having an extra configuration\nsystem makes it harder to debug what’s happening when things go wrong. I\npersonally have a tendency to use the system to add a lot of extra plugins,\nmake my system slow, get frustrated that it’s slow, and then delete it\ncompletely and write a new config from scratch.</p><h3>issue 2 with getting to a “modern” experience: the text editor</h3><p>In the terminal survey I ran recently, the most popular terminal text editors\nby far were , , and .</p><p>I think the main options for terminal text editors are:</p><ul><li>use vim or emacs and configure it to your liking, you can probably have any\nfeature you want if you put in the work</li><li>use nano and accept that you’re going to have a pretty limited experience\n(for example I don’t think you can select text with the mouse and then “cut”\nit in nano)</li><li>use  or  which seem to offer a pretty good out-of-the-box\nexperience, potentially occasionally run into issues with using a less\nmainstream text editor</li><li>just avoid using a terminal text editor as much as possible, maybe use VSCode, use\nVSCode’s terminal for all your terminal needs, and mostly never edit files in\nthe terminal. Or I know a lot of people use  as their  in the terminal.</li></ul><h3>issue 3: individual applications</h3><p>The last issue is that sometimes individual programs that I use are kind of\nannoying. For example on my Mac OS machine,  doesn’t support\nthe  keyboard shortcut. Fixing this to get a reasonable\nterminal experience in SQLite was a little complicated, I had to:</p><ul><li>realize why this is happening (Mac OS won’t ship GNU tools, and “Ctrl-Left arrow” support comes from GNU readline)</li><li>find a workaround (install sqlite from homebrew, which does have readline support)</li><li>adjust my environment (put Homebrew’s sqlite3 in my PATH)</li></ul><p>I find that debugging application-specific issues like this is really not easy\nand often it doesn’t feel “worth it” – often I’ll end up just dealing with\nvarious minor inconveniences because I don’t want to spend hours investigating\nthem. The only reason I was even able to figure this one out at all is that\nI’ve been spending a huge amount of time thinking about the terminal recently.</p><p>A big part of having a “modern” experience using terminal programs is just\nusing newer terminal programs, for example I can’t be bothered to learn a\nkeyboard shortcut to sort the columns in , but in   I can just click\non a column heading with my mouse to sort it. So I use htop instead! But discovering new more “modern” command line tools isn’t easy (though\nI made <a href=\"https://jvns.ca/blog/2022/04/12/a-list-of-new-ish--command-line-tools/\">a list here</a>),\nfinding ones that I actually like using in practice takes time, and if you’re\nSSHed into another machine, they won’t always be there.</p><h3>everything affects everything else</h3><p>Something I find tricky about configuring my terminal to make everything “nice”\nis that changing one seemingly small thing about my workflow can really affect\neverything else. For example right now I don’t use tmux. But if I needed to use\ntmux again (for example because I was doing a lot of work SSHed into another\nmachine), I’d need to think about a few things, like:</p><ul><li>if I wanted tmux’s copy to synchronize with my system clipboard over\nSSH, I’d need to make sure that my terminal emulator has <a href=\"https://old.reddit.com/r/vim/comments/k1ydpn/a_guide_on_how_to_copy_text_from_anywhere/\">OSC 52 support</a></li><li>if I wanted to use iTerm’s tmux integration (which makes tmux tabs into iTerm\ntabs), I’d need to change how I configure colours – right now I set them\nwith a <a href=\"https://github.com/chriskempson/base16-shell/blob/588691ba71b47e75793ed9edfcfaa058326a6f41/scripts/base16-solarized-light.sh\">shell script</a> that I run when my shell starts, but that means the\ncolours get lost when restoring a tmux session.</li></ul><p>and probably more things I haven’t thought of. “Using tmux means that I have to\nchange how I manage my colours” sounds unlikely, but that really did happen to\nme and I decided “well, I don’t want to change how I manage colours right now,\nso I guess I’m not using that feature!”.</p><p>It’s also hard to remember which features I’m relying on – for example maybe\nmy current terminal  have OSC 52 support and because copying from tmux over SSH\nhas always Just Worked I don’t even realize that that’s something I need, and\nthen it mysteriously stops working when I switch terminals.</p><p>Personally even though I think my setup is not  complicated, it’s taken\nme 20 years to get to this point! Because terminal config changes are so likely\nto have unexpected and hard-to-understand consequences, I’ve found that if I\nchange a lot of terminal configuration all at once it makes it much harder to\nunderstand what went wrong if there’s a problem, which can be really\ndisorienting.</p><p>So I usually prefer to make pretty small changes, and accept that changes can\nmight take me a REALLY long time to get used to. For example I switched from\nusing  to <a href=\"https://github.com/eza-community/eza\">eza</a> a year or two ago and\nwhile I like it (because  prints human-readable file sizes by default)\nI’m still not quite sure about it. But also sometimes it’s worth it to make a\nbig change, like I made the switch to fish (from bash) 10 years ago and I’m\nvery happy I did.</p><h3>getting a “modern” terminal is not that easy</h3><p>Trying to explain how “easy” it is to configure your terminal really just made\nme think that it’s kind of hard and that I still sometimes get confused.</p><p>I’ve found that there’s never one perfect way to configure things in the\nterminal that will be compatible with every single other thing. I just need to\ntry stuff, figure out some kind of locally stable state that works for me, and\naccept that if I start using a new tool it might disrupt the system and I might\nneed to rethink things.</p>","contentLength":11441,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null}],"tags":["dev"]}