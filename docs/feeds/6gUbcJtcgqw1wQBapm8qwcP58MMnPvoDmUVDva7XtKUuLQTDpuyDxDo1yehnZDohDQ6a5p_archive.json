{"id":"6gUbcJtcgqw1wQBapm8qwcP58MMnPvoDmUVDva7XtKUuLQTDpuyDxDo1yehnZDohDQ6a5p","title":"Slashdot: Developers","displayTitle":"Dev - Slashdot - Dev","url":"http://rss.slashdot.org/Slashdot/slashdotDevelopers","feedLink":"https://developers.slashdot.org/","isQuery":false,"isEmpty":false,"isHidden":false,"items":[{"title":"Should First-Year Programming Students Be Taught With Python and Java?","url":"https://developers.slashdot.org/story/25/01/05/1853210/should-first-year-programming-students-be-taught-with-python-and-java?utm_source=rss1.0mainlinkanon&utm_medium=feed","date":1736105700,"author":"EditorDavid","unread":true,"content":"Long-time Slashdot reader theodp writes: In an Op-ed for The Huntington News, fourth year Northeastern University CS student Derek Kaplan argues that real pedagogical merit is what should count when deciding which language to use to teach CS fundamentals (aka 'Fundies'). He makes the case for Northeastern to reconsider its decision to move from Racket to Python and Java later this year in an overhaul of its first-year curriculum. \n\n\"Students will get extensive training in Python, which is currently the most requested language by co-op employers,\" Northeastern explains (some two decades after a Slashdot commenter made the same Hot Languages = Jobs observation in a spirited 2001 debate on Java as a CS introductory language)... \n\n\"I have often heard computer science students complain that Fundies 1 teaches Racket instead of a 'useful language' like Python,\" Kaplan writes. \"But the point of Fundies is not to teach Racket &mdash; it is to teach program design skills that can be applied using any programming language. Racket is just the tool it uses to do so. A student who does well in Fundies will have no difficulty applying the same skills to Python or any other language. And with how fast the tech industry changes, is it really worth having a course that teaches just Python when tomorrow, some other language might dominate the industry? Our current curriculum focuses on timeless principles rather than fleeting trends.\" Also expressing concerns about the selection of suitable languages for novice programming is King's College CS Prof Michael K&#246;lling, who explains, \"One of the drivers is the perceived usefulness of the language in a real-world context. Students (and their parents) often have opinions which language is 'better' to learn. In forming these opinions, the definition of 'better' can often be vague and driven by limited insight. One strong aspect commonly cited is the perceived usefulness of a language in the 'real world.' If a language is widely used in industry, it is more likely to be seen as a useful language to learn.\" K&#246;lling's recommendation? \"We need a new language for teaching novices at secondary school and introductory university level,\" K&#246;lling concludes. \"This language should be designed explicitly for teaching [...] Maintenance and adaptation of this language should be driven by pedagogical considerations, not by industry needs.\" While noble in intent, one suspects Kaplan and K&#246;lling may be on a quixotic quest in a money wins world, outgunned by the demands, resources, and influence of tech giants like Amazon &mdash; the top employer of Northeastern MSCS program grads &mdash; who pushed back against NSF advice to deemphasize Java in high school CS and dropped $15 million to have tech-backed nonprofit Code.org develop and push a new Java-based, powered-by-AWS CS curriculum into high schools with the support of a consortium of politicians, educators, and tech companies. Echoing Northeastern, an Amazon press release argued the new Java-based curriculum \"best prepares students for the next step in their education and careers.\"\n\n<p><div class=\"share_submission\" style=\"position:relative;\">\n<a class=\"slashpop\" href=\"http://twitter.com/home?status=Should+First-Year+Programming+Students+Be+Taught+With+Python+and+Java%3F%3A+https%3A%2F%2Fdevelopers.slashdot.org%2Fstory%2F25%2F01%2F05%2F1853210%2F%3Futm_source%3Dtwitter%26utm_medium%3Dtwitter\"><img src=\"https://a.fsdn.com/sd/twitter_icon_large.png\"></a>\n<a class=\"slashpop\" href=\"http://www.facebook.com/sharer.php?u=https%3A%2F%2Fdevelopers.slashdot.org%2Fstory%2F25%2F01%2F05%2F1853210%2Fshould-first-year-programming-students-be-taught-with-python-and-java%3Futm_source%3Dslashdot%26utm_medium%3Dfacebook\"><img src=\"https://a.fsdn.com/sd/facebook_icon_large.png\"></a>\n\n\n\n</div></p><p><a href=\"https://developers.slashdot.org/story/25/01/05/1853210/should-first-year-programming-students-be-taught-with-python-and-java?utm_source=rss1.0moreanon&amp;utm_medium=feed\">Read more of this story</a> at Slashdot.</p>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"New System Auto-Converts C To Memory-Safe Rust, But There's a Catch","url":"https://developers.slashdot.org/story/25/01/03/133213/new-system-auto-converts-c-to-memory-safe-rust-but-theres-a-catch?utm_source=rss1.0mainlinkanon&utm_medium=feed","date":1735917720,"author":"msmash","unread":true,"content":"Researchers from Inria and Microsoft have developed a system to automatically convert specific types of C programming code into memory-safe Rust code, addressing growing cybersecurity concerns about memory vulnerabilities in software systems. \n\nThe technique, detailed in a new paper, requires programmers to use a restricted version of C called \"Mini-C\" that excludes features like pointer arithmetic. The researchers successfully tested their conversion system on two major code libraries, including the 80,000-line HACL* cryptographic library. Parts of the converted code have already been integrated into Mozilla's NSS and OpenSSH security systems, according to the researchers. Memory safety errors account for 76% of Android vulnerabilities in 2019.<p><div class=\"share_submission\" style=\"position:relative;\">\n<a class=\"slashpop\" href=\"http://twitter.com/home?status=New+System+Auto-Converts+C+To+Memory-Safe+Rust%2C+But+There's+a+Catch%3A+https%3A%2F%2Fdevelopers.slashdot.org%2Fstory%2F25%2F01%2F03%2F133213%2F%3Futm_source%3Dtwitter%26utm_medium%3Dtwitter\"><img src=\"https://a.fsdn.com/sd/twitter_icon_large.png\"></a>\n<a class=\"slashpop\" href=\"http://www.facebook.com/sharer.php?u=https%3A%2F%2Fdevelopers.slashdot.org%2Fstory%2F25%2F01%2F03%2F133213%2Fnew-system-auto-converts-c-to-memory-safe-rust-but-theres-a-catch%3Futm_source%3Dslashdot%26utm_medium%3Dfacebook\"><img src=\"https://a.fsdn.com/sd/facebook_icon_large.png\"></a>\n\n\n\n</div></p><p><a href=\"https://developers.slashdot.org/story/25/01/03/133213/new-system-auto-converts-c-to-memory-safe-rust-but-theres-a-catch?utm_source=rss1.0moreanon&amp;utm_medium=feed\">Read more of this story</a> at Slashdot.</p>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Over 3.1 Million Fake 'Stars' on GitHub Projects Used To Boost Rankings","url":"https://developers.slashdot.org/story/24/12/31/1726239/over-31-million-fake-stars-on-github-projects-used-to-boost-rankings?utm_source=rss1.0mainlinkanon&utm_medium=feed","date":1735666020,"author":"msmash","unread":true,"content":"Researchers have uncovered widespread manipulation of GitHub's star-rating system, with over 3.1 million fraudulent stars identified across 15,835 repositories, according to a new study by Socket, Carnegie Mellon University, and North Carolina State University. \n\nThe research team analyzed 20TB of data from GHArchive, spanning 6 billion GitHub events from 2019 to 2024, using their \"StarScout\" detection tool. The tool identified 278,000 accounts engaging in coordinated inauthentic behavior to artificially boost repository rankings. \n\nGitHub uses stars, similar to social media likes, to rank projects and recommend content to users. The platform has previously encountered malicious exploitation of this system, including the \"Stargazers Ghost Network\" malware operation discovered last summer. Approximately 91% of flagged repositories and 62% of suspicious accounts were removed by October 2024.<p><div class=\"share_submission\" style=\"position:relative;\">\n<a class=\"slashpop\" href=\"http://twitter.com/home?status=Over+3.1+Million+Fake+'Stars'+on+GitHub+Projects+Used+To+Boost+Rankings%3A+https%3A%2F%2Fdevelopers.slashdot.org%2Fstory%2F24%2F12%2F31%2F1726239%2F%3Futm_source%3Dtwitter%26utm_medium%3Dtwitter\"><img src=\"https://a.fsdn.com/sd/twitter_icon_large.png\"></a>\n<a class=\"slashpop\" href=\"http://www.facebook.com/sharer.php?u=https%3A%2F%2Fdevelopers.slashdot.org%2Fstory%2F24%2F12%2F31%2F1726239%2Fover-31-million-fake-stars-on-github-projects-used-to-boost-rankings%3Futm_source%3Dslashdot%26utm_medium%3Dfacebook\"><img src=\"https://a.fsdn.com/sd/facebook_icon_large.png\"></a>\n\n\n\n</div></p><p><a href=\"https://developers.slashdot.org/story/24/12/31/1726239/over-31-million-fake-stars-on-github-projects-used-to-boost-rankings?utm_source=rss1.0moreanon&amp;utm_medium=feed\">Read more of this story</a> at Slashdot.</p>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"'International Obfuscated C Code Contest' Will Relaunch, Celebrating 40th Anniversary","url":"https://developers.slashdot.org/story/24/12/29/1730224/international-obfuscated-c-code-contest-will-relaunch-celebrating-40th-anniversary?utm_source=rss1.0mainlinkanon&utm_medium=feed","date":1735493640,"author":"EditorDavid","unread":true,"content":"After a four-year hiatus, 2025 will see the return of the International Obfuscated C Code Contest. Started in 1984 (and inspired partly by a bug in the classic Bourne shell), it's \"the Internet's oldest contest,\" acording to their official social media account on Mastodon. \n\nThe contest enters its \"pending\" state today at 2024-12-29 23:58 UTC &mdash; meaning an opening date for submissions has been officially scheduled (for January 31st) as well as a closing date roughly eight weeks later on April 1st, 2025. That's according to the newly-released (proposed and tentative) rules and guidelines, listing contest goals like \"show the importance of programming style, in an ironic way\" and \"stress C compilers with unusual code.\" And the contest's home page adds an additional goal: \"to have fun with C!\" \n\nExcerpts from the official rules:\n\n\nRule 0 \nJust as C starts at 0, so the IOCCC starts at rule 0. :-) \n\nRule 1 \nYour submission must be a complete program.... \n\nRule 5 \nYour submission MUST not modify the content or filename of any part of your original submission including, but not limited to prog.c, the Makefile (that we create from your how to build instructions), as well as any data files you submit.... \n\n\nRule 6 \nI am not a rule, I am a free(void *human); \n while (!(ioccc(rule(you(are(number(6)))))) {\n ha_ha_ha();\n } \n\n \nRule 6 is clearly a reference to The Prisoner... (Some other rules are even sillier...) And the guidelines include their own jokes:\n You are in a maze of twisty guidelines, all different. \n\nThere are at least zero judges who think that Fideism has little or nothing to do with the IOCCC judging process.... \n\n\nWe suggest that you avoid trying for the 'smallest self-replicating' source. The smallest, a zero byte entry, won in 1994.\n \n\nAnd this weekend there was also a second announcement:\n\nAfter a 4 year effort by a number of people, with over 6168+ commits, the Great Fork Merge has been completed and the Official IOCCC web site has been updated! A significant number of improvements has been made to the IOCCC winning entries. A number of fixes and improvements involve the ability of reasonable modern Unix/Linux systems to be able to compile and even run them. \n\nThanks to long-time Slashdot reader &mdash; and C programmer &mdash; achowe for sharing the news.<p><div class=\"share_submission\" style=\"position:relative;\">\n<a class=\"slashpop\" href=\"http://twitter.com/home?status='International+Obfuscated+C+Code+Contest'+Will+Relaunch%2C+Celebrating+40th+Anniversary%3A+https%3A%2F%2Fdevelopers.slashdot.org%2Fstory%2F24%2F12%2F29%2F1730224%2F%3Futm_source%3Dtwitter%26utm_medium%3Dtwitter\"><img src=\"https://a.fsdn.com/sd/twitter_icon_large.png\"></a>\n<a class=\"slashpop\" href=\"http://www.facebook.com/sharer.php?u=https%3A%2F%2Fdevelopers.slashdot.org%2Fstory%2F24%2F12%2F29%2F1730224%2Finternational-obfuscated-c-code-contest-will-relaunch-celebrating-40th-anniversary%3Futm_source%3Dslashdot%26utm_medium%3Dfacebook\"><img src=\"https://a.fsdn.com/sd/facebook_icon_large.png\"></a>\n\n\n\n</div></p><p><a href=\"https://developers.slashdot.org/story/24/12/29/1730224/international-obfuscated-c-code-contest-will-relaunch-celebrating-40th-anniversary?utm_source=rss1.0moreanon&amp;utm_medium=feed\">Read more of this story</a> at Slashdot.</p>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Python in 2024: Faster, More Powerful, and More Popular Than Ever","url":"https://developers.slashdot.org/story/24/12/29/0534253/python-in-2024-faster-more-powerful-and-more-popular-than-ever?utm_source=rss1.0mainlinkanon&utm_medium=feed","date":1735461240,"author":"EditorDavid","unread":true,"content":"\"Over the course of 2024, Python has proven again and again why it's one of the most popular, useful, and promising programming languages out there,\" writes InfoWorld:\n\nThe latest version of the language pushes the envelope further for speed and power, sheds many of Python's most decrepit elements, and broadens its appeal with developers worldwide. Here's a look back at the year in Python. \n\nIn the biggest news of the year, the core Python development team took a major step toward overcoming one of Python's longstanding drawbacks: the Global Interpreter Lock or \"GIL,\" a mechanism for managing interpreter state. The GIL prevents data corruption across threads in Python programs, but it comes at the cost of making threads nearly useless for CPU-bound work. Over the years, various attempts to remove the GIL ended in tears, as they made single-threaded Python programs drastically slower. But the most recent no-GIL project goes a long way toward fixing that issue &mdash; enough that it's been made available for regular users to try out. \n\nThe no-GIL or \"free-threaded\" builds are still considered experimental, so they shouldn't be deployed in production yet. The Python team wants to alleviate as much of the single-threaded performance impact as possible, along with any other concerns, before giving the no-GIL builds the full green light. It's also entirely possible these builds may never make it to full-blown production-ready status, but the early signs are encouraging. \nAnother forward-looking feature introduced in Python 3.13 is the experimental just-in-time compiler or JIT. It expands on previous efforts to speed up the interpreter by generating machine code for certain operations at runtime. Right now, the speedup doesn't amount to much (maybe 5% for most programs), but future versions of Python will expand the JIT's functionality where it yields real-world payoffs.\n \nPython is now more widely used than JavaScript on GitHub (thanks partly to its role in AI and data science code).<p><div class=\"share_submission\" style=\"position:relative;\">\n<a class=\"slashpop\" href=\"http://twitter.com/home?status=Python+in+2024%3A+Faster%2C+More+Powerful%2C+and+More+Popular+Than+Ever%3A+https%3A%2F%2Fdevelopers.slashdot.org%2Fstory%2F24%2F12%2F29%2F0534253%2F%3Futm_source%3Dtwitter%26utm_medium%3Dtwitter\"><img src=\"https://a.fsdn.com/sd/twitter_icon_large.png\"></a>\n<a class=\"slashpop\" href=\"http://www.facebook.com/sharer.php?u=https%3A%2F%2Fdevelopers.slashdot.org%2Fstory%2F24%2F12%2F29%2F0534253%2Fpython-in-2024-faster-more-powerful-and-more-popular-than-ever%3Futm_source%3Dslashdot%26utm_medium%3Dfacebook\"><img src=\"https://a.fsdn.com/sd/facebook_icon_large.png\"></a>\n\n\n\n</div></p><p><a href=\"https://developers.slashdot.org/story/24/12/29/0534253/python-in-2024-faster-more-powerful-and-more-popular-than-ever?utm_source=rss1.0moreanon&amp;utm_medium=feed\">Read more of this story</a> at Slashdot.</p>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Bret Taylor Urges Rethink of Software Development as AI Reshapes Industry","url":"https://developers.slashdot.org/story/24/12/25/1611229/bret-taylor-urges-rethink-of-software-development-as-ai-reshapes-industry?utm_source=rss1.0mainlinkanon&utm_medium=feed","date":1735143000,"author":"msmash","unread":true,"content":"Software development is entering an \"autopilot era\" with AI coding assistants, but the industry needs to prepare for full autonomy, argues former Salesforce co-CEO Bret Taylor. Drawing parallels with self-driving cars, he suggests the role of software engineers will evolve from code authors to operators of code-generating machines. Taylor, a board member of OpenAI and who once rewrote Google Maps over a weekend, calls for new programming systems, languages, and verification methods to ensure AI-generated code remains robust and secure. From his post: In the Autonomous Era of software engineering, the role of a software engineer will likely transform from being the author of computer code to being the operator of a code generating machine. What is a computer programming system built natively for that workflow? \n\nIf generating code is no longer a limiting factor, what types of programming languages should we build? \n\nIf a computer is generating most code, how do we make it easy for a software engineer to verify it does what they intend? What is the role of programming language design (e.g., what Rust did for memory safety)? What is the role of formal verification? What is the role of tests, CI/CD, and development workflows? \n\nToday, a software engineer's primary desktop is their editor. What is the Mission Control for a software engineer in the era of autonomous development?<p><div class=\"share_submission\" style=\"position:relative;\">\n<a class=\"slashpop\" href=\"http://twitter.com/home?status=Bret+Taylor+Urges+Rethink+of+Software+Development+as+AI+Reshapes+Industry%3A+https%3A%2F%2Fdevelopers.slashdot.org%2Fstory%2F24%2F12%2F25%2F1611229%2F%3Futm_source%3Dtwitter%26utm_medium%3Dtwitter\"><img src=\"https://a.fsdn.com/sd/twitter_icon_large.png\"></a>\n<a class=\"slashpop\" href=\"http://www.facebook.com/sharer.php?u=https%3A%2F%2Fdevelopers.slashdot.org%2Fstory%2F24%2F12%2F25%2F1611229%2Fbret-taylor-urges-rethink-of-software-development-as-ai-reshapes-industry%3Futm_source%3Dslashdot%26utm_medium%3Dfacebook\"><img src=\"https://a.fsdn.com/sd/facebook_icon_large.png\"></a>\n\n\n\n</div></p><p><a href=\"https://developers.slashdot.org/story/24/12/25/1611229/bret-taylor-urges-rethink-of-software-development-as-ai-reshapes-industry?utm_source=rss1.0moreanon&amp;utm_medium=feed\">Read more of this story</a> at Slashdot.</p>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Microsoft Integrates a Free Version of Its 'Copilot' Coding AI Into GitHub, VS Code","url":"https://developers.slashdot.org/story/24/12/21/0443255/microsoft-integrates-a-free-version-of-its-copilot-coding-ai-into-github-vs-code?utm_source=rss1.0mainlinkanon&utm_medium=feed","date":1734802440,"author":"EditorDavid","unread":true,"content":"An anonymous reader shared this report from TechCrunch:\n\nMicrosoft-owned GitHub announced on Wednesday a free version of its popular Copilot code completion/AI pair programming tool, which will also now ship by default with Microsoft's popular VS Code editor. Until now, most developers had to pay a monthly fee, starting at $10 per month, with only verified students, teachers, and open source maintainers getting free access... \n\n\nThere are some limitations to the free version, which is geared toward occasional users, not major work on a big project. Developers on the free plan will get access to 2,000 code completions per month, for example, and as a GitHub spokesperson told me, each Copilot code suggestion will count against this limit &mdash; not just accepted suggestions. And while GitHub recently added the ability to switch between different foundation models, users on the free plan are limited to Anthropic's Claude 3.5 Sonnet and OpenAI's GPT-4o. (The paid plans also include Google's Gemini 1.5 Pro and OpenAI's o1-preview and -mini.) For Copilot Chat, the number of chat messages is limited to 50, but otherwise, there aren't any major limitations to the free service. Developers still get access to all Copilot Extensions and skills. \n\nThe free Copilot SKU will work in a number of editors, including VS Code, Visual Studio, and JetBrains, as well as on GitHub.com. \n\nGitHub's announcement ends with the words \"Happy coding!\" and calls the service \"GitHub Copilot Free.\" But TechCrunch points out there's already competition from services like Amazon Q Developer, as well as from companies like Tabnine and Qodo (previously known as Codium) &mdash; and they typically offer a free tier. But in addition, \"With Copilot Free, we are returning to our freemium roots,\" GitHub CEO Thomas Dohmke told TechCrunch, as well as \"laying the groundwork for something far greater: AI represents our best path to enabling a GitHub with one billion developers. \n\n\"There should be no barrier to entry for experiencing the joy of creating software. Now six years after being acquired by Microsoft, it indeed appears GitHub is still GitHub &mdash; and we are doing our thing.\" \n\nOr, as GitHub CEO Satya Nadella said in a video posted on LinkedIn, \"The joy of coding is back! And we are looking forward to bringing the same experience to so many more people around the world.\"<p><div class=\"share_submission\" style=\"position:relative;\">\n<a class=\"slashpop\" href=\"http://twitter.com/home?status=Microsoft+Integrates+a+Free+Version+of+Its+'Copilot'+Coding+AI+Into+GitHub%2C+VS+Code%3A+https%3A%2F%2Fdevelopers.slashdot.org%2Fstory%2F24%2F12%2F21%2F0443255%2F%3Futm_source%3Dtwitter%26utm_medium%3Dtwitter\"><img src=\"https://a.fsdn.com/sd/twitter_icon_large.png\"></a>\n<a class=\"slashpop\" href=\"http://www.facebook.com/sharer.php?u=https%3A%2F%2Fdevelopers.slashdot.org%2Fstory%2F24%2F12%2F21%2F0443255%2Fmicrosoft-integrates-a-free-version-of-its-copilot-coding-ai-into-github-vs-code%3Futm_source%3Dslashdot%26utm_medium%3Dfacebook\"><img src=\"https://a.fsdn.com/sd/facebook_icon_large.png\"></a>\n\n\n\n</div></p><p><a href=\"https://developers.slashdot.org/story/24/12/21/0443255/microsoft-integrates-a-free-version-of-its-copilot-coding-ai-into-github-vs-code?utm_source=rss1.0moreanon&amp;utm_medium=feed\">Read more of this story</a> at Slashdot.</p>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Amazon Says Developers Spend 'Just One Hour Per Day' on Actual Coding","url":"https://developers.slashdot.org/story/24/12/12/0414226/amazon-says-developers-spend-just-one-hour-per-day-on-actual-coding?utm_source=rss1.0mainlinkanon&utm_medium=feed","date":1733977800,"author":"msmash","unread":true,"content":"An anonymous reader shares a report: Amazon Web Services said in a post earlier this month that developers report spending an average of \"just one hour per day\" on actual coding. But that doesn't mean these workers twiddle their thumbs the remaining seven hours per day. Instead, developers spend the majority of their time on \"tedious, undifferentiated tasks such as learning codebases, writing and reviewing documentation, testing, managing deployments, troubleshooting issues or finding and fixing vulnerabilities,\" according to Amazon Web Services.<p><div class=\"share_submission\" style=\"position:relative;\">\n<a class=\"slashpop\" href=\"http://twitter.com/home?status=Amazon+Says+Developers+Spend+'Just+One+Hour+Per+Day'+on+Actual+Coding%3A+https%3A%2F%2Fdevelopers.slashdot.org%2Fstory%2F24%2F12%2F12%2F0414226%2F%3Futm_source%3Dtwitter%26utm_medium%3Dtwitter\"><img src=\"https://a.fsdn.com/sd/twitter_icon_large.png\"></a>\n<a class=\"slashpop\" href=\"http://www.facebook.com/sharer.php?u=https%3A%2F%2Fdevelopers.slashdot.org%2Fstory%2F24%2F12%2F12%2F0414226%2Famazon-says-developers-spend-just-one-hour-per-day-on-actual-coding%3Futm_source%3Dslashdot%26utm_medium%3Dfacebook\"><img src=\"https://a.fsdn.com/sd/facebook_icon_large.png\"></a>\n\n\n\n</div></p><p><a href=\"https://developers.slashdot.org/story/24/12/12/0414226/amazon-says-developers-spend-just-one-hour-per-day-on-actual-coding?utm_source=rss1.0moreanon&amp;utm_medium=feed\">Read more of this story</a> at Slashdot.</p>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Google's New Jules AI Agent Will Help Developers Fix Buggy Code","url":"https://developers.slashdot.org/story/24/12/11/1734248/googles-new-jules-ai-agent-will-help-developers-fix-buggy-code?utm_source=rss1.0mainlinkanon&utm_medium=feed","date":1733947260,"author":"msmash","unread":true,"content":"Google has announced an experimental AI-powered code agent called \"Jules\" that can automatically fix coding errors for developers. From a report: Jules was introduced today alongside Gemini 2.0, and uses the updated Google AI model to create multi-step plans to address issues, modify multiple files, and prepare pull requests for Python and Javascript coding tasks in GitHub workflows. \n\nMicrosoft introduced a similar experience for GitHub Copilot last year that can recognize and explain code, alongside recommending changes and fixing bugs. Jules will compete against Microsoft's offering, and also against tools like Cursor and even Claude and ChatGPT's coding abilities. Google's launch of a coding-focused AI assistant is no surprise -- CEO Sundar Pichai said in October that more than a quarter of all new code at the company is now generated by AI. \n\n\"Jules handles bug fixes and other time-consuming tasks while you focus on what you actually want to build,\" Google says in its blog post. \"This effort is part of our long-term goal of building AI agents that are helpful in all domains, including coding.\"<p><div class=\"share_submission\" style=\"position:relative;\">\n<a class=\"slashpop\" href=\"http://twitter.com/home?status=Google's+New+Jules+AI+Agent+Will+Help+Developers+Fix+Buggy+Code%3A+https%3A%2F%2Fdevelopers.slashdot.org%2Fstory%2F24%2F12%2F11%2F1734248%2F%3Futm_source%3Dtwitter%26utm_medium%3Dtwitter\"><img src=\"https://a.fsdn.com/sd/twitter_icon_large.png\"></a>\n<a class=\"slashpop\" href=\"http://www.facebook.com/sharer.php?u=https%3A%2F%2Fdevelopers.slashdot.org%2Fstory%2F24%2F12%2F11%2F1734248%2Fgoogles-new-jules-ai-agent-will-help-developers-fix-buggy-code%3Futm_source%3Dslashdot%26utm_medium%3Dfacebook\"><img src=\"https://a.fsdn.com/sd/facebook_icon_large.png\"></a>\n\n\n\n</div></p><p><a href=\"https://developers.slashdot.org/story/24/12/11/1734248/googles-new-jules-ai-agent-will-help-developers-fix-buggy-code?utm_source=rss1.0moreanon&amp;utm_medium=feed\">Read more of this story</a> at Slashdot.</p>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Open Source Maintainers Are Drowning in Junk Bug Reports Written By AI","url":"https://developers.slashdot.org/story/24/12/10/2334221/open-source-maintainers-are-drowning-in-junk-bug-reports-written-by-ai?utm_source=rss1.0mainlinkanon&utm_medium=feed","date":1733878800,"author":"msmash","unread":true,"content":"An anonymous reader shares a report: Software vulnerability submissions generated by AI models have ushered in a \"new era of slop security reports for open source\" -- and the devs maintaining these projects wish bug hunters would rely less on results produced by machine learning assistants. Seth Larson, security developer-in-residence at the Python Software Foundation, raised the issue in a blog post last week, urging those reporting bugs not to use AI systems for bug hunting. \n\n\"Recently I've noticed an uptick in extremely low-quality, spammy, and LLM-hallucinated security reports to open source projects,\" he wrote, pointing to similar findings from the Curl project in January. \"These reports appear at first glance to be potentially legitimate and thus require time to refute.\" Larson argued that low-quality reports should be treated as if they're malicious. \n\nAs if to underscore the persistence of these concerns, a Curl project bug report posted on December 8 shows that nearly a year after maintainer Daniel Stenberg raised the issue, he's still confronted by \"AI slop\" -- and wasting his time arguing with a bug submitter who may be partially or entirely automated.<p><div class=\"share_submission\" style=\"position:relative;\">\n<a class=\"slashpop\" href=\"http://twitter.com/home?status=Open+Source+Maintainers+Are+Drowning+in+Junk+Bug+Reports+Written+By+AI%3A+https%3A%2F%2Fdevelopers.slashdot.org%2Fstory%2F24%2F12%2F10%2F2334221%2F%3Futm_source%3Dtwitter%26utm_medium%3Dtwitter\"><img src=\"https://a.fsdn.com/sd/twitter_icon_large.png\"></a>\n<a class=\"slashpop\" href=\"http://www.facebook.com/sharer.php?u=https%3A%2F%2Fdevelopers.slashdot.org%2Fstory%2F24%2F12%2F10%2F2334221%2Fopen-source-maintainers-are-drowning-in-junk-bug-reports-written-by-ai%3Futm_source%3Dslashdot%26utm_medium%3Dfacebook\"><img src=\"https://a.fsdn.com/sd/facebook_icon_large.png\"></a>\n\n\n\n</div></p><p><a href=\"https://developers.slashdot.org/story/24/12/10/2334221/open-source-maintainers-are-drowning-in-junk-bug-reports-written-by-ai?utm_source=rss1.0moreanon&amp;utm_medium=feed\">Read more of this story</a> at Slashdot.</p>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"Thanks to AI, the Hottest New Programming Language is... English","url":"https://developers.slashdot.org/story/24/12/08/2154224/thanks-to-ai-the-hottest-new-programming-language-is-english?utm_source=rss1.0mainlinkanon&utm_medium=feed","date":1733695020,"author":"EditorDavid","unread":true,"content":"\"Generative AI is transforming software development by enabling natural language prompts to generate code, reducing the need for traditional programming skills,\" argues Analytics India magazine.\n\n\nTraditionally, coding was the bastion of the select few who had mastered mighty languages like C++, Python, or Java. The idea of programming seemed exclusively reserved for those fluent in syntax and logic. However, the narrative is now being challenged by natural language coding being implemented in AI tools like GitHub Copilot. Andrej Karpathy, senior director of AI at Tesla predicted this trend last year.... English is emerging as the universal coding language. \n\nNVIDIA CEO Jensen Huang believes that English is becoming a new programming language thanks to AI advancements. Speaking at the World Government Summit, Huang explained, \"It is our job to create computing technology such that nobody has to program and that the programming language is human\"... He calls this a \"miracle of AI,\" emphasising how it closes the technology divide and empowers people from all fields to become effective technologists without traditional coding skills... \"In the future, you will tell the computer what you want, and it will do it,\"&#226; Huang commented. Large language models (LLMs) like OpenAI's GPT-4 and its successors have made this possible... \n\n\nMicrosoft CEO Satya Nadella has been equally vocal about the potential of English for coding. Microsoft's GitHub Copilot, an AI code assistant, enables developers to describe their needs in natural language and receive functional code in response. Nadella describes this as part of a broader mission to \"empower every person and every organisation on the planet to achieve more\".... In a discussion earlier last year, Stability AI CEO Emad Mostaque claimed, \"41% of codes on GitHub are AI-generated\"... \n\nIn 2024, the ability to program is no longer reserved for a few. It's a skill anyone can wield, thanks to the power of natural language processing and AI\n \n\"No longer is the power to create software restricted to those who can decipher programming languages,\" the article concludes. \"Anyone with a problem to solve and a clear enough articulation of that problem can now write software.\" \n\nAlthough the article also includes this consoling quote from Nvidia's Huang in March. \"There is an artistry to prompt engineering. It's how you fine-tune the instructions to get exactly what you want\"<p><div class=\"share_submission\" style=\"position:relative;\">\n<a class=\"slashpop\" href=\"http://twitter.com/home?status=Thanks+to+AI%2C+the+Hottest+New+Programming+Language+is...+English+%3A+https%3A%2F%2Fdevelopers.slashdot.org%2Fstory%2F24%2F12%2F08%2F2154224%2F%3Futm_source%3Dtwitter%26utm_medium%3Dtwitter\"><img src=\"https://a.fsdn.com/sd/twitter_icon_large.png\"></a>\n<a class=\"slashpop\" href=\"http://www.facebook.com/sharer.php?u=https%3A%2F%2Fdevelopers.slashdot.org%2Fstory%2F24%2F12%2F08%2F2154224%2Fthanks-to-ai-the-hottest-new-programming-language-is-english%3Futm_source%3Dslashdot%26utm_medium%3Dfacebook\"><img src=\"https://a.fsdn.com/sd/facebook_icon_large.png\"></a>\n\n\n\n</div></p><p><a href=\"https://developers.slashdot.org/story/24/12/08/2154224/thanks-to-ai-the-hottest-new-programming-language-is-english?utm_source=rss1.0moreanon&amp;utm_medium=feed\">Read more of this story</a> at Slashdot.</p>","flags":null,"enclosureUrl":"","enclosureMime":""},{"title":"The 2024 'Advent Calendars' Offering Programming Language Tips, Space Photos, and Memories","url":"https://entertainment.slashdot.org/story/24/12/04/0143242/the-2024-advent-calendars-offering-programming-language-tips-space-photos-and-memories?utm_source=rss1.0mainlinkanon&utm_medium=feed","date":1733672040,"author":"EditorDavid","unread":true,"content":"Not every tech \"advent calendar\" involves programming puzzles. Instead the geek tradition of programming-language advent calendars \"seems to have started way back in 2000,\" according to one history, \"when London-based programmer Mark Fowler launched a calendar highlighting a different Perl module each day.\" \nSo the tradition continues...\n\nNearly a quarter of a century later, there's still a Perl Advent Calendar, celebrating tips and tricks like \"a few special packages waiting under the tree that can give your web applications a little extra pep in their step.\"\nAnd of course there's a separate advent calendar for Raku programmers.\nSince 2009 web performance consultant (and former Yahoo and Facebook engineer) Stoyan Stefanov has been pulling together an annual Web Performance calendar with helpful blog posts. \nThere's also a JVM Advent calendar with daily helpful hints for Java programmers.\nAnother advent calendar promises daily posts about C#.\nThe HTMHell site &mdash; which bills itself as \"a collection of bad practices in HTML, copied from real websites\" &mdash; is celebrating the season with the \"HTMHell Advent Calendar,\" promising daily articles on security, accessibility, UX, and performance.\nThere's even an advent calendar with tips for the reverse-engineering framework Radar.\nThere's still a lovely web-design themed calendar at Designcember.com.\n\n\nAnd meanwhile developers at the Svelte frontend framework are actually promising to release something new each day, \"whether it's a new feature in Svelte or SvelteKit or an improvement to the website!\" \n\n\nBut not every tech advent calendar is about programming...\n\nAdafruit's managing director is publishing a Retrocomputing Advent Calendar &mdash; daily looks at the ghosts of computers past.\n\nThe Atlantic continues its 17-year tradition of a Space Telescope advent calendar, featuring daily images from both NASA's Hubble telescope and James Webb Space Telescope\nThe gaming blog Rock Paper Shotgun has been counting down their favorite games of 2024...\n<p><div class=\"share_submission\" style=\"position:relative;\">\n<a class=\"slashpop\" href=\"http://twitter.com/home?status=The+2024+'Advent+Calendars'+Offering+Programming+Language+Tips%2C+Space+Photos%2C+and+Memories%3A+https%3A%2F%2Fentertainment.slashdot.org%2Fstory%2F24%2F12%2F04%2F0143242%2F%3Futm_source%3Dtwitter%26utm_medium%3Dtwitter\"><img src=\"https://a.fsdn.com/sd/twitter_icon_large.png\"></a>\n<a class=\"slashpop\" href=\"http://www.facebook.com/sharer.php?u=https%3A%2F%2Fentertainment.slashdot.org%2Fstory%2F24%2F12%2F04%2F0143242%2Fthe-2024-advent-calendars-offering-programming-language-tips-space-photos-and-memories%3Futm_source%3Dslashdot%26utm_medium%3Dfacebook\"><img src=\"https://a.fsdn.com/sd/facebook_icon_large.png\"></a>\n\n\n\n</div></p><p><a href=\"https://entertainment.slashdot.org/story/24/12/04/0143242/the-2024-advent-calendars-offering-programming-language-tips-space-photos-and-memories?utm_source=rss1.0moreanon&amp;utm_medium=feed\">Read more of this story</a> at Slashdot.</p>","flags":null,"enclosureUrl":"","enclosureMime":""}]}