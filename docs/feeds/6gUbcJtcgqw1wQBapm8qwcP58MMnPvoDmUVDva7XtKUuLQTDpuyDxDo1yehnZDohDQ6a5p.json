{"id":"6gUbcJtcgqw1wQBapm8qwcP58MMnPvoDmUVDva7XtKUuLQTDpuyDxDo1yehnZDohDQ6a5p","title":"Slashdot: Developers","displayTitle":"Dev - Slashdot - Dev","url":"http://rss.slashdot.org/Slashdot/slashdotDevelopers","feedLink":"https://developers.slashdot.org/","isQuery":false,"isEmpty":false,"isHidden":false,"itemCount":15,"items":[{"title":"Arch Linux Is the Latest Distro Replacing Redis with Valkey","url":"https://news.slashdot.org/story/25/04/19/0413205/arch-linux-is-the-latest-distro-replacing-redis-with-valkey?utm_source=rss1.0mainlinkanon&utm_medium=feed","date":1745084040,"author":"EditorDavid","guid":276,"unread":true,"content":"In NoSQL database news, Arch Linux \"is the latest Linux distribution replacing its Redis packages with the Valkey fork,\" reports Phoronix. \n\nValkey is backed by the Linux Foundation, Google, Amazon Web Services, and Oracle, which the article points out is due to Redis's decision last year to shift the upstream Redis license from a BSD 3-clause to RSALv2 and SSPLv1.\n\n\nValkey is replacing Redis in the Arch Linux extra repository and after a two week period the Redis package will be moved out to AUR and receive no further updates. Users are encouraged to migrate to Valkey as soon as possible.\n","contentLength":597,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"OpenAI Debuts Codex CLI, an Open Source Coding Tool For Terminals","url":"https://developers.slashdot.org/story/25/04/16/1931240/openai-debuts-codex-cli-an-open-source-coding-tool-for-terminals?utm_source=rss1.0mainlinkanon&utm_medium=feed","date":1744835400,"author":"msmash","guid":275,"unread":true,"content":"OpenAI has released Codex CLI, an open-source coding agent that runs locally in users' terminal software. Announced alongside the company's new o3 and o4-mini models, Codex CLI directly connects OpenAI's AI systems with local code and computing tasks, enabling them to write and manipulate code on users' machines. \n\nThe lightweight tool allows developers to leverage multimodal reasoning capabilities by passing screenshots or sketches to the model while providing access to local code repositories. Unlike more ambitious future plans for an \"agentic software engineer\" that could potentially build entire applications from descriptions, Codex CLI focuses specifically on integrating AI models with command-line interfaces. \n\nTo accelerate adoption, OpenAI is distributing $1 million in API credits through a grant program, offering $25,000 blocks to selected projects. While the tool expands AI's role in programming workflows, it comes with inherent risks -- studies show AI coding models frequently fail to fix security vulnerabilities and sometimes introduce new bugs, particularly concerning when given system-level access.","contentLength":1129,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Figma Sent a Cease-and-Desist Letter To Lovable Over the Term 'Dev Mode'","url":"https://yro.slashdot.org/story/25/04/15/203233/figma-sent-a-cease-and-desist-letter-to-lovable-over-the-term-dev-mode?utm_source=rss1.0mainlinkanon&utm_medium=feed","date":1744747800,"author":"BeauHD","guid":274,"unread":true,"content":"An anonymous reader quotes a report from TechCrunch: Figma has sent a cease-and-desist letter to popular no-code AI startup Lovable, Figma confirmed to TechCrunch. The letter tells Lovable to stop using the term \"Dev Mode\" for a new product feature. Figma, which also has a feature called Dev Mode, successfully trademarked that term last year, according to the U.S. Patent and Trademark office. What's wild is that \"dev mode\" is a common term used in many products that cater to software programmers. It's like an edit mode. Software products from giant companies like Apple's iOS, Google's Chrome, Microsoft's Xbox have features formally called \"developer mode\" that then get nicknamed \"dev mode\" in reference materials.\n \nEven \"dev mode\" itself is commonly used. For instance Atlassian used it in products that pre-date Figma's copyright by years. And it's a common feature name in countless open source software projects. Figma tells TechCrunch that its trademark refers only to the shortcut \"Dev Mode\" -- not the full term \"developer mode.\" Still, it's a bit like trademarking the term \"bug\" to refer to \"debugging.\" Since Figma wants to own the term, it has little choice but send cease-and-desist letters. (The letter, as many on X pointed out, was very polite, too.) If Figma doesn't defend the term, it could be absorbed as a generic term and the trademarked becomes unenforceable.","contentLength":1390,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"You Should Still Learn To Code, Says GitHub CEO","url":"https://developers.slashdot.org/story/25/04/15/1853254/you-should-still-learn-to-code-says-github-ceo?utm_source=rss1.0mainlinkanon&utm_medium=feed","date":1744743180,"author":"msmash","guid":273,"unread":true,"content":"You should still learn to code, says GitHub's CEO. And you should start as soon as possible. From a report: \"I strongly believe that every kid, every child, should learn coding,\" Thomas Dohmke said in a recent podcast interview with EO. \"We should actually teach them coding in school, in the same way that we teach them physics and geography and literacy and math and what-not.\" Coding, he added, is one such fundamental skill -- and the only reason it's not part of the curriculum is because it took \"us too long to actually realize that.\" \n\nDohmke, who's been a programmer since the 90s, said he's never seen \"anything more exciting\" than the current moment in engineering -- the advent of AI, he believes, has made the field that much easier to break into, and is poised to make software more ubiquitous than ever. \"It's so much easier to get into software development. You can just write a prompt into Copilot or ChatGPT or similar tools, and it will likely write you a basic webpage, or a small application, a game in Python,\" Dohmke said. \"And so, AI makes software development so much more accessible for anyone who wants to learn coding.\" \n\nAI, Dohmke said, helps to \"realize the dream\" of bringing an idea to life, meaning that fewer projects will end up dead in the water, and smaller teams of developers will be enabled to tackle larger-scale projects. Dohmke said he believes it makes the overall process of creation more efficient. \"You see some of the early signs of that, where very small startups -- sometimes five developers and some of them actually only one developer -- believe they can become million, if not billion dollar businesses by leveraging all the AI agents that are available to them,\" he added.","contentLength":1727,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Torvalds Celebrates Git's 20th Anniversary. Is It More Famous Than Linux?","url":"https://linux.slashdot.org/story/25/04/13/0110228/torvalds-celebrates-gits-20th-anniversary-is-it-more-famous-than-linux?utm_source=rss1.0mainlinkanon&utm_medium=feed","date":1744515840,"author":"EditorDavid","guid":261,"unread":true,"content":"Celebrating Git's 20th anniversary, GitHub hosted a Q&amp;A with Linus Torvalds, writes Its FOSS News. \n\nAmong the other revelations: He says his college-age daughter sent a texting saying he's better known at her CS lab for Git than for Linux, \"because they actually use Git for everything there.\" Which he describes as \"ridiculous\" because he maintained it for just four months before handing it off to Junio Hamano who's been heading up development for more than 19 years now. \"When it did what I needed,\" Torvalds says, \"I lost interest.\"\n\n\n Linus then goes on to share how Git was never a big thing for him, but a means to an end that prevented the Linux kernel from descending into chaos over the absence of a version control system. You see, before Git, Linux used BitKeeper for version control, but its proprietary licensing didn't sit too well with other Linux contributors, and Linus Torvalds had to look for alternatives. As it turned out, existing tools like CVS and Subversion were too slow for the job at hand, prompting him to build a new tool from scratch, with the coding part just taking 10 days for an early self-hostable version of Git. \nIn its initial days, there were some teething issues, where users would complain about Git to Linus, even finding it too difficult to use, but things got calmer as the tool developed further. \n\nTorvalds thinks some early adopters had trouble because they were coming from a background that was more like CVS. \"The Git mindset, I came at it from a file system person's standpoint, where I had this disdain and almost hatred of most source control management projects, so I was not at all interested in maintaining the status quo.\"","contentLength":1683,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"AI Models Still Struggle To Debug Software, Microsoft Study Shows","url":"https://developers.slashdot.org/story/25/04/11/0519242/ai-models-still-struggle-to-debug-software-microsoft-study-shows?utm_source=rss1.0mainlinkanon&utm_medium=feed","date":1744348800,"author":"msmash","guid":272,"unread":true,"content":"Some of the best AI models today still struggle to resolve software bugs that wouldn't trip up experienced devs. TechCrunch: A new study from Microsoft Research, Microsoft's R&amp;D division, reveals that models, including Anthropic's Claude 3.7 Sonnet and OpenAI's o3-mini, fail to debug many issues in a software development benchmark called SWE-bench Lite. The results are a sobering reminder that, despite bold pronouncements from companies like OpenAI, AI is still no match for human experts in domains such as coding. \n\nThe study's co-authors tested nine different models as the backbone for a \"single prompt-based agent\" that had access to a number of debugging tools, including a Python debugger. They tasked this agent with solving a curated set of 300 software debugging tasks from SWE-bench Lite. \n\nAccording to the co-authors, even when equipped with stronger and more recent models, their agent rarely completed more than half of the debugging tasks successfully. Claude 3.7 Sonnet had the highest average success rate (48.4%), followed by OpenAI's o1 (30.2%), and o3-mini (22.1%).","contentLength":1090,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Python's PyPI Finally Gets Closer to Adding 'Organization Accounts' and SBOMs","url":"https://developers.slashdot.org/story/25/04/05/0515241/pythons-pypi-finally-gets-closer-to-adding-organization-accounts-and-sboms?utm_source=rss1.0mainlinkanon&utm_medium=feed","date":1743870840,"author":"EditorDavid","guid":271,"unread":true,"content":"Back in 2023 Python's infrastructure director called it \"the first step in our plan to build financial support and long-term sustainability of PyPI\" while giving users \"one of our most requested features: organization accounts.\" (That is, \"self-managed teams with their own exclusive branded web addresses\" to make their massive Python Package Index repository \"easier to use for large community projects, organizations, or companies who manage multiple sub-teams and multiple packages.\") \nNearly two years later, they've announced that they're \"making progress\" on its rollout...\nOver the last month, we have taken some more baby steps to onboard new Organizations, welcoming 61 new Community Organizations and our first 18 Company Organizations. We're still working to improve the review and approval process and hope to improve our processing speed over time. To date, we have 3,562 Community and 6,424 Company Organization requests to process in our backlog. \nThey've also onboarded a PyPI Support Specialist to provide \"critical bandwidth to review the backlog of requests\" and \"free up staff engineering time to develop features to assist in that review.\" (And \"we were finally able to finalize our Terms of Service document for PyPI,\" build the tooling necessary to notify users, and initiate the Terms of Service rollout. [Since launching 20 years ago PyPi's terms of service have only been updated twice.] \n\nIn other news the security developer-in-residence at the Python Software Foundation has been continuing work on a Software Bill-of-Materials (SBOM) as described in Python Enhancement Proposal #770. The feature \"would designate a specific directory inside of Python package metadata (\".dist-info/sboms\") as a directory where build backends and other tools can store SBOM documents that describe components within the package beyond the top-level component.\"\n\nThe goal of this project is to make bundled dependencies measurable by software analysis tools like vulnerability scanning, license compliance, and static analysis tools. Bundled dependencies are common for scientific computing and AI packages, but also generally in packages that use multiple programming languages like C, C++, Rust, and JavaScript. The PEP has been moved to Provisional Status, meaning the PEP sponsor is doing a final review before tools can begin implementing the PEP ahead of its final acceptance into changing Python packaging standards. Seth has begun implementing code that tools can use when adopting the PEP, such as a project which abstracts different Linux system package managers functionality to reverse a file path into the providing package metadata. \n\nSecurity developer-in-residence Seth Larson will be speaking about this project at PyCon US 2025 in Pittsburgh, PA in a talk titled \"Phantom Dependencies: is your requirements.txt haunted?\" \n\nMeanwhile InfoWorld reports that newly approved Python Enhancement Proposal 751 will also give Python a standard lock file format.","contentLength":2983,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Oracle Tells Clients of Second Recent Hack, Log-In Data Stolen","url":"https://developers.slashdot.org/story/25/04/03/198224/oracle-tells-clients-of-second-recent-hack-log-in-data-stolen?utm_source=rss1.0mainlinkanon&utm_medium=feed","date":1743707280,"author":"msmash","guid":270,"unread":true,"content":"An anonymous reader shares a report: Oracle has told customers that a hacker broke into a computer system and stole old client log-in credentials, according to two people familiar with the matter. It's the second cybersecurity breach that the software company has acknowledged to clients in the last month. \n\nOracle staff informed some clients this week that the attacker gained access to usernames, passkeys and encrypted passwords, according to the people, who spoke on condition that they not be identified because they're not authorized to discuss the matter. Oracle also told them that the FBI and cybersecurity firm CrowdStrike are investigating the incident, according to the people, who added that the attacker sought an extortion payment from the company. Oracle told customers that the intrusion is separate from another hack that the company flagged to some health-care customers last month, the people said.","contentLength":919,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"95% of Code Will Be AI-Generated Within Five Years, Microsoft CTO Says","url":"https://developers.slashdot.org/story/25/04/02/1611229/95-of-code-will-be-ai-generated-within-five-years-microsoft-cto-says?utm_source=rss1.0mainlinkanon&utm_medium=feed","date":1743610260,"author":"msmash","guid":269,"unread":true,"content":"Microsoft Chief Technology Officer Kevin Scott has predicted that AI will generate 95% of code within five years. Speaking on the 20VC podcast, Scott said AI would not replace software engineers but transform their role. \"It doesn't mean that the AI is doing the software engineering job.... authorship is still going to be human,\" Scott said. \n\nAccording to Scott, developers will shift from writing code directly to guiding AI through prompts and instructions. \"We go from being an input master (programming languages) to a prompt master (AI orchestrator),\" he said. Scott said the current AI systems have significant memory limitations, making them \"awfully transactional,\" but predicted improvements within the next year.","contentLength":725,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"'There is No Vibe Engineering'","url":"https://developers.slashdot.org/story/25/04/01/0129224/there-is-no-vibe-engineering?utm_source=rss1.0mainlinkanon&utm_medium=feed","date":1743471000,"author":"msmash","guid":268,"unread":true,"content":"Software engineer Sergey Tselovalnikov weighs in on the new hype: The term caught on and Twitter quickly flooded with posts about how AI has radically transformed coding and will soon replace all software engineers. While AI undeniably impacts the way we write code, it hasn't fundamentally changed our role as engineers. Allow me to explain. \n\n[...] Vibe coding is interacting with the codebase via prompts. As the implementation is hidden from the \"vibe coder\", all the engineering concerns will inevitably get ignored. Many of the concerns are hard to express in a prompt, and many of them are hard to verify by only inspecting the final artifact. Historically, all engineering practices have tried to shift all those concerns left -- to the earlier stages of development when they're cheap to address. Yet with vibe coding, they're shifted very far to the right -- when addressing them is expensive. \n\nThe question of whether an AI system can perform the complete engineering cycle and build and evolve software the same way a human can remains open. However, there are no signs of it being able to do so at this point, and if it one day happens, it won't have anything to do with vibe coding -- at least the way it's defined today. \n\n[...] It is possible that there'll be a future where software is built from vibe-coded blocks, but the work of designing software able to evolve and scale doesn't go away. That's not vibe engineering -- that's just engineering, even if the coding part of it will look a bit different.","contentLength":1523,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Open Source Genetic Database Shuts Down To Protect Users From 'Authoritarian Governments'","url":"https://science.slashdot.org/story/25/03/31/1926246/open-source-genetic-database-shuts-down-to-protect-users-from-authoritarian-governments?utm_source=rss1.0mainlinkanon&utm_medium=feed","date":1743450000,"author":"BeauHD","guid":267,"unread":true,"content":"An anonymous reader quotes a report from 404 Media: The creator of an open source genetic database is shutting it down and deleting all of its data because he has come to believe that its existence is dangerous with \"a rise in far-right and other authoritarian governments\" in the United States and elsewhere. \"The largest use case for DTC genetic data was not biomedical research or research in big pharma,\" Bastian Greshake Tzovaras, the founder of OpenSNP, wrote in a blog post. \"Instead, the transformative impact of the data came to fruition among law enforcement agencies, who have put the genealogical properties of genetic data to use.\"\n \nOpenSNP has collected roughly 7,500 genomes over the last 14 years, primarily by allowing people to voluntarily submit their own genetic information they have downloaded from 23andMe. With the bankruptcy of 23andMe, increased interest in genetic data by law enforcement, and the return of Donald Trump and rise of authoritarian governments worldwide, Greshake Tzovaras told 404 Media he no longer believes it is ethical to run the database. \"I've been thinking about it since 23andMe was on the verge of bankruptcy and been really considering it since the U.S. election. It definitely is really bad over there [in the United States],\" Greshake Tzovaras told 404 Media. \"I am quite relieved to have made the decision and come to a conclusion. It's been weighing on my mind for a long time.\"\n \nGreshake Tzovaras said that he is proud of the OpenSNP project, but that, in a world where scientific data is being censored and deleted and where the Trump administration has focused on criminalizing immigrants and trans people, he now believes that the most responsible thing to do is to delete the data and shut down the project. \"Most people in OpenSNP may not be at particular risk right now, but there are people from vulnerable populations in here as well,\" Greshake Tzovaras said. \"Thinking about gender representation, minorities, sexual orientation -- 23andMe has been working on the whole 'gay gene' thing, it's conceivable that this would at some point in the future become an issue.\" \"Across the globe there is a rise in far-right and other authoritarian governments. While they are cracking down on free and open societies, they are also dedicated to replacing scientific thought and reasoning with pseudoscience across disciplines,\" Greshake Tzovaras wrote. \"The risk/benefit calculus of providing free &amp; open access to individual genetic data in 2025 is very different compared to 14 years ago. And so, sunsetting openSNP -- along with deleting the data stored within it -- feels like it is the most responsible act of stewardship for these data today.\"\n \n\"The interesting thing to me is there are data preservation efforts in the U.S. because the government is deleting scientific data that they don't like. This is approaching that same problem from a different direction,\" he added. \"We need to protect the people in this database. I am supportive of preserving scientific data and knowledge, but the data comes second -- the people come first. We prefer deleting the data.\"","contentLength":3132,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"'No Longer Think You Should Learn To Code,' Says CEO of AI Coding Startup","url":"https://developers.slashdot.org/story/25/03/31/1623201/no-longer-think-you-should-learn-to-code-says-ceo-of-ai-coding-startup?utm_source=rss1.0mainlinkanon&utm_medium=feed","date":1743439200,"author":"msmash","guid":266,"unread":true,"content":"Learning to code has become sort of become pointless as AI increasingly dominates programming tasks, said Replit founder and chief executive Amjad Masad. \"I no longer think you should learn to code,\" Masad wrote on X. \n\nThe statement comes as major tech executives report significant AI inroads into software development. Google CEO Sundar Pichai recently revealed that 25% of new code at the tech giant is AI-generated, though still reviewed by engineers. Furthermore, Anthropic CEO Dario Amodei predicted AI could generate up to 90% of all code within six months. \n\nMasad called this shift a \"bittersweet realization\" after spending years popularizing coding through open-source work, Codecademy, and Replit -- a platform that now uses AI to help users build apps and websites. Instead of syntax-focused programming skills, Masad recommends learning \"how to think, how to break down problems... how to communicate clearly, with humans and with machines.\"","contentLength":956,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Copilot Can't Beat a 2013 'TouchDevelop' Code Generation Demo for Windows Phone","url":"https://developers.slashdot.org/story/25/03/30/2333226/copilot-cant-beat-a-2013-touchdevelop-code-generation-demo-for-windows-phone?utm_source=rss1.0mainlinkanon&utm_medium=feed","date":1743381240,"author":"EditorDavid","guid":265,"unread":true,"content":"What happens when you ask Copilot to \"write a program that can be run on an iPhone 16 to select 15 random photos from the phone, tint them to random colors, and display the photos on the phone\"? \n\nThat's what TouchDevelop did for the long-discontinued Windows Phone in a 2013 Microsoft Research 'SmartSynth' natural language code generation demo. (\"Write scripts by tapping on the screen.\") \n\nLong-time Slashdot reader theodp reports on what happens when, 14 years later, you pose the same question to Copilot:\n\n\"You'll get lots of code and caveats from Copilot, but nothing that you can execute as is. (Compare that to the functioning 10 lines of code TouchDevelop program). It's a good reminder that just because GenAI can generate code, it doesn't necessarily mean it will generate the least amount of code, the most understandable or appropriate code for the requestor, or code that runs unchanged and produces the desired results. \ntheodp also reminds us that TouchDevelop \"was (like BASIC) abandoned by Microsoft...\"\n\n\nInterestingly, a Microsoft Research video from CS Education Week 2011 shows enthusiastic Washington high school students participating in an hour-long TouchDevelop coding lesson and demonstrating the apps they created that tapped into music, photos, the Internet, and yes, even their phone's functionality. This shows how lacking iPhone and Android still are today as far as easy programmability-for-the-masses goes. (When asked, Copilot replied that Apple's Shortcuts app wasn't up to the task).","contentLength":1521,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"How Rust Finally Got a Specification - Thanks to a Consultancy's Open-Source Donation","url":"https://developers.slashdot.org/story/25/03/30/198218/how-rust-finally-got-a-specification---thanks-to-a-consultancys-open-source-donation?utm_source=rss1.0mainlinkanon&utm_medium=feed","date":1743361860,"author":"EditorDavid","guid":264,"unread":true,"content":"As Rust approaches its 10th anniversary, \"there is an important piece of documentation missing that many other languages provide,\" notes the Rust Foundation. \nWhile there's documentation and tutorials — there's no official language specification:\n\nIn December 2022, an RFC was submitted to encourage the Rust Project to begin working on a specification. After much discussion, the RFC was approved in July 2023, and work began. \n\nInitially, the Rust Project specification team (t-spec) were interested in creating the document from scratch using the Rust Reference as a guiding marker. However, the team knew there was already an external Rust specification that was being used successfully for compiler qualification purposes — the FLS. \n\nThank Berlin-based Ferrous Systems, a Rust-based consultancy who assembled that description \"some years ago,\" according to a post on the Rust blog:\n They've since been faithfully maintaining and updating this document for new versions of Rust, and they've successfully used it to qualify toolchains based on Rust for use in safety-critical industries. [The Rust Foundation notes it part of the consultancy's \"Ferrocene\" Rust compiler/toolchain.] Seeing this success, others have also begun to rely on the FLS for their own qualification efforts when building with Rust. \n\nThe Rust Foundation explains:\n\nThe FLS provides a structured and detailed reference for Rust's syntax, semantics, and behavior, serving as a foundation for verification, compliance, and standardization efforts. Since Rust did not have an official language specification back then, nor a plan to write one, the FLS represented a major step toward describing Rust in a way that aligns with industry requirements, particularly in high-assurance domains. \n\nAnd the Rust Project is \"passionate about shipping high quality tools that enable people to build reliable software at scale,\" adds the Rust blog. So...\n\nIt's in that light that we're pleased to announce that we'll be adopting the FLS into the Rust Project as part of our ongoing specification efforts. This adoption is being made possible by the gracious donation of the FLS by Ferrous Systems. We're grateful to them for the work they've done in assembling the FLS, in making it fit for qualification purposes, in promoting its use and the use of Rust generally in safety-critical industries, and now, for working with us to take the next step and to bring the FLS into the Project. \n\nWith this adoption, we look forward to better integrating the FLS with the processes of the Project and to providing ongoing and increased assurances to all those who use Rust in safety-critical industries and, in particular, to those who use the FLS as part of their qualification efforts. \n\nMore from the Rust Foundation:\n\nThe t-spec team wanted to avoid potential confusion from having two highly visible Rust specifications in the industry and so decided it would be worthwhile to try to integrate the FLS with the Rust Reference to create the official Rust Project specification. They approached Ferrous Systems, which agreed to contribute its FLS to the Rust Project and allow the Rust Project to take over its development and management... This generous donation will provide a clearer path to delivering an official Rust specification. It will also empower the Rust Project to oversee its ongoing evolution, providing confidence to companies and individuals already relying on the FLS, and marking a major milestone for the Rust ecosystem. \n\n\"I really appreciate Ferrous taking this step to provide their specification to the Rust Project,\" said Joel Marcey, Director of Technology at the Rust Foundation and member of the t-spec team. \"They have already done a massive amount of legwork....\" This effort will provide others who require a Rust specification with an official, authoritative reference for their work with the Rust programming language... This is an exciting outcome. A heartfelt thank you to the Ferrous Systems team for their invaluable contribution! \n\nMarcey said the move allows the team \"to supercharge our progress in the delivery of an official Rust specification.\" \n\nAnd the co-founder of Ferrous Systems, Felix Gilcher, also sounded excited. \"We originally created the Ferrocene Language Specification to provide a structured and reliable description of Rust for the certification of the Ferrocene compiler. As an open source-first company, contributing the FLS to the Rust Project is a logical step toward fostering the development of a unified, community-driven specification that benefits all Rust users.\"","contentLength":4595,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Microsoft Announces 'Hyperlight Wasm': Speedy VM-Based Security at Scale with a WebAssembly Runtime","url":"https://developers.slashdot.org/story/25/03/30/0627205/microsoft-announces-hyperlight-wasm-speedy-vm-based-security-at-scale-with-a-webassembly-runtime?utm_source=rss1.0mainlinkanon&utm_medium=feed","date":1743345240,"author":"EditorDavid","guid":263,"unread":true,"content":"Cloud providers like the security of running things in virtual machines \"at scale\" — even though VMs \"are not known for having fast cold starts or a small footprint...\" noted Microsoft's Open Source blog last November. So Microsoft's Azure Core Upstream team built an open source Rust library called Hyperlight \"to execute functions as fast as possible while isolating those functions within a VM.\" \n\nBut that was just the beginning...\n\n Then, we showed how to run Rust functions really, really fast, followed by using C to [securely] run Javascript. In February 2025, the Cloud Native Computing Foundation (CNCF) voted to onboard Hyperlight into their Sandbox program [for early-stage projects]. \n\n[This week] we're announcing the release of Hyperlight Wasm: a Hyperlight virtual machine \"micro-guest\" that can run wasm component workloads written in many programming languages... \n\nTraditional virtual machines do a lot of work to be able to run programs. Not only do they have to load an entire operating system, they also boot up the virtual devices that the operating system depends on. Hyperlight is fast because it doesn't do that work; all it exposes to its VM guests is a linear slice of memory and a CPU. No virtual devices. No operating system. But this speed comes at the cost of compatibility. Chances are that your current production application expects a Linux operating system running on the x86-64 architecture (hardware), not a bare linear slice of memory... \n\n[B]uilding Hyperlight with a WebAssembly runtime — wasmtime — enables any programming language to execute in a protected Hyperlight micro-VM without any prior knowledge of Hyperlight at all. As far as program authors are concerned, they're just compiling for the wasm32-wasip2 target... Executing workloads in the Hyperlight Wasm guest isn't just possible for compiled languages like C, Go, and Rust, but also for interpreted languages like Python, JavaScript, and C#. The trick here, much like with containers, is to also include a language runtime as part of the image... Programming languages, runtimes, application platforms, and cloud providers are all starting to offer rich experiences for WebAssembly out of the box. If we do things right, you will never need to think about whether your application is running inside of a Hyperlight Micro-VM in Azure. You may never know your workload is executing in a Hyperlight Micro VM. And that's a good thing. \n\nWhile a traditional virtual-device-based VM takes about 125 milliseconds to load, \"When the Hyperlight VMM creates a new VM, all it needs do to is create a new slice of memory and load the VM guest, which in turn loads the wasm workload. This takes about 1-2 milliseconds today, and work is happening to bring that number to be less than 1 millisecond in the future.\" \n\nAnd there's also double security due to Wasmtime's software-defined runtime sandbox within Hyperlight's larger VM...","contentLength":2931,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null}],"tags":["dev","slashdot"]}